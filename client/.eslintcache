[{"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\index.js":"1","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\App.js":"2","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Navigation.js":"3","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Footer.js":"4","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Header.js":"5","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Body.js":"6","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\NotFound.js":"7","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Qna.js":"8","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\IdPw.js":"9","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Home.js":"10","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Compile.js":"11","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\News.js":"12","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Talk.js":"13","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrivateRoute.js":"14","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Writing.js":"15","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Board.js":"16","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Post.js":"17","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Chat.js":"18","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Login.js":"19","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\SignUp.js":"20","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PublicRoute.js":"21","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\AceImport.js":"22","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\TagBox.js":"23","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrismImport.js":"24"},{"size":236,"mtime":1611237644637,"results":"25","hashOfConfig":"26"},{"size":516,"mtime":1611666897608,"results":"27","hashOfConfig":"26"},{"size":451,"mtime":1615992148453,"results":"28","hashOfConfig":"26"},{"size":226,"mtime":1611237644445,"results":"29","hashOfConfig":"26"},{"size":1363,"mtime":1616595755565,"results":"30","hashOfConfig":"26"},{"size":2505,"mtime":1616595755560,"results":"31","hashOfConfig":"26"},{"size":563,"mtime":1616335561922,"results":"32","hashOfConfig":"26"},{"size":273,"mtime":1612008514270,"results":"33","hashOfConfig":"26"},{"size":1631,"mtime":1611237644791,"results":"34","hashOfConfig":"26"},{"size":343,"mtime":1611237644770,"results":"35","hashOfConfig":"26"},{"size":10095,"mtime":1615992148782,"results":"36","hashOfConfig":"26"},{"size":11133,"mtime":1616665675062,"results":"37","hashOfConfig":"26"},{"size":256,"mtime":1612008528051,"results":"38","hashOfConfig":"26"},{"size":583,"mtime":1616333441948,"results":"39","hashOfConfig":"26"},{"size":6252,"mtime":1616682419240,"results":"40","hashOfConfig":"26"},{"size":8153,"mtime":1616595755555,"results":"41","hashOfConfig":"26"},{"size":11617,"mtime":1616682419208,"results":"42","hashOfConfig":"26"},{"size":13358,"mtime":1616682419258,"results":"43","hashOfConfig":"26"},{"size":2549,"mtime":1616682419283,"results":"44","hashOfConfig":"26"},{"size":3045,"mtime":1616682419299,"results":"45","hashOfConfig":"26"},{"size":450,"mtime":1616595755582,"results":"46","hashOfConfig":"26"},{"size":1292,"mtime":1615038503929,"results":"47","hashOfConfig":"26"},{"size":3076,"mtime":1616670432692,"results":"48","hashOfConfig":"26"},{"size":982,"mtime":1611749161876,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"lwprbq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\index.js",[],["111","112"],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\App.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Navigation.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Footer.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Header.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Body.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\NotFound.js",["113"],"import React from \"react\";\r\nimport '../css/Components.css';\r\nimport errimg from '../css/code-error.png';\r\n\r\nfunction NotFound() {\r\n    return (\r\n    \t<div className=\"notfound\">\r\n    \t\t<img src={errimg}/>\r\n    \t\t<h2>요청하신 페이지를 찾을 수 없습니다.</h2>\r\n    \t\t<p>존재하지 않는 주소를 입력하셨거나, <br/>요청하신 페이지의 주소가 변경, 삭제되어 찾을 수 없습니다. <br/>입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\r\n    \t</div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Qna.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\IdPw.js",["114","115"],"import React, {useState} from \"react\";\r\nimport \"../css/Components.css\";\r\n\r\nfunction IdPw() {\r\n\r\n\tconst [Name,setName] = useState(\"\")\r\n\tconst [Email,setEmail] = useState(\"\")\r\n\tconst [ID,setID] = useState(\"\")\r\n\tconst [PW,setPW] = useState(\"\")\r\n\tconst onNameHandler = (event) => { setName (event.currentTarget.value) }\r\n\tconst onEmailHandler = (event) => { setEmail (event.currentTarget.value) }\r\n\tconst onIDHandler = (event) => { setID (event.currentTarget.value) }\r\n\tconst onPWHandler = (event) => { setPW (event.currentTarget.value) }\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<h3>아이디 찾기</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\t\t\t\t\t<button className=\"get-id\"> 찾기</button>\r\n\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>비밀번호 찾기</h3>\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<input className=\"ID-input\" type='text' placeholder='아이디' value={ID} onChange={onIDHandler} name='id'/>\r\n\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\r\n\t\t\t\t\t<button className=\"get-pw\"> 찾기</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default IdPw;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Home.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Compile.js",["116","117","118","119","120","121","122","123","124"],"import \"../css/Menu.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport AceEditor from \"../lib/AceImport\";\r\n\r\nfunction Compile() {\r\n\tconst[language, setLanguage] = useState(45);\r\n\tconst[output, setOutput] = useState();\r\n\tconst[input, setInput] = useState(``); \r\n\tconst[user_input, setUserInput] = useState(\"\");\r\n\tconst[lang, setLang] = useState(``);\r\n\tconst[basic, setBasic] = useState(``);\r\n\tconst aceinput = useRef(null);\r\n\r\n\tconst clear = (e) => { setInput(\"\"); setUserInput(\"\"); }\r\n\r\n\tconst lanChange = async (e) => { setLanguage(e.target.value); setmode(e.target.value);}\r\n\r\n\tfunction setmode(num){\r\n\t\tif(num === \"html\"){\r\n\t\t\tsetLang('html');\r\n\t\t\taceinput.current.editor.setValue('<div>Hello World!</div>');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tswitch(parseInt(num)){\r\n\t\t        //case 19 : setLang('crystal'); aceinput.current.editor.setValue(''); break;\r\n\t\t        //case 43 : setLang('plain_text'); aceinput.current.editor.setValue(''); break;\r\n\t\t        case 45 : setLang('assembly_x86'); aceinput.current.editor.setValue('section .data\\nmsg   db    \\'Hello world!\\', 0AH\\nlen   equ   $-msg\\n\\nsection .text\\nglobal _WinMain@16\\n\\n_WinMain@16:\\nmov   edx, len\\nmov   ecx, msg\\nmov   ebx, 1\\nmov   eax, 4\\n\\nint   80h\\n\\nmov   ebx, 0\\nmov   eax, 1\\nint   80h\\n'); break;\r\n\t\t        case 50 : setLang('c_cpp'); aceinput.current.editor.setValue('void main(){\\n\\tprintf(\"Hello World\");\\n}'); break;\r\n\t\t        case 51 : setLang('csharp'); aceinput.current.editor.setValue('using System;\\nclass HelloWorld {\\n  static void Main() {\\n    Console.WriteLine(\"Hello World\");\\n  }\\n}'); break;\r\n\t\t        case 54 : setLang('c_cpp'); aceinput.current.editor.setValue('#include <iostream>\\nusing namespace std;\\n\\nint main(){\\n    cout<<\"Hello world\";\\nreturn 0;\\n}'); break;\r\n\t\t        case 55 : setLang('lisp'); aceinput.current.editor.setValue('(defun hello ()\\n    (format t \"Hello, World!~%\"))\\n(hello)'); break;\r\n\t\t        case 56 : setLang('d'); aceinput.current.editor.setValue('import std.stdio; \\n\\nvoid main() {\\n    writeln(\"Hello world!\");\\n}'); break;\r\n\t\t        //case 57 : setLang('elixir'); aceinput.current.editor.setValue(''); break;\r\n\t\t        //case 58 : setLang('erlang'); aceinput.current.editor.setValue(''); break;\r\n\t\t        case 59 : setLang('fortran'); aceinput.current.editor.setValue('Program Hello\\nPrint *, \"Hello World\"\\nEnd Program Hello'); break;\r\n\t\t        case 60 : setLang('golang'); aceinput.current.editor.setValue('package main  \\n import \"fmt\"\\n func main() {\\n fmt.Println(\"Hello World\")\\n}'); break;\r\n\t\t        case 61 : setLang('haskell'); aceinput.current.editor.setValue('main = putStrLn \"Hello World\"'); break;\r\n\t\t        case 62 : setLang('java'); aceinput.current.editor.setValue('public class Main {\\n  public static void main(String[] args) {\\n    System.out.println(\"Hello World\");\\n  }\\n}'); break;\r\n\t\t        case 63 : setLang('javascript'); aceinput.current.editor.setValue('console.log(\"Hello world\");'); break;\r\n\t\t        case 64 : setLang('lua'); aceinput.current.editor.setValue('print \"Hello world\"'); break;\r\n\t\t        case 67 : setLang('pascal'); aceinput.current.editor.setValue('program Hello;\\nbegin\\n  writeln (\"Hello, world.\");\\nend.'); break;\r\n\t\t        case 68 : setLang('php'); aceinput.current.editor.setValue('<?php\\n echo \"Hello World\";'); break;\r\n\t\t        //case 69 : setLang('prolog'); aceinput.current.editor.setValue(''); break;\r\n\t\t        case 71 : setLang('python'); aceinput.current.editor.setValue('print(\"Hello World!\")'); break;\r\n\t\t        //왜안돼 case 72 : setLang('ruby'); aceinput.current.editor.setValue('puts \"Hello World\"'); break;\r\n\t\t        case 73 : setLang('rust'); aceinput.current.editor.setValue('fn main() {\\n    println!(\"Hello World\");\\n}'); break;\r\n\t\t        case 74 : setLang('typescript'); aceinput.current.editor.setValue('console.log(\"Hello\");'); break;\r\n\t\t        case 86 : setLang('clojure'); aceinput.current.editor.setValue('(ns clojure.examples.main\\n    (:gen-class))\\n(defn Example []    (println (str \"Hello World\")) )\\n(Example)'); break;\r\n\t\t        defualt : aceinput.current.editor.setValue('default');\r\n    \t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst test = async(e) => {\r\n\t\tsetUserInput(e.target.value);\r\n\t}\r\n\r\n\tconst run = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(language == \"html\") {\r\n\t\t\tlet outputText = document.getElementById(\"output\");\r\n\t\t\tlet tests = \"\";\r\n\t\t\ttests += input;\r\n\r\n\t\t\toutputText.innerHTML = tests;\r\n\t\t} else {\r\n\t\t\tlet outputText = document.getElementById(\"output\");\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += \"Creating Submission ...\\n\";\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t\"https://judge0-extra.p.rapidapi.com/submissions\",\r\n\t\t\t\t{   method: \"POST\",\r\n\t\t\t\theaders: {\r\n\t                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\", //\"judge0-extra.p.rapidapi.com\",\r\n\t                    \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n\t                    \"content-type\": \"application/json\",\r\n\t                    accept: \"application/json\"\r\n\t                },\r\n\t                body: JSON.stringify({\r\n\t                \tsource_code: input,\r\n\t                \tstdin: user_input,\r\n\t                \tlanguage_id: language\r\n\t                }),\r\n\t            }\r\n\t            );\r\n\t\t\toutputText.innerHTML += \"Submission Created ...\\n\";\r\n\t\t\tconst jsonResponse = await response.json();\r\n\r\n\t\t\tlet jsonGetSolution = {\r\n\t\t\t\tstatus: { description: \"Queue\" },\r\n\t\t\t\tstderr: null,\r\n\t\t\t\tcompile_output: null,\r\n\t\t\t};\r\n\r\n\t\t\twhile (\r\n\t\t\t\tjsonGetSolution.status.description !== \"Accepted\" &&\r\n\t\t\t\tjsonGetSolution.stderr == null &&\r\n\t\t\t\tjsonGetSolution.compile_output == null\r\n\t\t\t\t){\r\n\t\t\t\toutputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\r\n\t\t\tif (jsonResponse.token) {\r\n\t\t\t\tlet url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\r\n\r\n\t\t\t\tconst getSolution = await fetch(url, {\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n\t                         \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n\t                          //\"useQueryString\": true\r\n\t                          \"content-type\": \"application/json\",\r\n\t                      },\r\n\t                  });\r\n\t\t\t\tjsonGetSolution = await getSolution.json();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (jsonGetSolution.stdout) {\r\n\t\t\tconst output = atob(jsonGetSolution.stdout);\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += `Results :\\n${output}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\r\n\t\t} else if (jsonGetSolution.stderr) {\r\n\t\t\tconst error = atob(jsonGetSolution.stderr);\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += `\\n Error :${error}`;\r\n\t\t} else {\r\n\t\t\tconst compilation_error = atob(jsonGetSolution.compile_output);\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += `\\n Error :${compilation_error}`;\r\n\t\t}\r\n\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetmode(45);\r\n\t}, []);\r\n\r\n    return (\r\n\t\t<div className=\"compile_back\">\r\n\t\t\t<div id=\"compile_header\">\r\n\t\t\t\t<div className=\"cover\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<span>Font Size</span> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<select name=\"fontsize\" id=\"fontsize\">\r\n\t\t\t\t\t\t\t\t<option value=\"14\">14</option>\r\n\t\t\t\t\t\t\t\t<option value=\"15\">15</option>\r\n\t\t\t\t\t\t\t\t<option value=\"16\">16</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<span>Language</span>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<select onChange={lanChange}>    \r\n\t\t\t\t\t\t\t\t<option value=\"45\">Assembly (NASM 2.14.02)</option>                     \r\n\t\t\t\t\t\t\t\t<option value=\"html\">HTML</option>\r\n\t\t\t\t\t\t\t\t<option value=\"50\">C (GCC 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"54\">C++ (GCC 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"51\">C# (Mono 6.6.0.161)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"86\">Clojure (1.10.1)   </option>\r\n\t\t\t\t\t\t\t\t<option value=\"55\">Common Lisp (SBCL 2.0.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"56\">D (DMD 2.089.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"59\">Fortran (GFortran 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"60\">Go (1.13.5)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"61\">Haskell (GHC 8.8.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"62\">Java (OpenJDK 13.0.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"63\">JavaScript (Node.js 12.14.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"64\">Lua (5.3.5)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"67\">Pascal (FPC 3.0.4)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"68\">PHP(7.4.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"71\">Python (3.8.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"72\">Ruby (2.7.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"73\">Rust (1.40.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"74\">TypeScript (3.7.4)</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"file_name\">\r\n\t\t\t\t<p>main.c</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"complie\">\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<AceEditor\r\n\t\t\t\t\tclassName=\"aceeditor\"\r\n\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\tref={aceinput}\r\n\r\n\t\t\t\t\tmode= {lang}\r\n\t\t\t\t\ttheme=\"monokai\"\r\n\t\t\t\t\tonChange={(value)=>setInput(value)}\r\n\t\t\t\t\tfontSize={20}\r\n\t\t\t\t\tshowPrintMargin={true}\r\n\t\t\t\t\tshowGutter={true}\r\n\t\t\t\t\thighlightActiveLine={true}\r\n\t\t\t\t\tautoScrollEditorIntoView={true}\r\n\r\n\t\t\t\t\tsetOptions={{\r\n\t\t\t\t\t\tshowLineNumbers: true,\r\n\t\t\t\t\t\twrap: true, \r\n\t\t\t\t\t\tmaxLines: 22,\r\n\t\t\t\t\t\ttabSize: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"complie_btn\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={clear}>CLEAR</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={run}>RUN</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"complie_result\">\r\n\t\t\t\t<div id=\"result_box\">\r\n\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t<textarea readOnly id=\"output\" placeholder=\"출력 값\" defaultValue={\"\"}/> \r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t<textarea placeholder=\"Input 값을 입력해 주세요.\" id=\"userinput\" onChange={test}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n};\r\n\r\nexport default Compile;\r\n\r\n\r\n","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\News.js",["125","126","127","128","129","130","131"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Components.css\";\r\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ko from 'date-fns/locale/ko'; \r\nimport striptags from 'striptags';\r\n\r\nregisterLocale('ko', ko);\r\n\r\nfunction News(props) {\r\n   const [news, setNews] = useState([]);\r\n   //const [sum, setSum] = useState([]);\r\n   const [startDate, setStartDate] = useState(new Date('1-01-2009'));\r\n   const [endDate, setEndDate] = useState(new Date('1-01-2009'));\r\n   const [today, setToday] = useState(new Date());\r\n   const [keyword, setKeyword] = useState('');\r\n   const [key, setKey] = useState('');\r\n   const [mode, setMode] = useState(false); //과거뉴스 / 최신뉴스\r\n   const [des, setDes] = useState([{id:''}]);\r\n   const [sum, setSum] = useState([{\r\n      id: '',\r\n      sum0: '',\r\n      sum1: '',\r\n      sum2: ''\r\n   }]);\r\n   //new Array(news.length).fill(false)\r\n   const [disabledNewBtn, setDisabledNewBtn] = useState([false, false, false, false, false, false, false, false, false, false]);\r\n   const [disabledBtn, setDisabledBtn] = useState(new Array(news.length).fill(false));\r\n\r\n   const convertDate = str => {\r\n      str = str.toString();\r\n      let parts = str.split(\" \");\r\n      let months = {\r\n         Jan: \"01\",\r\n         Feb: \"02\",\r\n         Mar: \"03\",\r\n         Apr: \"04\",\r\n         May: \"05\",\r\n         Jun: \"06\",\r\n         Jul: \"07\",\r\n         Aug: \"08\",\r\n         Sep: \"09\",\r\n         Oct: \"10\",\r\n         Nov: \"11\",\r\n         Dec: \"12\"\r\n      };\r\n      return parts[3] + months[parts[1]] + parts[2];\r\n   };\r\n\r\n   const convertnewDate = str => {\r\n      str = str.toString();\r\n      let parts = str.split(\" \");\r\n\r\n      let months = {\r\n         Jan: \"01\",\r\n         Feb: \"02\",\r\n         Mar: \"03\",\r\n         Apr: \"04\",\r\n         May: \"05\",\r\n         Jun: \"06\",\r\n         Jul: \"07\",\r\n         Aug: \"08\",\r\n         Sep: \"09\",\r\n         Oct: \"10\",\r\n         Nov: \"11\",\r\n         Dec: \"12\"\r\n      };\r\n      return parts[3] + months[parts[2]] + parts[1];\r\n   };\r\n\r\n   const ExampleCustomInput = ({ value, onClick }) => (\r\n      <button className=\"example-custom-input\" onClick={onClick}>\r\n         {value}\r\n      </button>\r\n   );\r\n\r\n   const getNewsBtn = (e) => {\r\n      setNews([]);\r\n      setSum([]);\r\n      setKeyword('');\r\n      Axios.post('/getNews', {\r\n         start : convertDate(startDate),\r\n         end : convertDate(endDate)\r\n      }).then((res) => {\r\n         setNews(res.data);\r\n         setKeyword(res.data[0]);\r\n      })\r\n   }\r\n\r\n   console.log(news);\r\n\r\n\r\n   const getSumBtn = (e) => {      \r\n      const index = e.target.getAttribute('sum_idx');\r\n      disabledBtn[index] = true;\r\n      Axios.post('/getSum', {\r\n         paragraph: e.target.getAttribute('paragraph')\r\n      }).then((res) => {\r\n         setSum([\r\n            ...sum,\r\n            {\r\n            id: index,\r\n            sum0: res.data[0].sum,\r\n            sum1: res.data[1].sum,\r\n            sum2: res.data[2].sum\r\n         }]);\r\n      })\r\n   }\r\n\r\n   const getKeywordNews = (e) => {\r\n      setKey(e.target.getAttribute('keyword'));\r\n   }\r\n\r\n   const delSum = (e) => {\r\n      const index = e.target.getAttribute('del_idx');\r\n      setSum(sum.filter(sum => parseInt(sum.id) !== parseInt(index)));\r\n      disabledBtn[index] = false;\r\n   }\r\n   const delDes = (e) => {\r\n      const index = e.target.getAttribute('del_idx');\r\n      setDes(des.filter(des => parseInt(des.id) !== parseInt(index)));\r\n      disabledNewBtn[index] = false;\r\n   }\r\n\r\n   const brandNews = (e) => {\r\n      setNews([]);\r\n      setMode(true);\r\n      setDes([]);\r\n      Axios.post('/getbrandNews', {      \r\n      }).then((res) => {\r\n         setNews(res.data);\r\n      })\r\n   }\r\n\r\n   return (      \r\n        <div className=\"menu__container\">\r\n         <h2>NEWS</h2>      \r\n         <div className=\"board_top\">\r\n            {news.length !== 0 ?\r\n               mode ? <p>총 게시물 {news.length}개 </p> : <p>총 게시물 {news.length - 1}개 </p>\r\n               :<p>총 게시물 {news.length}개 </p>\r\n            }\r\n         </div>\r\n\r\n         <div className=\"tagSearch\">\r\n            <div className=\"tagTitle left\"\r\n                onClick={ (e) => {setNews([]); setSum([]); setKeyword(''); setKey(''); setMode(false); }}\r\n            >과거 뉴스</div>\r\n            <div className=\"tagTitle left\"\r\n                onClick={brandNews}\r\n            >최신 뉴스</div>\r\n         </div>\r\n   \r\n      { mode ? \r\n         <div>\r\n            <div className=\"board_contents\">\r\n               {news.length !== 0 &&\r\n                  news.map((element, i) =>(\r\n                     element.length === undefined &&(\r\n                        <div className=\"newslist\" key={i}>\r\n                           <div>\r\n                              <div className=\"left\">\r\n                                 <p>{i+1}</p>\r\n                                 <h5>{convertnewDate(element.pubDate)}</h5>\r\n                              </div>\r\n                              <div className=\"right\">\r\n                                 <div>\r\n                                    <div className=\"title left\">\r\n                                       <h3>{striptags(element.title)}</h3>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"summary right\">\r\n                                       <button type=\"submit\" onClick={ (e) => { disabledNewBtn[i] = true; setDes([...des,{id:i}]); }}\r\n                                          disabled={disabledNewBtn[i]} description_idx={i}>본문</button>\r\n                                    </div>\r\n                                 </div>\r\n                              </div>\r\n                           </div>\r\n                           {des.length !== 0 &&(\r\n                              des.map((el)=> (\r\n                                 parseInt(el.id) === i &&(\r\n                                 <div className=\"sumdiv\">   \r\n                                    <button onClick={delDes}  del_idx={el.id} >X</button>\r\n                                    <p>{striptags(element.description)}</p>\r\n                                    <button onClick={() => window.open(`${element.link}`, '_blank')}>뉴스 더 보기</button>\r\n                                 </div>\r\n                              )))\r\n                           )}\r\n                        </div>            \r\n                     )\r\n                  ))\r\n               }\r\n            </div>\r\n         </div>\r\n      :    <div>\r\n         <div className=\"newsSearch\">\r\n            <ul className=\"keywordSearch\">\r\n               <li>\r\n                  <DatePicker\r\n                     selected={startDate}\r\n                     onChange={date => setStartDate(date)}\r\n                     showYearDropdown\r\n                     dateFormatCalendar=\"MMMM\"\r\n                     dateFormat=\"yyyy년 MM월 dd일 ▼\"\r\n                     minDate={new Date('1-01-2009')}\r\n                     maxDate={new Date('12-27-2018')}\r\n                     yearDropdownItemNumber={15}\r\n                     scrollableYearDropdown\r\n                     locale=\"ko\"\r\n                     customInput={<ExampleCustomInput />}\r\n                  />\r\n               </li>\r\n               <li><p>—</p></li>\r\n               <li>\r\n                  <DatePicker\r\n                     selected={endDate}\r\n                     onChange={date => setEndDate(date)}\r\n                     showYearDropdown\r\n                     dateFormatCalendar=\"MMMM\"\r\n                     dateFormat=\"yyyy년 MM월 dd일 ▼\"\r\n                     minDate={new Date('1-01-2009')}\r\n                     maxDate={new Date('12-27-2018')}\r\n                     yearDropdownItemNumber={15}\r\n                     scrollableYearDropdown\r\n                     locale=\"ko\"\r\n                     customInput={<ExampleCustomInput />}\r\n                  />\r\n               </li>\r\n               <li>\r\n               <button type=\"submit\" onClick={getNewsBtn}>\r\n                  <FontAwesomeIcon icon={faSearch} size=\"1x\" />\r\n               </button>\r\n               </li>\r\n            </ul>\r\n         </div>\r\n\r\n         <div>\r\n            {keyword.length !== 0 &&\r\n               keyword.map((element) =>(\r\n                  <button onClick={getKeywordNews} keyword={element}>{element}</button>\r\n               ))}\r\n         </div>\r\n         \r\n         {news.length !== 0 &&\r\n            <div className=\"line\"></div>\r\n         }\r\n\r\n\r\n         <div className=\"board_contents\">\r\n            {news.length !== 0 &&\r\n               news.map((element, i) =>(\r\n                  element.length === undefined &&(\r\n                     key.length !== 0 &&(\r\n                        element.keyword.includes(key) === true &&(\r\n                           <div className=\"newslist\" key={element.document_id}>\r\n                              <div>\r\n                                 <div className=\"left\">\r\n                                    <p>{element.publisher}</p>\r\n                                    <h5>{element.date}</h5>\r\n                                 </div>\r\n                                 <div className=\"right\">\r\n                                    <div>\r\n                                       <div className=\"title left\">\r\n                                          <h3>{element.title}</h3>\r\n                                          <p>작성자 : {element.author}</p>\r\n                                       </div>\r\n                                       <div className=\"summary right\">\r\n                                          <button type=\"submit\" disabled={disabledBtn[i]} onClick={getSumBtn} paragraph={element.paragraph} sum_idx={i}>요약</button>\r\n                                       </div>\r\n                                    </div>\r\n                                 </div>\r\n                              </div>\r\n                              {sum.length !== 0 &&(\r\n                                 sum.map((el) =>(\r\n                                    parseInt(el.id) === i &&(\r\n                                    <div className=\"sumdiv\">\r\n                                       <button onClick={delSum} del_idx={el.id}>X</button>\r\n                                       <p>1 : {el.sum0}</p>\r\n                                       <p>2 : {el.sum1}</p>\r\n                                       <p>3 : {el.sum2}</p>\r\n                                       <button onClick={() => window.open(`${element.link}`, '_blank')}>뉴스 더 보기</button>\r\n                                    </div>\r\n                                 )))\r\n                              )}\r\n                           </div>\r\n                        )\r\n                     )\r\n                  )\r\n               ))\r\n            }\r\n         </div>\r\n      </div>   \r\n      }{/*mode*/}\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default News;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Talk.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrivateRoute.js",["132","133","134","135"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\nconst PrivateRoute = ({ component: Component, isLogin: isLogin, ...rest }) => {\r\n\r\n    return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /login page\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (isLogin ? <Component {...props} /> : (alert(\"로그인 후 이용 가능 합니다!\"),<Redirect to=\"/login\" />))}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Writing.js",["136","137","138"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport '../css/Components.css';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nconst editorConfiguration = {\r\n   simpleUpload: {uploadUrl: '/upload'},\r\n   toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Writing(props) {\r\n\tconst [post, setPost] = useState(props.location.state ? props.location.state : JSON.parse(localStorage.getItem('prev')));\r\n\tconst [title,setTitle] = useState('');\r\n\tconst [contents,setContent] = useState('');\r\n\tconst [tag, setTag] = useState([]);\r\n\tconst onTitleHandler = (event) => {setTitle (event.currentTarget.value);}\r\n\tconst [user, setUser] = useState();\r\n\tconst mounted = useRef(false);\r\n\r\n\tconst getUser = async (e) => {\r\n\t\tawait Axios.get(\"/member/session\").then((res) => {\r\n\t\t\tif(res.data !== \"fail\") setUser(res.data.id);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUser();\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!mounted.currnet) {\r\n\t\t\tmounted.currnet = true;\r\n\t\t} else {\r\n\t\t\tgetUser();\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\tconst loadPrevData = useCallback((e) => {\r\n\t\tsetTitle(post.title);\r\n\t\tsetContent(post.contents);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.location.state !== undefined) {\r\n\t\t\tlocalStorage.setItem(\"prev\", JSON.stringify(props.location.state));\r\n\t\t}\r\n\t\tif (props.match.params.idx !== undefined) {\r\n\t\t\tloadPrevData();\r\n\t\t} else {\r\n\t\t\treset();\r\n\t\t}\r\n\t}, [loadPrevData, props.location.state, props.match.params.idx])\r\n\r\n\tconst reset = (e) => {\r\n\t\tsetPost('');\r\n\t\tsetTitle('');\r\n\t\tsetTag('');\r\n\t}\r\n\r\n\tconst updateBtn = (e) => {\r\n\t\tif (window.confirm(\"수정하시겠습니까?\")) {\r\n\t\t\tconst idx = e.target.getAttribute('comment-idx');\r\n\r\n\t\t\tif (post.name === \"qna\") {\r\n\t\t\t\tAxios.post('/board/updateqna', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('/board/update_tag', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (post.name === \"talk\") {\r\n\t\t\t\tAxios.post('/board/updatetalk', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('/board/update_category', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCkeditorState = (event, editor) => {\r\n\t\tconst data = editor.getData();\r\n\t\tsetContent(data);\r\n\t}\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tif(title.length === 0)\r\n\t\t\talert(\"제목을 입력해주세요.\");\r\n\t\telse if(contents.length === 0)\r\n\t\t\talert(\"내용을 입력해주세요.\");\r\n\t\telse{\r\n\t\t\tif (props.match.params.name === \"qna\") {\r\n\t\t\t\tAxios.post('/board/writing_qna', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('/board/writing_tag', {\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (props.match.params.name === \"talk\") {\r\n\t\t\t\tAxios.post('/board/writing_talk', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\tcategory: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('/board/writing_category', {\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\r\n\tconst wtobBtnHandler = (event) => {\r\n\t\tprops.history.push(`/${props.match.params.name}`)\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"Writing\">\r\n\t\t\t<p className=\"bolder\">Ask a public question</p>\r\n\t\t\t<div className='form-wrapper'>\r\n\t\t\t\t<p className=\"bold\">제목</p>\r\n\t\t\t\t<input className=\"title-input\" type='text' onChange={onTitleHandler} name='title' value={title}/>\r\n\t\t\t\t<p className=\"bold\">내용</p>                \r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ Editor }\r\n\t\t\t\t\tconfig={ editorConfiguration }\r\n\t\t\t\t\tdata= {contents}\r\n\t                onChange={ handleCkeditorState }    \r\n\t                name = 'contents'          \r\n\t\t        /> \r\n\t\t        <p className=\"bold\">태그</p>\r\n\t\t        {props.location.state ?\r\n\t\t        <TagBox change={setOnTag} ex_tags={post.tag.split(' ')} name={props.match.params.name}/>\r\n\t\t        :\r\n\t\t        <TagBox change={setOnTag} name={props.match.params.name}/>\r\n\t\t    \t}\r\n\t            {/*<input className=\"tag-input\" type='text' onChange={onTagHandler} name = 'tag' value={tag} placeholder=\"태그는 3개 제한 입니다.\"/>*/}\r\n\t        </div>\r\n\t            {(post) ? <button className=\"modify-button\" onClick={updateBtn} comment-idx={post.idx}>수정</button> : <button className=\"submit-button\" onClick={onSubmitHandler} >작성</button>}\r\n        \t\t<button className=\"toboard\" onClick={wtobBtnHandler} >목록으로</button>\r\n        </div>\r\n   );\r\n}\r\n\r\nexport default React.memo(Writing);","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Board.js",["139","140","141","142","143"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Components.css\";\r\nimport striptags from 'striptags';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nfunction Board(props) {\r\n\t// 페이징\r\n\tconst [viewContent, setViewContent] = useState([]);\r\n\tconst [curPage, setcurPage] = useState(0);\r\n\tconst [lastPage, setlastPage] = useState(0);\r\n\tconst [minbtn, setMinBtn] = useState(0);\r\n\tconst [maxbtn, setMaxBtn] = useState(0);\r\n\tlet array = [];\r\n\r\n\tconst [generalSearch, setGeneralSearch] = useState('');\r\n\tconst [searchValue, setSearchValue] = useState([]);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [searchtotal, setSearchTotal] = useState(0);\r\n\tconst onGeneralSearchHandler = (event) => {setGeneralSearch(event.currentTarget.value);}\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [tags, setTags] = useState([]);\r\n\tlet tagarray = [];\r\n\r\n\tconst [tag, setTag] = useState([]);\r\n\r\n\tlet name = '';\r\n\tif(props.location !== undefined){\r\n\t\tname = props.match.path.split(\"/\").[1];\r\n\t}else{\r\n\t\tname = props.match.split(\"/\").[1];\r\n\t}\r\n\r\n    let search = \"태그\";\r\n    if (name === \"talk\") search = \"카테고리\";\r\n\r\n    const loadList = async () => {\r\n    \tlet url = \"/board/getBoard/1/qna\";\r\n    \tif(name === \"talk\") url = '/board/getBoard/1/talk';\r\n    \tawait Axios.get(url).then((res)=>{\r\n\t\t\tsetViewContent(res.data.model.boardList);\r\n\t\t\tsetcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setTotal(res.data.model.total);\r\n\t\t})\r\n    }\r\n\r\n    const loadSearch = async () => {\r\n    \tif (props.location !== undefined){\r\n\t        let value = props.match.params.q;\r\n\t        let kind = props.match.params.kind;\r\n\t\t\tif (name === \"qna\") {\r\n\t\t\t\tAxios.post('/board/searchqna', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0){\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\r\n\r\n\t\t\t} else {\r\n\t\t\t\tAxios.post('/board/searchtalk', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0)\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\t   \r\n  \r\n\r\n    const onClick = async (e) => {\r\n    \tconst idxs = e.target.dataset.idx;\r\n    \tlet url = \"/board/getBoard/\"+idxs+\"/qna\";\r\n    \tif(name === \"talk\") url = \"/board/getBoard/\"+idxs+\"/talk\";\r\n    \t\r\n        await Axios.get(url).then((res) => {\r\n            setcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setViewContent(res.data.model.boardList);\r\n            setTotal(res.data.model.total);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n    \tloadList();\r\n    \tloadSearch();\r\n\t\treturn () => setLoading(false);\r\n\t}, [searchValue])\r\n    \r\n    const searchBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(generalSearch.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/general/${generalSearch}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/general/${generalSearch}`);\r\n\t}\r\n\r\n    const searchTagsBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(tag.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/tags/${tag}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/tags/${tag}`);\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n    return (   \t\r\n        <div className=\"menu__container\">\r\n\t\t\t<h2>{name.toUpperCase()}</h2>\t\t\r\n\t\t\t<div className=\"board_top\">\r\n\t\t\t\t{((viewContent.length !== 0)&&(searchValue.length === 0)) ? \r\n\t\t\t\t\t((props.location !== undefined) ? <p>총 게시물 0개 </p> : <p>총 게시물 {total}개</p>)\r\n\t\t\t\t: <p>총 게시물 {searchtotal}개</p>}\r\n\t\t\t\t<ul className=\"board_list\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"검색\" onChange={onGeneralSearchHandler}/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t<button type=\"submit\" onClick={searchBtn}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"tagSearch\">\r\n\t\t\t\t<div className=\"tagTitle left\">{search}검색</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<div className=\"tagInput left\">\r\n\t\t\t\t\t\t<TagBox change={setOnTag}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" onClick={searchTagsBtn}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className=\"tagBox\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"board_contents\">\r\n\t\t\t{(props.location !== undefined) ?\r\n\t\t\t\t((searchValue.length === 0) ? <div className=\"list\"><p><strong>\"{props.match.params.q}\"</strong>와(과) 일치하는 검색 결과가 없습니다</p></div> \r\n\t\t\t\t: List(searchValue, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t:\r\n\t\t\t\t((viewContent.length === 0) ? <div className=\"list\"><p>등록된 게시물이 없습니다</p></div>\r\n\t\t\t\t: List(viewContent, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<Link to={`/${name}/writing`}>\r\n\t\t\t\t<button className=\"writeBtn\">글쓰기</button>\r\n\t\t\t</Link>\r\n\r\n\t\t\t{/* 페이징 */}\r\n\t\t\t<div className=\"paging\">\r\n\t\t\t\t{ (curPage !== 1) && (<button type=\"button\" onClick={onClick} data-idx={curPage-1}>이전</button>) }\r\n\t\t\t\t{\r\n\t\t\t\t\t(() => {\r\n\t\t\t\t\t\tfor(let i = minbtn; i < maxbtn; i++) {\r\n\t\t\t\t\t\t\tif(curPage === i) array.push(<button type=\"button\" className=\"checkBtn\" key={i} onClick={onClick} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\telse array.push(<button type=\"button\" onClick={onClick} key={i} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\tif(i >= lastPage) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (array);\r\n\t\t\t\t\t})()\r\n\t\t\t\t}\r\n\t\t\t\t{ (curPage < lastPage) && (<button type=\"button\" onClick={onClick} data-idx={curPage+1}>다음</button>) }\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nfunction List(mapper, total, searchtotal, name, curPage, viewContent, searchValue){\r\n\treturn(\r\n\t\tmapper.map((element,i) =>(\r\n\t\t\t<div className=\"list\" key={element.idx}>\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t{(viewContent.length !== 0)&&(searchValue.length === 0) ? <h3>Q.{total - i - ((curPage-1)*5)}</h3> : <h3>Q.{searchtotal - i - ((curPage-1)*5)}</h3>}\r\n\r\n\t\t\t\t\t<p>답변 - {element.commentN}개</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: `/${name}/post/${element.idx}`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>{element.title}</h3>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<p>{striptags(element.contents)}</p>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"tags left\">\r\n\t\t\t\t\t\t\t{element.category && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.category1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category1}`}>{element.category1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category2}`}>{element.category2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category3}`}>{element.category3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{element.tag && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.tag1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag1}`}>{element.tag1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag2}`}>{element.tag2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag3}`}>{element.tag3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"info right\">\r\n\t\t\t\t\t\t\t<p>작성자 : <span className=\"writer\">{element.writer}</span> &nbsp;&nbsp;조회수 : <span className=\"hit\">{element.hit}</span></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t))\r\n\t);\r\n}\r\n\r\nexport default Board;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Post.js",["144","145","146","147","148","149"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport '../css/Components.css';\r\nimport Axios from 'axios';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { Link } from \"react-router-dom\";\r\nimport Prism from \"../lib/PrismImport\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst editorConfiguration = {\r\n    simpleUpload: { uploadUrl: '/upload'},\r\n    toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Post(props) {\r\n    const [post, setPost] = useState([]);\r\n    const name = props.match.params.name;\r\n    const [user, setUser] = useState();\r\n    const idx = props.match.params.idx;\r\n    const [mod, setMod] = useState('');\r\n    const [modIdx, setModIdx] = useState('');\r\n    const [mode, setMode] = useState(false);\r\n    const [comment, setComment] = useState([]);\r\n    const [commentnum, setCommentnum] = useState(0);\r\n    const [postcommentN, setpostCommentN] = useState(0);\r\n    const mounted = useRef(false);\r\n\r\n\r\n    // 그냥 새로 부르는거임 들어가면\r\n   /* if(isNaN(idx) === false && (name === 'qna' || name === 'talk')){\r\n        Axios.post('http://localhost:8000/board/getPost', {\r\n            idx: idx,\r\n            name : name\r\n        }).then((res) => {\r\n            if(res.data.length !== 0)\r\n                setPost(res.data[0]);   \r\n            else\r\n                props.history.push(\"/notfound\"); \r\n        });\r\n    }\r\n    else\r\n        props.history.push(\"/notfound\");    \r\n    */\r\n\r\n    useEffect(() => {\r\n        if(isNaN(idx) === false && (name === 'qna' || name === 'talk')){\r\n            Axios.post('/board/getPost', {\r\n                idx: idx,\r\n                name : name\r\n            }).then((res) => {\r\n                if(res.data.length !== 0)\r\n                    setPost(res.data[0]);   \r\n                else\r\n                    props.history.push(\"/notfound\"); \r\n            });\r\n        }\r\n        else\r\n            props.history.push(\"/notfound\"); \r\n    }, [])\r\n\r\n    const loadComment = useCallback( async () => {\r\n        Axios.post('/board/get_total', {\r\n            idx: idx,\r\n            name : name\r\n        }).then((response) => {\r\n            setCommentnum(response.data[0].Total);\r\n        })\r\n\r\n        Axios.post('/board/get_c', {\r\n            idx: idx,\r\n            name : name\r\n        }).then((response) => {\r\n            setComment(response.data);\r\n            Prism();\r\n        })\r\n    }, []);\r\n\r\n    const getUser = async (e) => {\r\n        await Axios.get(\"/member/session\").then((res) => {\r\n            if(res.data !== \"fail\") setUser(res.data.id);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!mounted.currnet) {\r\n            mounted.currnet = true;\r\n        } else {\r\n            getUser();\r\n        }\r\n    }, [user]);\r\n\r\n    const delBtn_c = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('comment-idx');\r\n\r\n            Axios.post('/board/delete_c', { idx: didx, name : name });\r\n\r\n            Axios.post('/board/delete_cN', {\r\n                idx: idx,\r\n                name : name,\r\n                commentN: (postcommentN-1)\r\n            }).then((response) => { loadComment(); })\r\n\r\n            alert(\"삭제 되었습니다!\");            \r\n            setpostCommentN(postcommentN-1);\r\n        }\r\n    }\r\n\r\n    const modBtn_c = (e) => {\r\n        setMode(true);\r\n        setMod(e.target.getAttribute('comment-contents'));\r\n        setModIdx(e.target.getAttribute('comment-idx'));\r\n    }\r\n\r\n    const updateBtn_c = (e) => {\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            const midx = modIdx;\r\n            \r\n            Axios.post('/board/update_c', {\r\n                idx: midx,\r\n                contents: mod,\r\n                name : name\r\n            }).then(() => { loadComment(); })\r\n\r\n            alert(\"수정 되었습니다!\");\r\n        }\r\n        setMod('');\r\n        setMode(false);\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        if(mod.length !== 0) {\r\n            setCommentnum(post.commentN+1);\r\n            \r\n            Axios.post('/board/postqna', {\r\n                bid: idx,\r\n                writer: user,\r\n                name : name,\r\n                contents:mod,\r\n                commentN: (postcommentN+1)\r\n            }).then(() => {\r\n                loadComment();\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n\r\n            alert(\"작성 되었습니다.\");\r\n            setpostCommentN(postcommentN+1);\r\n            setMod('');\r\n            loadComment();     \r\n        }else{\r\n            alert(\"댓글을 입력해주세요.\");\r\n        }\r\n    }\r\n    \r\n    const onptbHandler = (event) => {\r\n        if (name === \"talk\")\r\n            props.history.push(\"/talk\")\r\n        else\r\n            props.history.push(\"/qna\")\r\n    }\r\n\r\n    const handleCkeditorState = (event, editor) => {\r\n        const data = editor.getData();\r\n        setMod(data);\r\n    }\r\n\r\n    const hitUpdate = () => {\r\n        Axios.post('/board/getHit',{\r\n           idx: idx,\r\n           name: name\r\n       }).then((response) => {})\r\n    }\r\n\r\n    const delBtn = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('post-idx');\r\n\r\n            Axios.post('/board/deletepost', {\r\n                idx: didx,\r\n                name : name\r\n            }).then(() => {\r\n                if(name === \"qna\") props.history.push(\"/qna\");\r\n                else props.history.push(\"/talk\");\r\n                alert(\"삭제 되었습니다!\");\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        Prism();\r\n\r\n        setpostCommentN(post.commentN);\r\n        loadComment();\r\n    }, [loadComment, post.commentN]);\r\n\r\n    useEffect(() => {\r\n        hitUpdate();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className='form-wrapper'>\r\n                {\r\n                    // data setup 됐을 때 자연스럽게 불러주려고 이렇게 했음 css 수정 필요할 듯\r\n                    (!Array.isArray(post)) && \r\n                    <div>\r\n                        <div className=\"question-header\">\r\n                            <p className=\"bolder\">{post.title}</p>\r\n                        </div>\r\n                        <div className=\"grid\">\r\n                            <div>\r\n                                <span>Asked</span>\r\n                                <time>{post.rdate}</time>\r\n                            </div>\r\n                            <div>\r\n                                <span>Viewed</span>\r\n                                {post.hit} times\r\n                            </div>\r\n                            \r\n                            { // tag 불러와서 저장해서 넘기세요 writing으로 수정해야하니까\r\n                            (props.id === post.writer) && //로그인 한 사람이 글 작성자라면 글 삭제 및 수정 가능\r\n                            <div className=\"writer\">\r\n                                <Link\r\n                                to={{\r\n                                   pathname : `/${props.match.params.name}/modify/${post.idx}`,\r\n                                   state: {\r\n                                        key : post.idx,\r\n                                        idx : post.idx,\r\n                                        title : post.title,\r\n                                        contents : post.contents,\r\n                                        tag : post.tag,\r\n                                        category : post.category,\r\n                                        name : name\r\n                                    }\r\n                                }}>\r\n                                <button className=\"modifyBtn\"> 수정 </button></Link>\r\n                                <button className=\"deleteBtn\" onClick={delBtn} post-idx={post.idx}> 삭제 </button>\r\n                            </div>}\r\n                        </div>\r\n                        <br/>\r\n                        <hr />\r\n                        <div className=\"question-body\">\r\n                            <div className=\"selctContents\" dangerouslySetInnerHTML={ {__html: post.contents} }></div>\r\n                            {(post.contents.includes('code class'))&&\r\n                            <textarea id=\"output\" defaultValue={\"\"} style={{width:500, high:300, }}/>\r\n                            }\r\n                            <div className=\"user-info\">\r\n                                <span>asked {post.rdate} {post.writer}</span>\r\n                            </div>               \r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <p className=\"bold\">{commentnum}개의 답변</p>\r\n                        {\r\n                            comment.map(element =>(\r\n                                <div className=\"question-answer\" key={element.idx}>\r\n                                    <div className=\"selctContents\" dangerouslySetInnerHTML={{__html: element.contents}}></div>                    \r\n                                    <div className=\"user-info\"> \r\n                                        <span>answered {element.cdate} {element.writer}</span>\r\n                                        {(props.id === post.writer)&&(props.id !== element.writer) && //로그인 한 사람이 글 작성자라면 댓글 삭제만 가능\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>}\r\n                                        {(props.id === element.writer) && //로그인 한 사람이 댓글 작성자라면 댓글 삭제 및 수정 가능\r\n                                        <div>\r\n                                            <button className=\"modifyBtn\" onClick={modBtn_c} comment-contents={element.contents} comment-idx={element.idx}> 수정 </button>\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>\r\n                                        </div>}\r\n\r\n                                    </div>   \r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                        <p className=\"bold\">댓글작성</p>\r\n                        { props.id ?\r\n                            <CKEditor\r\n                            editor={ Editor }\r\n                            config={ editorConfiguration }\r\n                            data= {mod}\r\n                            onChange={ handleCkeditorState }\r\n                            /> : \r\n                            <CKEditor\r\n                            editor={ Editor }\r\n                            config={ editorConfiguration }\r\n                            data= {\"로그인 후 이용해주세요\"}\r\n                            />\r\n                        }\r\n                        { mode? <button className=\"modify-button\" onClick={updateBtn_c}>수정</button> : props.id &&<button className=\"submit-button\" onClick={onSubmitHandler}>작성</button> }\r\n                        <button className=\"toboard\" onClick={onptbHandler}>목록으로</button>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Chat.js",["150","151","152","153","154","155","156","157","158","159","160","161","162"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport '../css/Components.css';\r\nimport \"../css/Menu.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCommentDots, faCode, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\"\r\nimport Axios from 'axios';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport AceEditors from \"../lib/AceImport\";\r\n\r\nconst socket = socketIOClient.connect(\"/\");\r\n\r\nfunction Chat(props) {\r\n\tconst mounted = useRef(false);\r\n\tconst aceinput = useRef(null);\r\n\tconst [sendMode, setSend] = useState(true);\r\n\tconst [language, setLanguage] = useState(45);\r\n\tconst [name, setName] = useState('');\r\n\tconst [lang, setLang] = useState('');\r\n\tconst [input, setInput] = useState(''); \r\n\r\n\tconst [inputMessage, setInputMessage] = useState(''); // 입력값을 저장하는 상태값\r\n\tconst [chatMonitor, setChatMonitor] = useState([]);\r\n\r\n\tconst [user, setUser] = useState();\r\n\tconst [recentChat, setRecentChat] = useState('');\r\n\r\n\tconst getUser = async (e) => {\r\n\t\tawait Axios.get(\"/member/session\").then((res) => {\r\n\t\t\tif(res.data !== \"fail\") {\r\n\t\t\t\tsetUser(res.data.id);\r\n\t\t\t\tsetName(res.data.name);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUser();\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!mounted.currnet) {\r\n\t\t\tmounted.currnet = true;\r\n\t\t} else {\r\n\t\t\tgetUser();\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\r\n\tconst scrollToBottom = () => {\r\n\t\twindow.scrollTo(0,document.getElementById(\"chatMonitor\").scrollHeight);\r\n\t};\r\n\r\n\tconst lanChange = async (e) => { setLanguage(e.target.value); setmode(e.target.value);}\r\n\r\n\tfunction setmode(num){\r\n\t\tif(num === \"html\"){\r\n\t\t\tsetLang('html');\r\n\t\t\taceinput.current.editor.setValue('<div>Hello World!</div>');\r\n\t\t}\r\n\t\telse{\r\n\t\t\tswitch(parseInt(num)){\r\n\t\t\t\t//case 19 : setLang('crystal'); aceinput.current.editor.setValue(''); break;\r\n\t\t\t\t//case 43 : setLang('plain_text'); aceinput.current.editor.setValue(''); break;\r\n\t\t\t\tcase 45 : setLang('assembly_x86'); aceinput.current.editor.setValue('section .data\\nmsg   db    \\'Hello world!\\', 0AH\\nlen   equ   $-msg\\n\\nsection .text\\nglobal _WinMain@16\\n\\n_WinMain@16:\\nmov   edx, len\\nmov   ecx, msg\\nmov   ebx, 1\\nmov   eax, 4\\n\\nint   80h\\n\\nmov   ebx, 0\\nmov   eax, 1\\nint   80h\\n'); break;\r\n\t\t\t\tcase 50 : setLang('c_cpp'); aceinput.current.editor.setValue('void main(){\\n\\tprintf(\"Hello World\");\\n}'); break;\r\n\t\t\t\tcase 51 : setLang('csharp'); aceinput.current.editor.setValue('using System;\\nclass HelloWorld {\\n  static void Main() {\\n    Console.WriteLine(\"Hello World\");\\n  }\\n}'); break;\r\n\t\t\t\tcase 54 : setLang('c_cpp'); aceinput.current.editor.setValue('#include <iostream>\\nusing namespace std;\\n\\nint main(){\\n    cout<<\"Hello world\";\\nreturn 0;\\n}'); break;\r\n\t\t\t\tcase 55 : setLang('lisp'); aceinput.current.editor.setValue('(defun hello ()\\n    (format t \"Hello, World!~%\"))\\n(hello)'); break;\r\n\t\t\t\tcase 56 : setLang('d'); aceinput.current.editor.setValue('import std.stdio; \\n\\nvoid main() {\\n    writeln(\"Hello world!\");\\n}'); break;\r\n\t\t\t\t//case 57 : setLang('elixir'); aceinput.current.editor.setValue(''); break;\r\n\t\t\t\t//case 58 : setLang('erlang'); aceinput.current.editor.setValue(''); break;\r\n\t\t\t\tcase 59 : setLang('fortran'); aceinput.current.editor.setValue('Program Hello\\nPrint *, \"Hello World\"\\nEnd Program Hello'); break;\r\n\t\t\t\tcase 60 : setLang('golang'); aceinput.current.editor.setValue('package main  \\n import \"fmt\"\\n func main() {\\n fmt.Println(\"Hello World\")\\n}'); break;\r\n\t\t\t\tcase 61 : setLang('haskell'); aceinput.current.editor.setValue('main = putStrLn \"Hello World\"'); break;\r\n\t\t\t\tcase 62 : setLang('java'); aceinput.current.editor.setValue('public class Main {\\n  public static void main(String[] args) {\\n    System.out.println(\"Hello World\");\\n  }\\n}'); break;\r\n\t\t\t\tcase 63 : setLang('javascript'); aceinput.current.editor.setValue('console.log(\"Hello world\");'); break;\r\n\t\t\t\tcase 64 : setLang('lua'); aceinput.current.editor.setValue('print \"Hello world\"'); break;\r\n\t\t\t\tcase 67 : setLang('pascal'); aceinput.current.editor.setValue('program Hello;\\nbegin\\n  writeln (\"Hello, world.\");\\nend.'); break;\r\n\t\t\t\tcase 68 : setLang('php'); aceinput.current.editor.setValue('<?php\\n echo \"Hello World\";'); break;\r\n\t\t\t\t//case 69 : setLang('prolog'); aceinput.current.editor.setValue(''); break;\r\n\t\t\t\tcase 71 : setLang('python'); aceinput.current.editor.setValue('print(\"Hello World!\")'); break;\r\n\t\t\t\t//왜안돼 case 72 : setLang('ruby'); aceinput.current.editor.setValue('puts \"Hello World\"'); break;\r\n\t\t\t\tcase 73 : setLang('rust'); aceinput.current.editor.setValue('fn main() {\\n    println!(\"Hello World\");\\n}'); break;\r\n\t\t\t\tcase 74 : setLang('typescript'); aceinput.current.editor.setValue('console.log(\"Hello\");'); break;\r\n\t\t\t\tcase 86 : setLang('clojure'); aceinput.current.editor.setValue('(ns clojure.examples.main\\n    (:gen-class))\\n(defn Example []    (println (str \"Hello World\")) )\\n(Example)'); break;\r\n\t\t\t\tdefualt : aceinput.current.editor.setValue('default');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst codeOn = async () => {\r\n\t\tsetSend(!sendMode);\r\n\t}\r\n\r\n\tconst complieOn = async () => {\r\n\t\tlet outputText = \"\";\r\n\t\tif(language == \"html\") {\r\n\t\t\tlet tests = \"\";\r\n\t\t\ttests += input;\r\n\r\n\t\t\toutputText = tests;\r\n\t\t} else {\r\n\t\t\toutputText += \"\";\r\n\t\t\toutputText += \"Creating Submission ...\\n\";\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t\"https://judge0-extra.p.rapidapi.com/submissions\",\r\n\t\t\t\t{   method: \"POST\",\r\n\t\t\t\theaders: {\r\n                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\", //\"judge0-extra.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n                    \"content-type\": \"application/json\",\r\n                    accept: \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                \tsource_code: input,\r\n                \tlanguage_id: language\r\n                \t// stdin: user_input,\r\n                }),\r\n            }\r\n            );\r\n\t\t\t//outputText.innerHTML += \"Submission Created ...\\n\";\r\n\t\t\toutputText += \"Submission Created ...\\n\";\r\n\t\t\tconst jsonResponse = await response.json();\r\n\r\n\t\t\tlet jsonGetSolution = {\r\n\t\t\t\tstatus: { description: \"Queue\" },\r\n\t\t\t\tstderr: null,\r\n\t\t\t\tcompile_output: null,\r\n\t\t\t};\r\n\r\n\t\t\twhile (\r\n\t\t\t\tjsonGetSolution.status.description !== \"Accepted\" &&\r\n\t\t\t\tjsonGetSolution.stderr == null &&\r\n\t\t\t\tjsonGetSolution.compile_output == null\r\n\t\t\t\t){\r\n\t\t\t\t//outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\r\n\t\t\t\t\toutputText = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\r\n\t\t\t\t\tif (jsonResponse.token) {\r\n\t\t\t\t\t\tlet url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\r\n\r\n\t\t\t\t\t\tconst getSolution = await fetch(url, {\r\n\t\t\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t\t\"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n\t\t                         \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n\t\t                          //\"useQueryString\": true\r\n\t\t                          \"content-type\": \"application/json\",\r\n\t\t                      },\r\n\t\t                  });\r\n\t\t\t\t\t\tjsonGetSolution = await getSolution.json();\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (jsonGetSolution.stdout) {\r\n\t\t\t\tconst output = atob(jsonGetSolution.stdout);\r\n\t\t\t\toutputText = \"\";\r\n\t\t\t\toutputText += `Results :\\n${output} \\n Execution Time : ${jsonGetSolution.time} Secs \\n Memory used : ${jsonGetSolution.memory} bytes`;\r\n\t\t\t} else if (jsonGetSolution.stderr) {\r\n\t\t\t\tconst error = atob(jsonGetSolution.stderr);\r\n\t\t\t\toutputText = \"\";\r\n\t\t\t\toutputText += `\\n Error :${error}`;\r\n\t\t\t} else {\r\n\t\t\t\tconst compilation_error = atob(jsonGetSolution.compile_output);\r\n\t\t\t\toutputText = \"\";\r\n\t\t\t\toutputText += `\\n Error :${compilation_error}`;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tsocket.emit('code_send', { name: name, code : input, lang: lang, message: outputText });\r\n\t}\r\n\r\n\tconst submit = (e: FormEvent<HTMLFormElement>) => {\r\n\t\te.preventDefault();\r\n\t\tif(sendMode) { // txt - true\r\n\t\t\tsocket.emit('message', { name: name, message: inputMessage });\r\n\t\t \tsetInputMessage(\"\");\r\n\t\t} else {\r\n\t\t\tcomplieOn();\r\n\t\t}\r\n\t};\r\n\r\n\tconst inputChange = (e) => {setInputMessage (e.target.value);}\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('upload', (data) => {\r\n\t\t\tsetRecentChat(data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsocket.on('uploads', (data) => {\r\n\t\t\tsetRecentChat(data);\r\n\t\t});\r\n\t}, []);\r\n\r\n\tuseEffect(async () => {\t\t\r\n\t\t(await Object.keys(recentChat).length) > 0 && setChatMonitor([...chatMonitor, recentChat]);\r\n\t\tscrollToBottom();\r\n\t\tsetRecentChat('');\r\n\t}, [recentChat]);\r\n\r\n   return (\r\n\r\n\t<div className=\"menu__container\" >            \r\n\t\t<div id=\"chat_box\">\r\n\t\t\t<h2>Chatting</h2>       \r\n\t\t\t<section className=\"chat-list\" id=\"chatMonitor\">\r\n\t\t\t    {\r\n\t\t\t    \tchatMonitor.map((item: Message, i: number) =>\r\n\t\t\t    \t\t<div className=\"msgbox\">\r\n\t\t\t\t    \t\t<div key={i} className={\r\n\t\t\t\t\t    \t\t(item.name === name) ? \"message mright\" : \"message mleft\"\r\n\t\t\t\t\t    \t}>\r\n\t\t\t\t\t    \t<p className={\r\n\t\t\t\t\t    \t\t(item.name === name) ? \"username uright\" : \"username uleft\"\r\n\t\t\t\t\t    \t}>{item.name}</p>\r\n\t\t\t\t\t    \t{\r\n\t\t\t\t\t    \t\t(item.code) ? (\r\n\t\t\t\t\t    \t\t\t// 보낸 언어를 받아와서 mode = {itme.lang} 으로 뿌려줘야할듯\r\n\t\t\t\t\t    \t\t\t<div id=\"code_box\">\r\n\t\t\t\t\t    \t\t\t\t\r\n\t\t\t\t\t    \t\t\t\t<div id=\"code-ace\">\r\n\t\t\t\t\t    \t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t\t                <AceEditors\r\n\t\t\t\t\t\t\t\t                  className=\"aceeditors\"\r\n\t\t\t\t\t\t\t\t                  mode= {item.lang}\r\n\t\t\t\t\t\t\t\t                  theme=\"monokai\"\r\n\t\t\t\t\t\t\t\t                  value={item.code}\r\n\t\t\t\t\t\t\t\t                  fontSize={20}\r\n\t\t\t\t\t\t\t\t                  showPrintMargin={true}\r\n\t\t\t\t\t\t\t\t                  showGutter={true}\r\n\t\t\t\t\t\t\t\t                  highlightActiveLine={true}\r\n\t\t\t\t\t\t\t\t                 \r\n\t\t\t\t\t\t\t\t                  setOptions={{\r\n\t\t\t\t\t\t\t\t                  showLineNumbers: true,\r\n\t\t\t\t\t\t\t\t                  tabSize: 2,\r\n\t\t\t\t\t\t\t\t                  }}\r\n\t\t\t\t\t\t\t\t                  />\r\n\t\t\t\t\t\t\t                </React.Fragment>\r\n\t\t\t\t\t    \t\t\t\t</div>\r\n\t\t\t\t\t    \t\t\t\t\r\n\t\t\t\t\t    \t\t\t<p className=\"message-result\">{item.message}</p>\r\n\t\t\t\t\t    \t\t\t</div>\r\n\t\t\t\t\t    \t\t) : <p className=\"message-text\">{item.message}</p>\r\n\t\t\t\t\t    \t}\r\n\t\t\t\t\t    \t\r\n\t\t\t\t\t    \t</div>\r\n\t\t\t    \t\t</div>\t\t\r\n\t\t\t    \t)\r\n\t\t\t    }\r\n\t\t\t </section>\r\n\t\t\t\r\n\t\t\t<div className=\"chat-form\">\r\n\t\t\t<form onSubmit={(e: FormEvent<HTMLFormElement>) => submit(e)}>\r\n\t\t\t\t{\r\n\t\t\t\t\t(sendMode) ? <input type=\"text\" autoComplete=\"off\" onChange={inputChange} value={inputMessage} id=\"txt\" />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t\t(<div id=\"chat_ace\">\r\n\t\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t                <AceEditors\r\n\t\t\t\t                  className=\"aceeditor\"\r\n\t\t\t\t                  id=\"input\"\r\n\t\t\t\t                  ref={aceinput}\r\n\r\n\t\t\t\t                  mode= {lang}\r\n\t\t\t\t                  theme=\"monokai\"\r\n\t\t\t\t                  onChange={(value)=>setInput(value)}\r\n\t\t\t\t                  fontSize={20}\r\n\t\t\t\t                  showPrintMargin={true}\r\n\t\t\t\t                  showGutter={true}\r\n\t\t\t\t                  highlightActiveLine={true}\r\n\t\t\t\t                 \r\n\t\t\t\t                  setOptions={{\r\n\t\t\t\t                  showLineNumbers: true,\r\n\t\t\t\t                  tabSize: 2,\r\n\t\t\t\t                  }}\r\n\t\t\t\t                  />\r\n\t\t\t                </React.Fragment>\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t}\r\n\r\n\t\t\t\t<div id=\"send_box\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{ (!sendMode) && \r\n\t\t\t\t\t\t\t(<select name=\"code_lang\" onChange={lanChange}>\r\n\t\t\t\t\t\t\t\t<option value=\"45\">Assembly (NASM 2.14.02)</option>                     \r\n\t\t\t\t\t\t\t\t<option value=\"html\">HTML</option>\r\n\t\t\t\t\t\t\t\t<option value=\"50\">C (GCC 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"54\">C++ (GCC 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"51\">C# (Mono 6.6.0.161)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"86\">Clojure (1.10.1)   </option>\r\n\t\t\t\t\t\t\t\t<option value=\"55\">Common Lisp (SBCL 2.0.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"56\">D (DMD 2.089.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"59\">Fortran (GFortran 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"60\">Go (1.13.5)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"61\">Haskell (GHC 8.8.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"62\">Java (OpenJDK 13.0.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"63\">JavaScript (Node.js 12.14.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"64\">Lua (5.3.5)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"67\">Pascal (FPC 3.0.4)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"68\">PHP(7.4.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"71\">Python (3.8.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"72\">Ruby (2.7.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"73\">Rust (1.40.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"74\">TypeScript (3.7.4)</option>\r\n\t\t\t\t\t\t\t</select>)\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t<div id=\"send_btn\">\r\n\t\t\t\t\t\t\t<button type=\"submit\" id=\"send\" className=\"left\"><FontAwesomeIcon icon={faPaperPlane} size=\"2x\"/></button>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(sendMode) ? <button type=\"button\" id=\"code\" className=\"right\" onClick={codeOn}><FontAwesomeIcon icon={faCode} size=\"2x\" /></button> :\r\n\t\t\t\t\t\t\t\t<button type=\"button\" id=\"codes\" className=\"right\" onClick={codeOn}><FontAwesomeIcon icon={faCommentDots} size=\"2x\"/></button>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\r\n\t\t</div>\r\n\t</div>\r\n   );\r\n};\r\n\r\nexport default Chat;\r\n\r\n   ","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Login.js",["163","164","165"],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\SignUp.js",["166","167","168","169","170","171","172","173","174","175","176","177","178","179","180"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction SignUp(props) {\r\n\tconst [Name,setName] = useState(\"\");\r\n\tconst [Email,setEmail] = useState(\"\");\r\n\tconst [Id,setID] = useState(\"\");\r\n\tconst [Pw,setPW] = useState(\"\");\r\n\tconst [check, setCheck] = useState(false);\r\n\tconst onNameHandler = (event) => {setName (event.currentTarget.value)}\r\n\tconst onEmailHandler = (event) => {setEmail (event.currentTarget.value)}\r\n\tconst onIDHandler = (event) => {setID (event.currentTarget.value)}\r\n\tconst onPWHandler = (event) => {setPW (event.currentTarget.value)}\r\n\tconst [checkMsg, setCheckMsg] = useState(\"\");\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tAxios.post('/member/join',\r\n\t\t{\r\n\t\t\tid: Id,\r\n\t\t\tpw: Pw,\r\n\t\t\temail : Email,\r\n\t\t\tname : Name\r\n\t\t}).then((res) => {\r\n\t\t\talert(\"가입 되었습니다.\");\r\n\t\t\tprops.history.push(\"/login\");\r\n\t\t})\r\n\r\n\t\t// if(check === false) {\r\n\t\t// \talert(\"아이디 중복 체크를 해주세요!\");\r\n\t\t// } else {\r\n\t\t// \tAxios.post('/join',\r\n\t\t// \t{\r\n\t\t// \t\tid: Id,\r\n\t\t// \t\tpw: Pw,\r\n\t\t// \t\temail : Email,\r\n\t\t// \t\tname : Name\r\n\t\t// \t}).then((res) => {\r\n\t\t// \t\talert(\"가입 되었습니다.\");\r\n\t\t// \t\tprops.history.push(\"/login\");\r\n\t\t// \t})\r\n\t\t// }\r\n\t}\r\n\r\n\tconst checkId = (event) => {\r\n\t\t// if(Id == \"\") alert(\"아이디를 입력하세요\");\r\n\t\t// else {\r\n\t\t// \tAxios.post('/idCheck',\r\n\t\t// \t{\r\n\t\t// \t\tid : Id\r\n\t\t// \t}).then((res) => {\r\n\t\t// \t\tif(res.data === \"exist\") {\r\n\t\t// \t\t\tsetCheckMsg(\"이미 존재하는 아이디 입니다. 다른 아이디를 입력해주세요.\");\r\n\t\t// \t\t} else {\r\n\t\t// \t\t\tsetCheckMsg(\"사용 가능한 아이디 입니다.\");\r\n\t\t// \t\t\tsetCheck(true);\r\n\t\t// \t\t}\r\n\t\t// \t})\r\n\t\t// }\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"joinBox\">\r\n\t\t\t\t<form method=\"post\" onSubmit={onSubmitHandler}>\r\n\t\t\t\t\t<h3>회원가입</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} id=\"name\" onChange={onNameHandler} name='name' required />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email' required />\r\n\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><input className=\"ID-input\" type='text' placeholder='아이디' value={Id} onChange={onIDHandler} name='id' required /></li>\r\n\t\t\t\t\t\t<li><button type=\"button\" id=\"check\" onClick={checkId}>중복체크</button></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<span>{ (checkMsg !== \"\") && (checkMsg) }</span>\r\n\r\n\t\t\t\t\t<label>비밀번호</label>\r\n\t\t\t\t\t<input className=\"PW-input\" type='password' placeholder='비밀번호' value={Pw} onChange={onPWHandler} name='pw' required />\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<button className=\"joinBtn\" type=\"submit\">등록</button>\r\n\t\t\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t\t\t<button className=\"joinBtn\"> 로그인</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PublicRoute.js",["181","182","183","184","185"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\nconst PublicRoute = ({ component: Component, restricted, isLogin: isLogin, id: id, ...rest }) => {\r\n    return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => (isLogin && restricted ? <Redirect to=\"/\" /> : <Component {...props} id={id}/>)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PublicRoute;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\AceImport.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\TagBox.js",["186","187","188","189","190"],"import React, {useState, useCallback, useEffect } from \"react\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n\t<div className=\"tagtest\">{tag}<button className=\"btntest\" onClick={() => onRemove(tag)}>x</button></div>\r\n));\r\n\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n\t<div>\r\n\t\t{tags.map(tag => (\r\n\t\t\t<TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n\t\t))}\r\n\t</div>\r\n));\r\n\r\nconst TagBox = ({change, ex_tags, name}) => {\r\n\tconst [input, setInput] = useState('');\r\n\tconst [localTags, setLocalTags] = useState([]);\r\n\tconst [exTags, setExTags] = useState(ex_tags);\r\n\tconst [tags, setTags] = useState([]);\r\n\r\n\tconst tagSet = (localTags) =>{\r\n\t\tchange(localTags);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\ttagSet(localTags);\r\n\t\tif(exTags){\r\n\t\t\tif(exTags.length !== 0){\r\n\t\t\t\tsetLocalTags(exTags.filter(t => t !== \"undefined\"));\r\n\t\t\t\tsetExTags([]);\t\r\n\t\t\t}\r\n\t\t}\r\n\t}, [localTags]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(name){\r\n\t\t\tAxios.post('/board/getTag', {\r\n\t\t        name : name\r\n\t\t    }).then((res) => {\r\n\t\t    \tsetTags(res.data);\r\n\t\t    });\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst setClickTags = useCallback(e => {\r\n\t\tconst tag = e.target.getAttribute('tags');\r\n\t\tif(localTags.length < 3){\r\n\t\t\tsetLocalTags([...localTags, tag]);\r\n\t\t}\r\n\t\tsetInput('');\r\n\t})\r\n\r\n\tconst insertTag = useCallback(\r\n\t\ttag => {\r\n\t\t\tif(!tag) return;\r\n\t\t\tif(localTags.includes(tag)) return;\r\n\t\t\tif(localTags.length < 3){\r\n\t\t\t\tsetLocalTags([...localTags, tag]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\r\n\tconst onRemove = useCallback(\r\n\t\ttag => {\r\n\t\t\tsetLocalTags(localTags.filter(t => t !== tag));\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\tconst onChange = useCallback(e => {\r\n\t\tsetInput(e.target.value);\r\n\t}, []);\r\n\r\n\tconst onlyOne = tags.filter((element, i) => {\r\n\t\treturn tags.indexOf(element) === i;\r\n\t})\r\n\r\n\tconst filteredTags = onlyOne.filter((onlyOne) => {\r\n\t\tif(onlyOne !== localTags[0] && onlyOne !== localTags[1] && onlyOne !== localTags[2])\r\n\t\t\treturn onlyOne.toLowerCase().includes(input);\r\n\t\t\r\n\t});\r\n\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\te => {\r\n\t\t\tinsertTag(input.trim());\r\n\t\t\tsetInput('');\r\n\t\t},\r\n\t\t[input, insertTag],\r\n\t);\r\n\r\n\tconst handleKeyUp = useCallback(e =>{\r\n\t\tif(e.keyCode === 32){\r\n\t\t\tonSubmit();\r\n\t\t}\r\n\t})\t\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"TagBox\">\r\n\t\t\t<div className=\"tag-box\">\r\n\t\t\t\t<span className=\"tag-list left\">\r\n\t\t\t\t\t<TagList tags={localTags} onRemove={onRemove}/>\r\n\t\t\t\t</span>\r\n\t\t\t\t{exTags ?\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"tag-input\"\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonKeyUp={handleKeyUp}\r\n\t\t\t\t/> :\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"tag-input\"\r\n\t\t\t\t\tplaceholder=\"태그를 입력하세요\"\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonKeyUp={handleKeyUp}\r\n\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t\t{input &&\r\n\t\t\t\t\tfilteredTags.length !==0 &&\r\n\t\t\t\t\t<div className=\"tag-set\">\r\n\t\t\t\t\t\t{filteredTags.map((element,i) =>(\r\n\t\t\t\t\t\t\t<div onClick={setClickTags} tags={element}>\r\n\t\t\t\t\t\t\t\t<button onClick={setClickTags} tags={element}>{element}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagBox;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrismImport.js",[],{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":8,"column":7,"nodeType":"197","endLine":8,"endColumn":26},{"ruleId":"198","severity":1,"message":"199","line":9,"column":9,"nodeType":"200","messageId":"201","endLine":9,"endColumn":11},{"ruleId":"198","severity":1,"message":"202","line":13,"column":8,"nodeType":"200","messageId":"201","endLine":13,"endColumn":19},{"ruleId":"198","severity":1,"message":"203","line":7,"column":8,"nodeType":"200","messageId":"201","endLine":7,"endColumn":14},{"ruleId":"198","severity":1,"message":"204","line":7,"column":16,"nodeType":"200","messageId":"201","endLine":7,"endColumn":25},{"ruleId":"198","severity":1,"message":"205","line":11,"column":8,"nodeType":"200","messageId":"201","endLine":11,"endColumn":13},{"ruleId":"198","severity":1,"message":"206","line":11,"column":15,"nodeType":"200","messageId":"201","endLine":11,"endColumn":23},{"ruleId":"207","severity":1,"message":"208","line":24,"column":4,"nodeType":"209","messageId":"210","endLine":50,"endColumn":8},{"ruleId":"211","severity":1,"message":"212","line":49,"column":11,"nodeType":"213","messageId":"214","endLine":49,"endColumn":65},{"ruleId":"215","severity":1,"message":"216","line":49,"column":11,"nodeType":"200","messageId":"217","endLine":49,"endColumn":18,"fix":"218"},{"ruleId":"219","severity":1,"message":"220","line":49,"column":11,"nodeType":"213","messageId":"221","endLine":49,"endColumn":65},{"ruleId":"222","severity":1,"message":"223","line":60,"column":15,"nodeType":"224","messageId":"225","endLine":60,"endColumn":17},{"ruleId":"198","severity":1,"message":"226","line":1,"column":26,"nodeType":"200","messageId":"201","endLine":1,"endColumn":35},{"ruleId":"198","severity":1,"message":"227","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"228","line":7,"column":38,"nodeType":"200","messageId":"201","endLine":7,"endColumn":54},{"ruleId":"198","severity":1,"message":"229","line":19,"column":11,"nodeType":"200","messageId":"201","endLine":19,"endColumn":16},{"ruleId":"198","severity":1,"message":"230","line":19,"column":18,"nodeType":"200","messageId":"201","endLine":19,"endColumn":26},{"ruleId":"198","severity":1,"message":"231","line":31,"column":27,"nodeType":"200","messageId":"201","endLine":31,"endColumn":44},{"ruleId":"198","severity":1,"message":"232","line":32,"column":24,"nodeType":"200","messageId":"201","endLine":32,"endColumn":38},{"ruleId":"198","severity":1,"message":"233","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"226","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"234","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":5,"column":47,"nodeType":"237","messageId":"238","endLine":5,"endColumn":63,"fix":"239"},{"ruleId":"198","severity":1,"message":"240","line":19,"column":15,"nodeType":"200","messageId":"201","endLine":19,"endColumn":22},{"ruleId":"198","severity":1,"message":"241","line":20,"column":8,"nodeType":"200","messageId":"201","endLine":20,"endColumn":15},{"ruleId":"242","severity":1,"message":"243","line":43,"column":5,"nodeType":"244","endLine":43,"endColumn":7,"suggestions":"245"},{"ruleId":"198","severity":1,"message":"246","line":24,"column":9,"nodeType":"200","messageId":"201","endLine":24,"endColumn":16},{"ruleId":"198","severity":1,"message":"247","line":25,"column":9,"nodeType":"200","messageId":"201","endLine":25,"endColumn":13},{"ruleId":"198","severity":1,"message":"248","line":25,"column":15,"nodeType":"200","messageId":"201","endLine":25,"endColumn":22},{"ruleId":"198","severity":1,"message":"249","line":26,"column":6,"nodeType":"200","messageId":"201","endLine":26,"endColumn":14},{"ruleId":"242","severity":1,"message":"250","line":105,"column":5,"nodeType":"244","endLine":105,"endColumn":18,"suggestions":"251"},{"ruleId":"198","severity":1,"message":"252","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":16},{"ruleId":"198","severity":1,"message":"240","line":18,"column":18,"nodeType":"200","messageId":"201","endLine":18,"endColumn":25},{"ruleId":"198","severity":1,"message":"241","line":26,"column":11,"nodeType":"200","messageId":"201","endLine":26,"endColumn":18},{"ruleId":"242","severity":1,"message":"253","line":59,"column":8,"nodeType":"244","endLine":59,"endColumn":10,"suggestions":"254"},{"ruleId":"242","severity":1,"message":"255","line":76,"column":8,"nodeType":"244","endLine":76,"endColumn":10,"suggestions":"256"},{"ruleId":"242","severity":1,"message":"257","line":202,"column":8,"nodeType":"244","endLine":202,"endColumn":10,"suggestions":"258"},{"ruleId":"198","severity":1,"message":"259","line":1,"column":38,"nodeType":"200","messageId":"201","endLine":1,"endColumn":49},{"ruleId":"198","severity":1,"message":"234","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":13},{"ruleId":"198","severity":1,"message":"241","line":13,"column":8,"nodeType":"200","messageId":"201","endLine":13,"endColumn":15},{"ruleId":"198","severity":1,"message":"260","line":17,"column":15,"nodeType":"200","messageId":"201","endLine":17,"endColumn":22},{"ruleId":"198","severity":1,"message":"261","line":24,"column":9,"nodeType":"200","messageId":"201","endLine":24,"endColumn":13},{"ruleId":"198","severity":1,"message":"240","line":24,"column":15,"nodeType":"200","messageId":"201","endLine":24,"endColumn":22},{"ruleId":"207","severity":1,"message":"208","line":61,"column":4,"nodeType":"209","messageId":"210","endLine":87,"endColumn":5},{"ruleId":"211","severity":1,"message":"212","line":86,"column":5,"nodeType":"213","messageId":"214","endLine":86,"endColumn":59},{"ruleId":"215","severity":1,"message":"216","line":86,"column":5,"nodeType":"200","messageId":"217","endLine":86,"endColumn":12,"fix":"262"},{"ruleId":"219","severity":1,"message":"220","line":86,"column":5,"nodeType":"213","messageId":"221","endLine":86,"endColumn":59},{"ruleId":"222","severity":1,"message":"223","line":97,"column":15,"nodeType":"224","messageId":"225","endLine":97,"endColumn":17},{"ruleId":"242","severity":1,"message":"263","line":195,"column":12,"nodeType":"264","endLine":199,"endColumn":3},{"ruleId":"242","severity":1,"message":"265","line":199,"column":5,"nodeType":"244","endLine":199,"endColumn":17,"suggestions":"266"},{"ruleId":"198","severity":1,"message":"267","line":8,"column":9,"nodeType":"200","messageId":"201","endLine":8,"endColumn":11},{"ruleId":"198","severity":1,"message":"268","line":8,"column":12,"nodeType":"200","messageId":"201","endLine":8,"endColumn":17},{"ruleId":"242","severity":1,"message":"269","line":42,"column":5,"nodeType":"244","endLine":42,"endColumn":17,"suggestions":"270"},{"ruleId":"198","severity":1,"message":"226","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":26},{"ruleId":"198","severity":1,"message":"227","line":2,"column":10,"nodeType":"200","messageId":"201","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"234","line":4,"column":8,"nodeType":"200","messageId":"201","endLine":4,"endColumn":13},{"ruleId":"198","severity":1,"message":"271","line":8,"column":9,"nodeType":"200","messageId":"201","endLine":8,"endColumn":13},{"ruleId":"198","severity":1,"message":"272","line":9,"column":9,"nodeType":"200","messageId":"201","endLine":9,"endColumn":14},{"ruleId":"198","severity":1,"message":"273","line":10,"column":9,"nodeType":"200","messageId":"201","endLine":10,"endColumn":11},{"ruleId":"198","severity":1,"message":"274","line":11,"column":9,"nodeType":"200","messageId":"201","endLine":11,"endColumn":11},{"ruleId":"198","severity":1,"message":"275","line":12,"column":9,"nodeType":"200","messageId":"201","endLine":12,"endColumn":14},{"ruleId":"198","severity":1,"message":"276","line":12,"column":16,"nodeType":"200","messageId":"201","endLine":12,"endColumn":24},{"ruleId":"198","severity":1,"message":"277","line":13,"column":8,"nodeType":"200","messageId":"201","endLine":13,"endColumn":21},{"ruleId":"198","severity":1,"message":"278","line":14,"column":8,"nodeType":"200","messageId":"201","endLine":14,"endColumn":22},{"ruleId":"198","severity":1,"message":"279","line":15,"column":8,"nodeType":"200","messageId":"201","endLine":15,"endColumn":19},{"ruleId":"198","severity":1,"message":"202","line":16,"column":8,"nodeType":"200","messageId":"201","endLine":16,"endColumn":19},{"ruleId":"198","severity":1,"message":"280","line":17,"column":9,"nodeType":"200","messageId":"201","endLine":17,"endColumn":17},{"ruleId":"198","severity":1,"message":"281","line":17,"column":19,"nodeType":"200","messageId":"201","endLine":17,"endColumn":30},{"ruleId":"198","severity":1,"message":"233","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":25},{"ruleId":"198","severity":1,"message":"226","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"234","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":13},{"ruleId":"235","severity":1,"message":"236","line":5,"column":58,"nodeType":"237","messageId":"238","endLine":5,"endColumn":74,"fix":"282"},{"ruleId":"235","severity":1,"message":"283","line":5,"column":76,"nodeType":"237","messageId":"238","endLine":5,"endColumn":82,"fix":"284"},{"ruleId":"242","severity":1,"message":"285","line":35,"column":5,"nodeType":"244","endLine":35,"endColumn":16,"suggestions":"286"},{"ruleId":"242","severity":1,"message":"287","line":46,"column":5,"nodeType":"244","endLine":46,"endColumn":7,"suggestions":"288"},{"ruleId":"242","severity":1,"message":"289","line":48,"column":23,"nodeType":"200","endLine":48,"endColumn":34},{"ruleId":"290","severity":1,"message":"291","line":81,"column":48,"nodeType":"264","messageId":"292","endLine":81,"endColumn":50},{"ruleId":"242","severity":1,"message":"289","line":96,"column":22,"nodeType":"200","endLine":96,"endColumn":33},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'PW' is assigned a value but never used.","Identifier","unusedVar","'onPWHandler' is assigned a value but never used.","'output' is assigned a value but never used.","'setOutput' is assigned a value but never used.","'basic' is assigned a value but never used.","'setBasic' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'defualt:' is defined but never used.","unused",{"range":"295","text":"296"},"no-unreachable","Unreachable code.","unreachableCode","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Link' is defined but never used.","'setDefaultLocale' is defined but never used.","'today' is assigned a value but never used.","'setToday' is assigned a value but never used.","'setDisabledNewBtn' is assigned a value but never used.","'setDisabledBtn' is assigned a value but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","no-useless-rename","Destructuring assignment isLogin unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"297","text":"298"},"'setUser' is assigned a value but never used.","'mounted' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'post.contents' and 'post.title'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'post.title'.","ArrayExpression",["299"],"'loading' is assigned a value but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'tagarray' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadList' and 'loadSearch'. Either include them or remove the dependency array.",["300"],"'NotFound' is defined but never used.","React Hook useEffect has missing dependencies: 'idx', 'name', and 'props.history'. Either include them or remove the dependency array.",["301"],"React Hook useCallback has missing dependencies: 'idx' and 'name'. Either include them or remove the dependency array.",["302"],"React Hook useEffect has a missing dependency: 'hitUpdate'. Either include it or remove the dependency array.",["303"],"'useCallback' is defined but never used.","'setName' is assigned a value but never used.","'user' is assigned a value but never used.",{"range":"304","text":"296"},"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'chatMonitor'. Either include it or remove the dependency array. You can also do a functional update 'setChatMonitor(c => ...)' if you only need 'chatMonitor' in the 'setChatMonitor' call.",["305"],"'pw' is assigned a value but never used.","'setPW' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["306"],"'Name' is assigned a value but never used.","'Email' is assigned a value but never used.","'Id' is assigned a value but never used.","'Pw' is assigned a value but never used.","'check' is assigned a value but never used.","'setCheck' is assigned a value but never used.","'onNameHandler' is assigned a value but never used.","'onEmailHandler' is assigned a value but never used.","'onIDHandler' is assigned a value but never used.","'checkMsg' is assigned a value but never used.","'setCheckMsg' is assigned a value but never used.",{"range":"307","text":"298"},"Destructuring assignment id unnecessarily renamed.",{"range":"308","text":"309"},"React Hook useEffect has missing dependencies: 'exTags' and 'tagSet'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLocalTags' needs the current value of 'exTags'.",["310"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["311"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",[4065,4075],"",[182,198],"isLogin",{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},[4872,4882],{"desc":"322","fix":"323"},{"desc":"324","fix":"325"},[193,209],[211,217],"id",{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},"Update the dependencies array to be: [post.contents, post.title]",{"range":"330","text":"331"},"Update the dependencies array to be: [loadList, loadSearch, searchValue]",{"range":"332","text":"333"},"Update the dependencies array to be: [idx, name, props.history]",{"range":"334","text":"335"},"Update the dependencies array to be: [idx, name]",{"range":"336","text":"337"},"Update the dependencies array to be: [hitUpdate]",{"range":"338","text":"339"},"Update the dependencies array to be: [chatMonitor, recentChat]",{"range":"340","text":"341"},"Update the dependencies array to be: [loginCheck, props.history]",{"range":"342","text":"343"},"Update the dependencies array to be: [exTags, localTags, tagSet]",{"range":"344","text":"345"},"Update the dependencies array to be: [name]",{"range":"346","text":"347"},[1404,1406],"[post.contents, post.title]",[3233,3246],"[loadList, loadSearch, searchValue]",[2129,2131],"[idx, name, props.history]",[2577,2579],"[idx, name]",[5908,5910],"[hitUpdate]",[8762,8774],"[chatMonitor, recentChat]",[923,935],"[loginCheck, props.history]",[927,938],"[exTags, localTags, tagSet]",[1109,1111],"[name]"]