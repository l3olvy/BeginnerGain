[{"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\index.js":"1","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\App.js":"2","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Header.js":"3","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Navigation.js":"4","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Body.js":"5","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Footer.js":"6","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Writing.js":"7","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Forum.js":"8","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\SignUp.js":"9","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\IdPw.js":"10","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Qna.js":"11","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Home.js":"12","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Hire.js":"13","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Talk.js":"14","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Login.js":"15","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\News.js":"16","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Chat.js":"17","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Post.js":"18","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Board.js":"19"},{"size":236,"mtime":1611237647627,"results":"20","hashOfConfig":"21"},{"size":516,"mtime":1611237647591,"results":"22","hashOfConfig":"21"},{"size":1094,"mtime":1611237647604,"results":"23","hashOfConfig":"21"},{"size":479,"mtime":1610800732991,"results":"24","hashOfConfig":"21"},{"size":1315,"mtime":1611237647597,"results":"25","hashOfConfig":"21"},{"size":226,"mtime":1611237647599,"results":"26","hashOfConfig":"21"},{"size":4056,"mtime":1611237647613,"results":"27","hashOfConfig":"21"},{"size":236,"mtime":1611237647638,"results":"28","hashOfConfig":"21"},{"size":1931,"mtime":1611237647665,"results":"29","hashOfConfig":"21"},{"size":1631,"mtime":1611237647650,"results":"30","hashOfConfig":"21"},{"size":841,"mtime":1611237647662,"results":"31","hashOfConfig":"21"},{"size":343,"mtime":1611237647647,"results":"32","hashOfConfig":"21"},{"size":208,"mtime":1611237647643,"results":"33","hashOfConfig":"21"},{"size":527,"mtime":1611237647671,"results":"34","hashOfConfig":"21"},{"size":1777,"mtime":1611237647656,"results":"35","hashOfConfig":"21"},{"size":277,"mtime":1611237647658,"results":"36","hashOfConfig":"21"},{"size":211,"mtime":1611237647631,"results":"37","hashOfConfig":"21"},{"size":9129,"mtime":1611237647610,"results":"38","hashOfConfig":"21"},{"size":2958,"mtime":1611237647595,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j33hnk",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\index.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\App.js",[],["82","83"],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Header.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Navigation.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Body.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Footer.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Writing.js",["84","85","86"],"import React, { useState, useEffect } from 'react';\r\nimport '../css/Components.css';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport Axios from 'axios';\r\n\r\nconst editorConfiguration = {\r\n\tsimpleUpload: {\r\n\t\tuploadUrl: '/upload'\r\n\t},\r\n\ttoolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Writing(props) {\r\n\tconst [post, setPost] = useState(props.location.state ? props.location.state : JSON.parse(localStorage.getItem('prev')));\r\n\tconst [title,setTitle] = useState('');\r\n\tconst [contents,setContent] = useState('');\r\n\tconst [tag, setTag] = useState('');\r\n\tconst onTitleHandler = (event) => {setTitle (event.currentTarget.value);}\r\n\tconst onTagHandler = (event) => {setTag (event.currentTarget.value); }\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.location.state !== undefined) {\r\n\t\t\tlocalStorage.setItem(\"prev\", JSON.stringify(props.location.state));\r\n\t\t}\r\n\t\tif (props.match.params.idx !== undefined) {\r\n\t\t\tloadPrevData();\r\n\t\t} else {\r\n\t\t\treset();\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst reset = (e) => {\r\n\t\tsetPost('');\r\n\t\tsetTitle('');\r\n\t\tsetTag('');\r\n\t}\r\n\r\n\tconst loadPrevData = (e) => {\r\n\t\tsetTitle(post.title);\r\n\t\tsetContent(post.contents);\r\n\t\tif (post.name === \"QNA\")\r\n\t\t\tsetTag(post.tag);\r\n\t\telse\r\n\t\t\tsetTag(post.category);\r\n\t}\r\n\r\n\tconst updateBtn = (e) => {\r\n\t\tif (window.confirm(\"수정하시겠습니까?\")) {\r\n\t\t\tconst idx = e.target.getAttribute('comment-idx');\r\n\r\n\t\t\tif (post.name === \"QNA\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/updateqna', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t})\r\n\t\t\t} else if (post.name === \"TALK\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/updatetalk', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCkeditorState = (event, editor) => {\r\n\t\tconst data = editor.getData();\r\n\t\tsetContent(data);\r\n\t}\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tif (props.match.params.name === \"qna\") {\r\n\t\t\tAxios.post('http://localhost:8000/board/writing_qna', {\r\n\t\t\t\twriter: \"wwwww\",\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tcontents: contents,\r\n\t\t\t\timg: null,\r\n\t\t\t\ttag: tag,\r\n\t\t\t\thit: 0\r\n\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\tprops.history.push(`/${props.match.params.name}`); })\r\n\t\t\t.catch((error) => { console.log(error) });\r\n\t\t} else if (props.match.params.name === \"talk\") {\r\n\t\t\tAxios.post('http://localhost:8000/board/writing_talk', {\r\n\t\t\t\twriter: \"wwwww\",\r\n\t\t\t\ttitle: title,\r\n\t\t\t\tcontents: contents,\r\n\t\t\t\timg: null,\r\n\t\t\t\tcategory: tag,\r\n\t\t\t\thit: 0\r\n\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\tprops.history.push(`/${props.match.params.name}`); })\r\n\t\t\t.catch((error) => { console.log(error) });\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"Writing\">\r\n\t\t\t<p className=\"bolder\">Ask a public question</p>\r\n\t\t\t<div className='form-wrapper'>\r\n\t\t\t\t<p className=\"bold\">제목</p>\r\n\t\t\t\t<input className=\"title-input\" type='text' onChange={onTitleHandler} name='title' value={title}/>\r\n\t\t\t\t<p className=\"bold\">내용</p>                \r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ Editor }\r\n\t\t\t\t\tconfig={ editorConfiguration }\r\n\t\t\t\t\tdata= {contents}\r\n\t                onChange={ handleCkeditorState }    \r\n\t                name = 'contents'          \r\n\t\t        /> \r\n\t\t        <p className=\"bold\">태그</p>\r\n\t            <input className=\"tag-input\" type='text' onChange={onTagHandler} name = 'tag' value={tag}/>\r\n\t        </div>\r\n\t            {(post) ? <button className=\"modify-button\" onClick={updateBtn} comment-idx={post.idx}>수정</button> : <button className=\"submit-button\" onClick={onSubmitHandler} >작성</button>}\r\n        </div>\r\n\t);\r\n}\r\n\r\nexport default Writing;","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Forum.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\SignUp.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\IdPw.js",["87","88"],"import React, {useState} from \"react\";\r\nimport \"../css/Components.css\";\r\n\r\nfunction IdPw() {\r\n\r\n\tconst [Name,setName] = useState(\"\")\r\n\tconst [Email,setEmail] = useState(\"\")\r\n\tconst [ID,setID] = useState(\"\")\r\n\tconst [PW,setPW] = useState(\"\")\r\n\tconst onNameHandler = (event) => { setName (event.currentTarget.value) }\r\n\tconst onEmailHandler = (event) => { setEmail (event.currentTarget.value) }\r\n\tconst onIDHandler = (event) => { setID (event.currentTarget.value) }\r\n\tconst onPWHandler = (event) => { setPW (event.currentTarget.value) }\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<h3>아이디 찾기</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\t\t\t\t\t<button className=\"get-id\"> 찾기</button>\r\n\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>비밀번호 찾기</h3>\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<input className=\"ID-input\" type='text' placeholder='아이디' value={ID} onChange={onIDHandler} name='id'/>\r\n\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\r\n\t\t\t\t\t<button className=\"get-pw\"> 찾기</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default IdPw;","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Qna.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Home.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Hire.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Talk.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Login.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\News.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\routes\\Chat.js",[],"C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Post.js",["89","90","91"],"import React, { useState, useEffect } from 'react';\r\nimport '../css/Components.css';\r\nimport Axios from 'axios';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { Link } from \"react-router-dom\";\r\nimport Prism from \"prismjs\";\r\nimport \"prismjs/themes/prism-tomorrow.css\";\r\n\r\nconst editorConfiguration = {\r\n    simpleUpload: {\r\n        uploadUrl: '/upload'\r\n    },\r\n    toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Post(props) {\r\n    const [post, setPost] = useState(props.location.state ? props.location.state : JSON.parse(localStorage.getItem('prev')));\r\n    const [comment, setComment] = useState([]);\r\n    const [mod, setMod] = useState('');\r\n    const [modIdx, setModIdx] = useState('');\r\n    const [contents, setContent] = useState('');\r\n    const [comments, setComments] = useState('');\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n        if (props.location.state !== undefined) {\r\n            localStorage.setItem(\"prev\", JSON.stringify(props.location.state));\r\n        }\r\n        loadComment();\r\n    }, [])\r\n\r\n    const loadComment = async () => {\r\n        const idx = post.idx;\r\n        if (post.name === \"QNA\") {\r\n            Axios.post('http://localhost:8000/board/getqna_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism.highlightAll();\r\n            })\r\n        } else if (post.name === \"TALK\") {\r\n            Axios.post('http://localhost:8000/board/gettalk_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism.highlightAll();\r\n            })\r\n        }\r\n    }\r\n\r\n    const delBtn = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const idx = e.target.getAttribute('post-idx');\r\n            if (post.name === \"QNA\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna', {\r\n                    idx: idx\r\n                }).then(() => {\r\n                    props.history.push(\"/qna\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            } else if (post.name === \"TALK\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk', {\r\n                    idx: idx\r\n                }).then(() => {\r\n                    props.history.push(\"/talk\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const delBtn_c = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const idx = e.target.getAttribute('comment-idx');\r\n            if (post.name === \"QNA\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna_c', {\r\n                    idx: idx\r\n                }).then(() => {\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            } else if (post.name === \"TALK\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk_c', {\r\n                    idx: idx\r\n                }).then(() => {\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            }\r\n        }\r\n        loadComment();\r\n    }\r\n\r\n    const modBtn_c = (e) => {\r\n        setMod(e.target.getAttribute('comment-contents'));\r\n        setModIdx(e.target.getAttribute('comment-idx'));\r\n    }\r\n\r\n    const updateBtn_c = (e) => {\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            const idx = modIdx;\r\n            if (post.name === \"QNA\") {\r\n                Axios.post('http://localhost:8000/board/updateqna_c', {\r\n                    idx: idx,\r\n                    contents: contents\r\n                }).then(() => {\r\n                    alert(\"수정 되었습니다!\");\r\n                    setMod('');\r\n                })\r\n            } else if (post.name === \"TALK\") {\r\n                Axios.post('http://localhost:8000/board/updatetalk_c', {\r\n                    idx: idx,\r\n                    contents: contents\r\n                }).then(() => {\r\n                    alert(\"수정 되었습니다!\");\r\n                    setMod('');\r\n                })\r\n            }\r\n        }\r\n        loadComment();\r\n    }\r\n\r\n    const handleCkeditorState = (event, editor) => {\r\n        const data = editor.getData();\r\n        setContent(data);\r\n        setComments(data);\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        if (post.name === \"QNA\") {\r\n            Axios.post('http://localhost:8000/board/postqna', {\r\n                bid: post.idx,\r\n                writer: \"writer\",\r\n                contents: comments,\r\n                img: null,\r\n                good: 8\r\n            }).then((res) => {\r\n                alert(\"작성 되었습니다.\");\r\n                loadComment();\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n        } else {\r\n            Axios.post('http://localhost:8000/board/posttalk', {\r\n                bid: post.idx,\r\n                writer: \"writer\",\r\n                contents: comments,\r\n                img: null,\r\n                good: 8\r\n            }).then((res) => {\r\n                alert(\"작성 되었습니다.\");\r\n                loadComment();\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n        }\r\n    }\r\n\r\n    const onptbHandler = (event) => {\r\n        if (post.name === \"TALK\")\r\n            props.history.push(\"/talk\")\r\n        else\r\n            props.history.push(\"/qna\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className='form-wrapper'>\r\n                <div className=\"question-header\">\r\n                    <p className=\"bolder\">{post.title}</p>\r\n                </div>\r\n                <div className=\"grid\">\r\n                    <div>\r\n                        <span>Asked</span>\r\n                        <time>{post.rdate}</time>\r\n                    </div>\r\n                    <div>\r\n                        <span>Viewed</span>\r\n                        {post.hit} times\r\n                    </div>\r\n                    <div className=\"writer\">\r\n                        <Link\r\n                        to={{\r\n                           pathname : `/${props.match.params.name}/modify/${post.idx}`,\r\n                           state: {\r\n                                key : post.idx,\r\n                                idx : post.idx,\r\n                                title : post.title,\r\n                                contents : post.contents,\r\n                                tag : post.tag,\r\n                                category : post.category,\r\n                                name : post.name\r\n                            }\r\n                        }}>\r\n                        <button className=\"modifyBtn\"> 수정 </button></Link>\r\n                        <button className=\"deleteBtn\" onClick={delBtn} post-idx={post.idx}> 삭제 </button>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <hr />\r\n                <div className=\"question-body\">\r\n                    <div className=\"selctContents\" dangerouslySetInnerHTML={ {__html: post.contents} }></div>\r\n                    <div className=\"user-info\">\r\n                        asked <span>{post.rdate}</span>\r\n                        <span>{post.writer}</span>\r\n                    </div>               \r\n                </div>\r\n                <br/>\r\n                <hr/>\r\n\r\n                <p className=\"bold\">2개의 답변</p>\r\n                {comment.map(element =>(\r\n                    <div className=\"question-answer\">\r\n                        <p className=\"selctContents\" dangerouslySetInnerHTML={ {__html: element.contents}}></p>                    \r\n                        <div className=\"user-info\">   \r\n                            <button className=\"modifyBtn\" onClick={modBtn_c} comment-contents={element.contents} comment-idx={element.idx}> 수정 </button>\r\n                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>\r\n                            answered <span>{element.cdate}</span>\r\n                            <span>{element.writer}</span>\r\n                        </div>   \r\n                    </div>\r\n                ))}\r\n\r\n                <p className=\"bold\">댓글작성</p>\r\n                <CKEditor\r\n                    editor={ Editor }\r\n                    config={ editorConfiguration }\r\n                    data= {mod}\r\n                    onChange={ handleCkeditorState }\r\n                    name={comments}           \r\n                />\r\n                {(mod.length === 0) ? <button className=\"submit-button\" onClick={onSubmitHandler}>작성</button> : <button className=\"modify-button\" onClick={updateBtn_c}>수정</button> }\r\n                <button className=\"posttoboard\" onClick={onptbHandler}>목록으로</button> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","C:\\Users\\ptcho\\Documents\\GitHub\\BeginnerGain\\client\\src\\components\\Board.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":18,"column":12,"nodeType":"98","messageId":"99","endLine":18,"endColumn":16},{"ruleId":"96","severity":1,"message":"100","line":18,"column":18,"nodeType":"98","messageId":"99","endLine":18,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":29,"column":15,"nodeType":"103","endLine":29,"endColumn":17,"suggestions":"104"},{"ruleId":"96","severity":1,"message":"105","line":11,"column":9,"nodeType":"98","messageId":"99","endLine":11,"endColumn":11},{"ruleId":"96","severity":1,"message":"106","line":18,"column":8,"nodeType":"98","messageId":"99","endLine":18,"endColumn":19},{"ruleId":"96","severity":1,"message":"107","line":5,"column":8,"nodeType":"98","messageId":"99","endLine":5,"endColumn":17},{"ruleId":"96","severity":1,"message":"100","line":18,"column":18,"nodeType":"98","messageId":"99","endLine":18,"endColumn":25},{"ruleId":"101","severity":1,"message":"108","line":27,"column":8,"nodeType":"103","endLine":27,"endColumn":10,"suggestions":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'post' is assigned a value but never used.","Identifier","unusedVar","'setPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'PW' is assigned a value but never used.","'onPWHandler' is assigned a value but never used.","'striptags' is defined but never used.","React Hook useEffect has missing dependencies: 'loadComment' and 'props.location.state'. Either include them or remove the dependency array.",["113"],"no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [props.location.state]",{"range":"118","text":"119"},"Update the dependencies array to be: [loadComment, props.location.state]",{"range":"120","text":"121"},[1135,1137],"[props.location.state]",[1013,1015],"[loadComment, props.location.state]"]