[{"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\index.js":"1","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\App.js":"2","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Header.js":"3","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Navigation.js":"4","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Footer.js":"5","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Body.js":"6","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Forum.js":"7","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Hire.js":"8","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\News.js":"9","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Chat.js":"10","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Home.js":"11","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\IdPw.js":"12","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Talk.js":"13","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Login.js":"14","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\SignUp.js":"15","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Qna.js":"16","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Post.js":"17","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Writing.js":"18","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Board.js":"19"},{"size":236,"mtime":1611236277960,"results":"20","hashOfConfig":"21"},{"size":516,"mtime":1611237834286,"results":"22","hashOfConfig":"21"},{"size":1161,"mtime":1611502958071,"results":"23","hashOfConfig":"21"},{"size":479,"mtime":1611236377265,"results":"24","hashOfConfig":"21"},{"size":226,"mtime":1611235164839,"results":"25","hashOfConfig":"21"},{"size":1453,"mtime":1611579334522,"results":"26","hashOfConfig":"21"},{"size":236,"mtime":1611235857088,"results":"27","hashOfConfig":"21"},{"size":208,"mtime":1611235869546,"results":"28","hashOfConfig":"21"},{"size":277,"mtime":1611236119976,"results":"29","hashOfConfig":"21"},{"size":211,"mtime":1611235842775,"results":"30","hashOfConfig":"21"},{"size":343,"mtime":1611236386802,"results":"31","hashOfConfig":"21"},{"size":1631,"mtime":1611236018119,"results":"32","hashOfConfig":"21"},{"size":272,"mtime":1611902540819,"results":"33","hashOfConfig":"21"},{"size":1746,"mtime":1611582285675,"results":"34","hashOfConfig":"21"},{"size":1931,"mtime":1611236180757,"results":"35","hashOfConfig":"21"},{"size":298,"mtime":1611902518626,"results":"36","hashOfConfig":"21"},{"size":10906,"mtime":1611580657959,"results":"37","hashOfConfig":"21"},{"size":4678,"mtime":1611679761998,"results":"38","hashOfConfig":"21"},{"size":7607,"mtime":1611900944102,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1abfm1d",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\index.js",[],["81","82"],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\App.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Header.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Navigation.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Footer.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Body.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Forum.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Hire.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\News.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Chat.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Home.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\IdPw.js",["83","84"],"import React, {useState} from \"react\";\r\nimport \"../css/Components.css\";\r\n\r\nfunction IdPw() {\r\n\r\n\tconst [Name,setName] = useState(\"\")\r\n\tconst [Email,setEmail] = useState(\"\")\r\n\tconst [ID,setID] = useState(\"\")\r\n\tconst [PW,setPW] = useState(\"\")\r\n\tconst onNameHandler = (event) => { setName (event.currentTarget.value) }\r\n\tconst onEmailHandler = (event) => { setEmail (event.currentTarget.value) }\r\n\tconst onIDHandler = (event) => { setID (event.currentTarget.value) }\r\n\tconst onPWHandler = (event) => { setPW (event.currentTarget.value) }\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<h3>아이디 찾기</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\t\t\t\t\t<button className=\"get-id\"> 찾기</button>\r\n\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>비밀번호 찾기</h3>\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<input className=\"ID-input\" type='text' placeholder='아이디' value={ID} onChange={onIDHandler} name='id'/>\r\n\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\r\n\t\t\t\t\t<button className=\"get-pw\"> 찾기</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default IdPw;","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Talk.js",["85","86"],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Login.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\SignUp.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\routes\\Qna.js",["87","88"],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Post.js",["89"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../css/Components.css';\r\nimport Axios from 'axios';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { Link } from \"react-router-dom\";\r\nimport Prism from \"prismjs\";\r\n// Include the toolbar languages\r\nimport \"prismjs/themes/prism.css\";\r\nimport \"prismjs/components/prism-markup-templating\";\r\nimport \"prismjs/components/prism-c\";\r\nimport \"prismjs/components/prism-cpp\";\r\nimport \"prismjs/components/prism-csharp\";\r\nimport \"prismjs/components/prism-diff\";\r\nimport \"prismjs/components/prism-python\";\r\nimport \"prismjs/components/prism-ruby\";\r\nimport \"prismjs/components/prism-typescript\";\r\nimport \"prismjs/components/prism-xml-doc\";\r\nimport \"prismjs/components/prism-java\";\r\nimport \"prismjs/components/prism-php\";\r\n// Include the toolbar plugin: (optional)\r\nimport \"prismjs/plugins/toolbar/prism-toolbar\";\r\nimport \"prismjs/plugins/toolbar/prism-toolbar.css\";\r\n// Include some other plugins: (optional)\r\nimport \"prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard\";\r\nimport \"prismjs/plugins/show-language/prism-show-language\";\r\n\r\nconst editorConfiguration = {\r\n    simpleUpload: { uploadUrl: '/upload'},\r\n    toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Post(props) {\r\n    const [post, setPost] = useState(props.location.state ? props.location.state : JSON.parse(localStorage.getItem('prev')));\r\n    const [comment, setComment] = useState([]);\r\n    const [mod, setMod] = useState('');\r\n    const [mode, setMode] = useState(false);\r\n    const [modIdx, setModIdx] = useState('');\r\n    const [commentnum, setCommentnum] = useState(0);\r\n\r\n    const loadComment = useCallback( async () => {\r\n        const idx = post.idx;\r\n        if (post.name === \"QNA\") {\r\n            Axios.post('http://localhost:8000/board/getqna_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism.highlightAll();\r\n            })\r\n            Axios.post('http://localhost:8000/board/getqna_total', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                 setCommentnum(response.data[0].Total);\r\n            })\r\n        } else if (post.name === \"TALK\") {\r\n            Axios.post('http://localhost:8000/board/gettalk_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism.highlightAll();\r\n            })\r\n            Axios.post('http://localhost:8000/board/gettalk_total', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                 setCommentnum(response.data[0].Total);\r\n            })\r\n        }\r\n    }, [post.idx, post.name]);\r\n\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n        if (props.location.state !== undefined) {\r\n            localStorage.setItem(\"prev\", JSON.stringify(props.location.state));\r\n        }\r\n        loadComment();\r\n    }, [loadComment, props.location.state])\r\n\r\n\r\n    const delBtn = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const idx = e.target.getAttribute('post-idx');\r\n            if (post.name === \"QNA\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna', {\r\n                    idx: idx\r\n                }).then(() => {\r\n                    props.history.push(\"/qna\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            } else if (post.name === \"TALK\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk', {\r\n                    idx: idx\r\n                }).then(() => {\r\n                    props.history.push(\"/talk\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const delBtn_c = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const idx = e.target.getAttribute('comment-idx');\r\n            setCommentnum(post.commentN-1);\r\n            if (post.name === \"QNA\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna_c', {\r\n                    idx: idx                   \r\n                }).then(() => { alert(\"삭제 되었습니다!\"); })\r\n                Axios.post('http://localhost:8000/board/deleteqna_cN', {\r\n                   idx: post.idx,\r\n                    commentN: (post.commentN)\r\n               }).then((response) => { loadComment(); })\r\n\r\n            } else if (post.name === \"TALK\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk_c', {\r\n                    idx: idx                   \r\n                }).then(() => { alert(\"삭제 되었습니다!\"); })\r\n                Axios.post('http://localhost:8000/board/deletetalk_cN', {\r\n                   idx: post.idx,\r\n                    commentN: (post.commentN)\r\n               }).then((response) => { loadComment(); })\r\n            }\r\n        }\r\n    }\r\n\r\n    const modBtn_c = (e) => {\r\n       setMode(true);\r\n        setMod(e.target.getAttribute('comment-contents'));\r\n        setModIdx(e.target.getAttribute('comment-idx'));\r\n    }\r\n\r\n    const updateBtn_c = (e) => {\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            const idx = modIdx;\r\n            if (post.name === \"QNA\") {\r\n                Axios.post('http://localhost:8000/board/updateqna_c', {\r\n                    idx: idx,\r\n                    contents: mod\r\n                }).then(() => {\r\n                    alert(\"수정 되었습니다!\");\r\n                })\r\n            } else if (post.name === \"TALK\") {\r\n                Axios.post('http://localhost:8000/board/updatetalk_c', {\r\n                    idx: idx,\r\n                    contents: mod\r\n                }).then(() => {\r\n                    alert(\"수정 되었습니다!\");\r\n                })\r\n            }\r\n        }\r\n        setMod('');\r\n        setMode(false);\r\n        loadComment();\r\n    }\r\n\r\n    const handleCkeditorState = (event, editor) => {\r\n        const data = editor.getData();\r\n        setMod(data);\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n       setCommentnum(post.commentN+1);\r\n        if (post.name === \"QNA\") {\r\n            Axios.post('http://localhost:8000/board/postqna', {\r\n                bid: post.idx,\r\n                writer: \"writer\",\r\n                contents:mod,\r\n                img: null,\r\n                good: 8,\r\n                commentN: (post.commentN)\r\n            }).then(() => {\r\n                alert(\"작성 되었습니다.\");\r\n                loadComment();\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n        } else {\r\n            Axios.post('http://localhost:8000/board/posttalk', {\r\n                bid: post.idx,\r\n                writer: \"writer\",\r\n                contents:mod,\r\n                img: null,\r\n                good: 8,\r\n                commentN: (post.commentN)\r\n            }).then(() => {\r\n                alert(\"작성 되었습니다.\");\r\n                loadComment();\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n        }\r\n        setMod('');\r\n        loadComment();\r\n    }\r\n\r\n    const onptbHandler = (event) => {\r\n        if (post.name === \"TALK\")\r\n            props.history.push(\"/talk\")\r\n        else\r\n            props.history.push(\"/qna\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className='form-wrapper'>\r\n                <div className=\"question-header\">\r\n                    <p className=\"bolder\">{post.title}</p>\r\n                </div>\r\n                <div className=\"grid\">\r\n                    <div>\r\n                        <span>Asked</span>\r\n                        <time>{post.rdate}</time>\r\n                    </div>\r\n                    <div>\r\n                        <span>Viewed</span>\r\n                        {post.hit} times\r\n                    </div>\r\n                    <div className=\"writer\">\r\n                        <Link\r\n                        to={{\r\n                           pathname : `/${props.match.params.name}/modify/${post.idx}`,\r\n                           state: {\r\n                                key : post.idx,\r\n                                idx : post.idx,\r\n                                title : post.title,\r\n                                contents : post.contents,\r\n                                tag : post.tag,\r\n                                category : post.category,\r\n                                name : post.name\r\n                            }\r\n                        }}>\r\n                        <button className=\"modifyBtn\"> 수정 </button></Link>\r\n                        <button className=\"deleteBtn\" onClick={delBtn} post-idx={post.idx}> 삭제 </button>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                <hr />\r\n                <div className=\"question-body\">\r\n                    <div className=\"selctContents\" dangerouslySetInnerHTML={ {__html: post.contents} }></div>\r\n                    <div className=\"user-info\">\r\n                        asked <span>{post.rdate}</span>\r\n                        <span>{post.writer}</span>\r\n                    </div>               \r\n                </div>\r\n                <br/>\r\n                <hr/>\r\n\r\n                <p className=\"bold\">{commentnum}개의 답변</p>\r\n                {comment.map(element =>(\r\n                    <div className=\"question-answer\">\r\n                        <div className=\"selctContents\" dangerouslySetInnerHTML={ {__html: element.contents}}></div>                    \r\n                        <div className=\"user-info\">   \r\n                            <button className=\"modifyBtn\" onClick={modBtn_c} comment-contents={element.contents} comment-idx={element.idx}> 수정 </button>\r\n                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>\r\n                            answered <span>{element.cdate}</span>\r\n                            <span>{element.writer}</span>\r\n                        </div>   \r\n                    </div>\r\n                ))}\r\n\r\n                <p className=\"bold\">댓글작성</p>\r\n                <CKEditor\r\n                    editor={ Editor }\r\n                    config={ editorConfiguration }\r\n                    data= {mod}\r\n                    onChange={ handleCkeditorState }\r\n                />\r\n                { mode? <button className=\"modify-button\" onClick={updateBtn_c}>수정</button> : <button className=\"submit-button\" onClick={onSubmitHandler}>작성</button> }\r\n                <button className=\"toboard\" onClick={onptbHandler}>목록으로</button> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Writing.js",[],"C:\\Users\\Goeun\\Desktop\\goeun\\BeginnerGain\\client\\src\\components\\Board.js",["90"],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":9,"column":9,"nodeType":"97","messageId":"98","endLine":9,"endColumn":11},{"ruleId":"95","severity":1,"message":"99","line":13,"column":8,"nodeType":"97","messageId":"98","endLine":13,"endColumn":19},{"ruleId":"95","severity":1,"message":"100","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"101","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"100","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":26},{"ruleId":"95","severity":1,"message":"101","line":1,"column":28,"nodeType":"97","messageId":"98","endLine":1,"endColumn":36},{"ruleId":"95","severity":1,"message":"102","line":34,"column":18,"nodeType":"97","messageId":"98","endLine":34,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":72,"column":5,"nodeType":"105","endLine":72,"endColumn":18,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'PW' is assigned a value but never used.","Identifier","unusedVar","'onPWHandler' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'setPost' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadList', 'loadSearch', 'name', and 'props.location'. Either include them or remove the dependency array.","ArrayExpression",["109"],"no-global-assign","no-unsafe-negation",{"desc":"110","fix":"111"},"Update the dependencies array to be: [loadList, loadSearch, name, props.location, searchValue]",{"range":"112","text":"113"},[2478,2491],"[loadList, loadSearch, name, props.location, searchValue]"]