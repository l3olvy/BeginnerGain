[{"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\index.js":"1","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\App.js":"2","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Footer.js":"3","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Header.js":"4","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Body.js":"5","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Navigation.js":"6","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Post.js":"7","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Board.js":"8","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Writing.js":"9","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\NotFound.js":"10","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\SignUp.js":"11","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Login.js":"12","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\News.js":"13","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Home.js":"14","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\IdPw.js":"15","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Qna.js":"16","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Talk.js":"17","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Compile.js":"18","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PublicRoute.js":"19","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Chat.js":"20","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrivateRoute.js":"21","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrismImport.js":"22","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\TagBox.js":"23","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\AceImport.js":"24"},{"size":236,"mtime":1611237644637,"results":"25","hashOfConfig":"26"},{"size":516,"mtime":1611666897608,"results":"27","hashOfConfig":"26"},{"size":226,"mtime":1611237644445,"results":"28","hashOfConfig":"26"},{"size":1363,"mtime":1616595755565,"results":"29","hashOfConfig":"26"},{"size":2505,"mtime":1616595755560,"results":"30","hashOfConfig":"26"},{"size":525,"mtime":1616931689732,"results":"31","hashOfConfig":"26"},{"size":11565,"mtime":1617170879347,"results":"32","hashOfConfig":"26"},{"size":9708,"mtime":1616931689727,"results":"33","hashOfConfig":"26"},{"size":6329,"mtime":1617171944953,"results":"34","hashOfConfig":"26"},{"size":531,"mtime":1616931689737,"results":"35","hashOfConfig":"26"},{"size":2798,"mtime":1616959623482,"results":"36","hashOfConfig":"26"},{"size":2568,"mtime":1616959353779,"results":"37","hashOfConfig":"26"},{"size":13978,"mtime":1705666084797,"results":"38","hashOfConfig":"26"},{"size":5208,"mtime":1616931689783,"results":"39","hashOfConfig":"26"},{"size":3825,"mtime":1616959623463,"results":"40","hashOfConfig":"26"},{"size":273,"mtime":1612008514270,"results":"41","hashOfConfig":"26"},{"size":256,"mtime":1612008528051,"results":"42","hashOfConfig":"26"},{"size":10108,"mtime":1617169282696,"results":"43","hashOfConfig":"26"},{"size":450,"mtime":1616595755582,"results":"44","hashOfConfig":"26"},{"size":15705,"mtime":1616969405503,"results":"45","hashOfConfig":"26"},{"size":583,"mtime":1616333441948,"results":"46","hashOfConfig":"26"},{"size":982,"mtime":1611749161876,"results":"47","hashOfConfig":"26"},{"size":3076,"mtime":1616670432692,"results":"48","hashOfConfig":"26"},{"size":1292,"mtime":1615038503929,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"lwprbq",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"52"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\index.js",[],["112","113"],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\App.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Footer.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Header.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Body.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Navigation.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Post.js",["114","115","116","117","118"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport '../css/Post.css';\r\nimport Axios from 'axios';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { Link } from \"react-router-dom\";\r\nimport Prism from \"../lib/PrismImport\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nconst editorConfiguration = {\r\n    simpleUpload: { uploadUrl: '/upload'},\r\n    toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Post(props) {\r\n    const [post, setPost] = useState([]);\r\n    const name = props.match.params.name;\r\n    const [user, setUser] = useState();\r\n    const [idx, setIdx] = useState(props.match.params.idx);\r\n    const [mod, setMod] = useState('');\r\n    const [modIdx, setModIdx] = useState('');\r\n    const [mode, setMode] = useState(false);\r\n    const [comment, setComment] = useState([]);\r\n    const [commentnum, setCommentnum] = useState(0);\r\n    const [postcommentN, setpostCommentN] = useState(0);\r\n    const [tags, setTags] = useState([]);\r\n\r\n    const mounted = useRef(false);\r\n\r\n    const loadComment = useCallback( async () => {\r\n        Axios.post('/board/get_total', {\r\n            idx: idx,\r\n            name : name\r\n        }).then((response) => {\r\n            setCommentnum(response.data[0].Total);\r\n        })\r\n\r\n        Axios.post('/board/get_c', {\r\n            idx: idx,\r\n            name : name\r\n        }).then((response) => {\r\n            setComment(response.data);\r\n            Prism();\r\n        })\r\n    }, []);\r\n\r\n    const getUser = async (e) => {\r\n        await Axios.get(\"/member/session\").then((res) => {\r\n            if(res.data !== \"fail\") setUser(res.data.id);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!mounted.currnet) {\r\n            mounted.currnet = true;\r\n        } else {\r\n            getUser();\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        Prism();\r\n        if(name === 'qna' && post.tag)\r\n            setTags(post.tag.split(' '));\r\n        else if(name === 'talk' && post.category)\r\n            setTags(post.category.split(' '));\r\n\r\n        setpostCommentN(post.commentN);\r\n        loadComment();\r\n    }, [loadComment, post.commentN, post]);\r\n\r\n    useEffect(() => {\r\n        hitUpdate();\r\n        setIdx(props.match.params.idx);   \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(isNaN(idx) === false && (name === 'qna' || name === 'talk')){\r\n            Axios.post('/board/getPost', {\r\n                idx: idx,\r\n                name : name\r\n            }).then((res) => {\r\n                if(res.data.length !== 0)\r\n                    setPost(res.data[0]);   \r\n                else\r\n                    props.history.push(\"/notfound\"); \r\n            });\r\n        }\r\n        else\r\n            props.history.push(\"/notfound\");   \r\n    }, []);\r\n\r\n    const delBtn_c = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('comment-idx');\r\n\r\n            Axios.post('/board/delete_c', { idx: didx, name : name });\r\n\r\n            Axios.post('/board/delete_cN', {\r\n                idx: idx,\r\n                name : name,\r\n                commentN: (postcommentN-1)\r\n            }).then((response) => { loadComment(); })\r\n\r\n            alert(\"삭제 되었습니다!\");            \r\n            setpostCommentN(postcommentN-1);\r\n        }\r\n    }\r\n\r\n    const modBtn_c = (e) => {\r\n        setMode(true);\r\n        setMod(e.target.getAttribute('comment-contents'));\r\n        setModIdx(e.target.getAttribute('comment-idx'));\r\n    }\r\n\r\n    const updateBtn_c = (e) => {\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            const midx = modIdx;\r\n            \r\n            Axios.post('/board/update_c', {\r\n                idx: midx,\r\n                contents: mod,\r\n                name : name\r\n            }).then(() => { loadComment(); })\r\n\r\n            alert(\"수정 되었습니다!\");\r\n        }\r\n        setMod('');\r\n        setMode(false);\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        if(mod.length !== 0) {\r\n            setCommentnum(post.commentN+1);\r\n            \r\n            Axios.post('/board/postqna', {\r\n                bid: idx,\r\n                writer: user,\r\n                name : name,\r\n                contents:mod,\r\n                commentN: (postcommentN+1)\r\n            }).then(() => {\r\n                loadComment();\r\n            })\r\n            .catch((error) => { console.log(error) });\r\n\r\n            alert(\"작성 되었습니다.\");\r\n            setpostCommentN(postcommentN+1);\r\n            setMod('');\r\n            loadComment();     \r\n        }else{\r\n            alert(\"댓글을 입력해주세요.\");\r\n        }\r\n    }\r\n    \r\n    const onptbHandler = (event) => {\r\n        if (name === \"talk\")\r\n            props.history.push(\"/talk\")\r\n        else\r\n            props.history.push(\"/qna\")\r\n    }\r\n\r\n    const handleCkeditorState = (event, editor) => {\r\n        const data = editor.getData();\r\n        setMod(data);\r\n    }\r\n\r\n    const hitUpdate = () => {\r\n        Axios.post('/board/getHit',{\r\n           idx: idx,\r\n           name: name\r\n       }).then((response) => {})\r\n    }\r\n\r\n    const delBtn = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('post-idx');\r\n\r\n            Axios.post('/board/deletepost', {\r\n                idx: didx,\r\n                name : name\r\n            }).then(() => {\r\n                if(name === \"qna\") props.history.push(\"/qna\");\r\n                else props.history.push(\"/talk\");\r\n                alert(\"삭제 되었습니다!\");\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            {\r\n            // data setup 됐을 때 자연스럽게 불러주려고 이렇게 했음 css 수정 필요할 듯\r\n            !Array.isArray(post) && \r\n            <div className=\"post_container\">\r\n                <div className=\"post_header\">\r\n                    <div className=\"bolder\">{post.title}</div>\r\n                    \r\n                    <div className=\"grid\">\r\n                        <div className=\"left\">\r\n                            {post.writer} &nbsp;|&nbsp; <time>{post.rdate}</time> &nbsp;|&nbsp; {post.hit} Views\r\n                        </div>\r\n                    \r\n                        { // tag 불러와서 저장해서 넘기세요 writing으로 수정해야하니까\r\n                        (props.id === post.writer) && //로그인 한 사람이 글 작성자라면 글 삭제 및 수정 가능\r\n                        <div className=\"right\">\r\n                            <Link\r\n                            to={{\r\n                               pathname : `/${props.match.params.name}/modify/${post.idx}`,\r\n                               state: {\r\n                                    key : post.idx,\r\n                                    idx : post.idx,\r\n                                    title : post.title,\r\n                                    contents : post.contents,\r\n                                    tag : tags,\r\n                                    name : name\r\n                                }\r\n                            }}>\r\n                            <button className=\"modifyBtn\">수정</button></Link> /\r\n                            <button className=\"deleteBtn\" onClick={delBtn} post-idx={post.idx}>삭제</button>\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n        \r\n                <div className=\"post_body\">\r\n                    <div className=\"post_contents\" dangerouslySetInnerHTML={ {__html: post.contents} }></div>\r\n                    <div className=\"post_tags\">\r\n                        <span className=\"bold\">태그 :</span>\r\n                        {tags && (\r\n                            <span>\r\n                                {(tags[0] !== 'undefined') && \r\n                                <Link to={`/${name}/search/tag/${tags[0]}`}>{tags[0]}</Link>}\r\n                                {(tags[1] !== 'undefined') && \r\n                                <Link to={`/${name}/search/tag/${tags[1]}`}>{tags[1]}</Link>}\r\n                                {(tags[2] !== 'undefined') && \r\n                                <Link to={`/${name}/search/tag/${tags[2]}`}>{tags[2]}</Link>}\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"post_comments\">\r\n                        <p className=\"bold\">{commentnum}개의 답변</p>\r\n                        {\r\n                            comment.map(element =>(\r\n                                <div className=\"answer\" key={element.idx}>\r\n                                    <div className=\"comments_info\"> \r\n                                         <span className=\"comment_writer\">{element.writer}</span><span className=\"comment_date\"> &nbsp;|&nbsp; {element.cdate}</span>\r\n                                        {(props.id === post.writer)&&(props.id !== element.writer) && //로그인 한 사람이 글 작성자라면 댓글 삭제만 가능\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>}\r\n                                        {(props.id === element.writer) && //로그인 한 사람이 댓글 작성자라면 댓글 삭제 및 수정 가능\r\n                                        <div className=\"right\">\r\n                                            <button className=\"modifyBtn\" onClick={modBtn_c} comment-contents={element.contents} comment-idx={element.idx}> 수정 </button> /\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>\r\n                                        </div>}\r\n\r\n                                    </div>  \r\n                                    <div dangerouslySetInnerHTML={{__html: element.contents}}></div>                    \r\n                                     \r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                        <p className=\"bold\">댓글작성</p>\r\n                        <div className=\"post_input\">\r\n                            { props.id ?\r\n                                <CKEditor\r\n                                editor={ Editor }\r\n                                config={ editorConfiguration }\r\n                                data= {mod}\r\n                                onChange={ handleCkeditorState }\r\n                                /> : \r\n                                <CKEditor\r\n                                editor={ Editor }\r\n                                config={ editorConfiguration }\r\n                                data= {\"로그인 후 이용해주세요\"}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <button className=\"toboard\" onClick={onptbHandler}>목록으로</button>\r\n                        { mode? <button className=\"modify-button\" onClick={updateBtn_c}>수정</button> : props.id &&<button className=\"submit-button\" onClick={onSubmitHandler}>작성</button> }\r\n\r\n                    </div>             \r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Board.js",["119","120","121","122","123","124"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Board.css\";\r\nimport striptags from 'striptags';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nfunction Board(props) {\r\n\t// 페이징\r\n\tconst [viewContent, setViewContent] = useState([]);\r\n\tconst [curPage, setcurPage] = useState(0);\r\n\tconst [lastPage, setlastPage] = useState(0);\r\n\tconst [minbtn, setMinBtn] = useState(0);\r\n\tconst [maxbtn, setMaxBtn] = useState(0);\r\n\tlet array = [];\r\n\r\n\tconst [generalSearch, setGeneralSearch] = useState('');\r\n\tconst [searchValue, setSearchValue] = useState([]);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [searchtotal, setSearchTotal] = useState(0);\r\n\tconst onGeneralSearchHandler = (event) => {setGeneralSearch(event.currentTarget.value);}\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [tags, setTags] = useState([]);\r\n\tlet tagarray = [];\r\n\r\n\tconst [tag, setTag] = useState([]);\r\n\tconst [selSearch, setSelSearch] = useState('basic');\r\n\r\n\tlet name = '';\r\n\tif(props.location !== undefined){\r\n\t\tname = props.match.path.split(\"/\").[1];\r\n\t}else{\r\n\t\tname = props.match.split(\"/\").[1];\r\n\t}\r\n\r\n    let search = \"태그\";\r\n    if (name === \"talk\") search = \"카테고리\";\r\n\r\n    const loadList = async () => {\r\n    \tlet url = \"/board/getBoard/1/qna\";\r\n    \tif(name === \"talk\") url = '/board/getBoard/1/talk';\r\n    \tawait Axios.get(url).then((res)=>{\r\n\t\t\tsetViewContent(res.data.model.boardList);\r\n\t\t\tsetcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setTotal(res.data.model.total);\r\n\t\t})\r\n    }\r\n\r\n    const loadSearch = async () => {\r\n    \tif (props.location !== undefined){\r\n\t        let value = props.match.params.q;\r\n\t        let kind = props.match.params.kind;\r\n\t\t\tif (name === \"qna\") {\r\n\t\t\t\tAxios.post('/board/searchqna', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0){\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\r\n\r\n\t\t\t} else {\r\n\t\t\t\tAxios.post('/board/searchtalk', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0)\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\t   \r\n  \r\n\r\n    const onClick = async (e) => {\r\n    \tconst idxs = e.target.dataset.idx;\r\n    \tlet url = \"/board/getBoard/\"+idxs+\"/qna\";\r\n    \tif(name === \"talk\") url = \"/board/getBoard/\"+idxs+\"/talk\";\r\n    \t\r\n        await Axios.get(url).then((res) => {\r\n            setcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setViewContent(res.data.model.boardList);\r\n            setTotal(res.data.model.total);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n    \tloadList();\r\n    \tloadSearch();\r\n\t\treturn () => setLoading(false);\r\n\t}, [searchValue])\r\n    \r\n    const searchBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(generalSearch.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/general/${generalSearch}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/general/${generalSearch}`);\r\n\t}\r\n\r\n    const searchTagsBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(tag.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/tags/${tag}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/tags/${tag}`);\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n\tconst handledSearchType = async (e) => { setSelSearch(e.target.value);}\r\n\r\n    return (   \t\r\n        <div className=\"menu__container\">\r\n        \t<div className=\"board_background\" style={\r\n        \t\tname === \"qna\" ? \r\n        \t\t{ backgroundImage: 'url(\"/img/qna.png\")' } :\r\n        \t\t{ backgroundImage: 'url(\"/img/talk.png\")' }\r\n        \t}>\r\n        \t\t<div className=\"board_intro\">\r\n        \t\t\t{name === \"qna\" ?\r\n        \t\t\t<div className=\"intro_sent\">\r\n\t\t        \t\t<h2>개발 중 발생하는 궁금한 점을 물어보세요.</h2>\r\n\t\t        \t\t<p>다양한 오류에 관한 질문과 해당 카테고리만 분류해서 볼 수 있는 태그 검색까지!</p>\r\n\t\t        \t\t</div>\r\n\t\t        \t\t:<div className=\"intro_sent\"><h2>개발에 대한 이야기를 자유롭게 나눠보세요.</h2>\r\n\t\t        \t\t<p>관심 있는 직군부터 타직군에 관한 이야기를 들려주세요!</p></div>\r\n\t\t        \t}\r\n\t        \t\t<ul className=\"board_list\">\r\n\t\t        \t\t<li>\r\n\t\t\t        \t\t<select name=\"searchType\" onChange={handledSearchType}>\r\n\t\t\t        \t\t\t<option value='basic'>제목+내용</option>\r\n\t\t\t        \t\t\t<option value='tag'>태그</option>\r\n\t\t\t        \t\t</select>\r\n\t\t        \t\t</li>\r\n\t        \t\t\t\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t{selSearch === 'basic' ? \r\n\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"검색어를 입력하세요\" onChange={onGeneralSearchHandler}/>\r\n\t\t\t\t\t\t\t\t:<div><TagBox change={setOnTag}></TagBox></div>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</li>\r\n\t\t        \t\t<li>\r\n\t\t        \t\t\t{selSearch === 'basic' ? \r\n\t\t\t\t\t\t\t\t<button type=\"submit\" onClick={searchBtn}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t\t\t\t</button>:\r\n\t\t\t\t\t\t\t\t<button type=\"submit\" onClick={searchTagsBtn}>\r\n\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t</li>\r\n\t        \t\t</ul>\r\n\t        \t\t{\r\n\t        \t\t\tselSearch === \"tag\" && <span>태그는 세개까지 입력 가능하며, 스페이스바를 통해 구분 가능합니다.</span>\r\n\t        \t\t}\r\n\t        \t</div>\r\n        \t</div>\r\n\t\t\t<div className=\"board_top\">\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t<h2>{name.toUpperCase()}</h2>\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t{((viewContent.length !== 0)&&(searchValue.length === 0)) ? \r\n\t\t\t\t\t((props.location !== undefined) ? <p>총 게시물 0개 </p> : <p>총 게시물 {total}개</p>)\r\n\t\t\t\t: <p>총 게시물 {searchtotal}개</p>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>        \t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\t\t\t<div className=\"board_contents\">\r\n\t\t\t{(props.location !== undefined) ?\r\n\t\t\t\t((searchValue.length === 0) ? <div className=\"list\"><p><strong>\"{props.match.params.q}\"</strong>와(과) 일치하는 검색 결과가 없습니다</p></div> \r\n\t\t\t\t: List(searchValue, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t:\r\n\t\t\t\t((viewContent.length === 0) ? <div className=\"list\"><p>등록된 게시물이 없습니다</p></div>\r\n\t\t\t\t: List(viewContent, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<Link to={`/${name}/writing`}>\r\n\t\t\t\t<button className=\"writeBtn\">글쓰기</button>\r\n\t\t\t</Link>\r\n\r\n\t\t\t{/* 페이징 */}\r\n\t\t\t<div className=\"paging\">\r\n\t\t\t\t{ (curPage !== 1) && (<button className=\"pre\" type=\"button\" onClick={onClick} data-idx={curPage-1}>이전</button>) }\r\n\t\t\t\t{\r\n\t\t\t\t\t(() => {\r\n\t\t\t\t\t\tfor(let i = minbtn; i < maxbtn; i++) {\r\n\t\t\t\t\t\t\tif(curPage === i) array.push(<button type=\"button\" className=\"checkBtn\" key={i} onClick={onClick} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\telse array.push(<button type=\"button\" onClick={onClick} key={i} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\tif(i >= lastPage) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (array);\r\n\t\t\t\t\t})()\r\n\t\t\t\t}\r\n\t\t\t\t{ (curPage < lastPage) && (<button type=\"button\" onClick={onClick} data-idx={curPage+1}>다음</button>) }\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nfunction List(mapper, total, searchtotal, name, curPage, viewContent, searchValue){\r\n\treturn(\r\n\t\tmapper.map((element,i) =>(\r\n\t\t\t<div className=\"list\" key={element.idx}>\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t{(viewContent.length !== 0)&&(searchValue.length === 0) ? <h3>Q.{total - i - ((curPage-1)*5)}</h3> : <h3>Q.{searchtotal - i - ((curPage-1)*5)}</h3>}\r\n\r\n\t\t\t\t\t<p>답변 - {element.commentN}개</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: `/${name}/post/${element.idx}`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>{element.title}</h3>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{element.contents.length > 69 ?\r\n\t\t\t\t\t<p>{striptags(element.contents).substring(0,69)+'...'}</p>\r\n\t\t\t\t\t:<p>{striptags(element.contents)}</p>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"tags left\">\r\n\t\t\t\t\t\t\t{element.category && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.category1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category1}`}>{element.category1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category2}`}>{element.category2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category3}`}>{element.category3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{element.tag && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.tag1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag1}`}>{element.tag1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag2}`}>{element.tag2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag3}`}>{element.tag3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"info right\">\r\n\t\t\t\t\t\t\t<span>작성자 : {element.writer} · 날짜 : {element.rdate.substring(0,10).replace(/-/g, '.')} · 조회수 : {element.hit}</span>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t))\r\n\t);\r\n}\r\n\r\nexport default Board;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Writing.js",["125"],"import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport '../css/Components.css';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nconst editorConfiguration = {\r\n   simpleUpload: {uploadUrl: '/upload'},\r\n   toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Writing(props) {\r\n\tconst [post, setPost] = useState(props.location.state ? props.location.state : JSON.parse(localStorage.getItem('prev')));\r\n\tconst [title,setTitle] = useState('');\r\n\tconst [contents,setContent] = useState('');\r\n\tconst [tag, setTag] = useState([]);\r\n\tconst onTitleHandler = (event) => {setTitle (event.currentTarget.value);}\r\n\tconst [user, setUser] = useState();\r\n\tconst mounted = useRef(false);\r\n\r\n\tconst getUser = async (e) => {\r\n\t\tawait Axios.get(\"/member/session\").then((res) => {\r\n\t\t\tif(res.data !== \"fail\") setUser(res.data.id);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUser();\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!mounted.currnet) {\r\n\t\t\tmounted.currnet = true;\r\n\t\t} else {\r\n\t\t\tgetUser();\r\n\t\t}\r\n\t}, [user]);\r\n\r\n\tconst loadPrevData = useCallback((e) => {\r\n\t\tsetTitle(post.title);\r\n\t\tsetContent(post.contents);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (props.location.state !== undefined) {\r\n\t\t\tlocalStorage.setItem(\"prev\", JSON.stringify(props.location.state));\r\n\t\t}\r\n\t\tif (props.match.params.idx !== undefined) {\r\n\t\t\tloadPrevData();\r\n\t\t} else {\r\n\t\t\treset();\r\n\t\t}\r\n\t}, [loadPrevData, props.location.state, props.match.params.idx])\r\n\r\n\tconst reset = (e) => {\r\n\t\tsetPost('');\r\n\t\tsetTitle('');\r\n\t\tsetTag('');\r\n\t}\r\n\r\n\tconst updateBtn = (e) => {\r\n\t\tif (window.confirm(\"수정하시겠습니까?\")) {\r\n\t\t\tconst idx = e.target.getAttribute('comment-idx');\r\n\r\n\t\t\tif (post.name === \"qna\") {\r\n\t\t\t\tAxios.post('/board/updateqna', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('/board/update_tag', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (post.name === \"talk\") {\r\n\t\t\t\tAxios.post('/board/updatetalk', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('/board/update_category', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCkeditorState = (event, editor) => {\r\n\t\tconst data = editor.getData();\r\n\t\tsetContent(data);\r\n\t}\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tif(title.length === 0)\r\n\t\t\talert(\"제목을 입력해주세요.\");\r\n\t\telse if(contents.length === 0)\r\n\t\t\talert(\"내용을 입력해주세요.\");\r\n\t\telse if(tag.length === 0)\r\n\t\t\talert(\"태그를 한 개 이상 입력해주세요.\");\r\n\t\telse{\r\n\t\t\tif (props.match.params.name === \"qna\") {\r\n\t\t\t\tAxios.post('/board/writing_qna', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('/board/writing_tag', {\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (props.match.params.name === \"talk\") {\r\n\t\t\t\tAxios.post('/board/writing_talk', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\tcategory: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('/board/writing_category', {\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\r\n\tconst wtobBtnHandler = (event) => {\r\n\t\tprops.history.push(`/${props.match.params.name}`)\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"Writing\">\r\n\t\t\t<p className=\"bolder\">Ask a public question</p>\r\n\t\t\t<div className='form-wrapper'>\r\n\t\t\t\t<p className=\"bold\">제목</p>\r\n\t\t\t\t<input className=\"title-input\" type='text' onChange={onTitleHandler} name='title' value={title}/>\r\n\t\t\t\t<p className=\"bold\">내용</p>                \r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ Editor }\r\n\t\t\t\t\tconfig={ editorConfiguration }\r\n\t\t\t\t\tdata= {contents}\r\n\t                onChange={ handleCkeditorState }    \r\n\t                name = 'contents'          \r\n\t\t        /> \r\n\t\t        <p className=\"bold\">태그</p>\r\n\t\t        {props.location.state ?\r\n\t\t        <TagBox change={setOnTag} ex_tags={post.tag} name={props.match.params.name}/>\r\n\t\t        :\r\n\t\t        <TagBox change={setOnTag} name={props.match.params.name}/>\r\n\t\t    \t}\r\n\t            {/*<input className=\"tag-input\" type='text' onChange={onTagHandler} name = 'tag' value={tag} placeholder=\"태그는 3개 제한 입니다.\"/>*/}\r\n\t        </div>\r\n\t            {(post) ? <button className=\"modify-button\" onClick={updateBtn} comment-idx={post.idx}>수정</button> : <button className=\"submit-button\" onClick={onSubmitHandler} >작성</button>}\r\n        \t\t<button className=\"toboard\" onClick={wtobBtnHandler} >목록으로</button>\r\n        </div>\r\n   );\r\n}\r\n\r\nexport default React.memo(Writing);","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\NotFound.js",["126"],"import React from \"react\";\r\nimport '../css/Components.css';\r\n\r\nfunction NotFound() {\r\n    return (\r\n    \t<div className=\"notfound\">\r\n    \t\t<img src=\"/img/code-error.png\"/>\r\n    \t\t<h2>요청하신 페이지를 찾을 수 없습니다.</h2>\r\n    \t\t<p>존재하지 않는 주소를 입력하셨거나, <br/>요청하신 페이지의 주소가 변경, 삭제되어 찾을 수 없습니다. <br/>입력하신 주소가 정확한지 다시 한 번 확인해 주시기 바랍니다.</p>\r\n    \t</div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\SignUp.js",["127","128"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction SignUp(props) {\r\n\tconst [Name,setName] = useState(\"\");\r\n\tconst [Email,setEmail] = useState(\"\");\r\n\tconst [Id,setID] = useState(\"\");\r\n\tconst [Pw,setPW] = useState(\"\");\r\n\tconst [check, setCheck] = useState(false);\r\n\tconst onNameHandler = (event) => {setName (event.currentTarget.value)}\r\n\tconst onEmailHandler = (event) => {setEmail (event.currentTarget.value)}\r\n\tconst onIDHandler = (event) => {setID (event.currentTarget.value)}\r\n\tconst onPWHandler = (event) => {setPW (event.currentTarget.value)}\r\n\tconst [checkMsg, setCheckMsg] = useState(\"\");\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif(check === false) {\r\n\t\t\talert(\"아이디 중복 체크를 해주세요!\");\r\n\t\t} else {\r\n\t\t\tAxios.post('/member/join',\r\n\t\t\t{\r\n\t\t\t\tid: Id,\r\n\t\t\t\tpw: Pw,\r\n\t\t\t\temail : Email,\r\n\t\t\t\tname : Name\r\n\t\t\t}).then((res) => {\r\n\t\t\t\talert(\"가입 되었습니다.\");\r\n\t\t\t\tprops.history.push(\"/login\");\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkId = (event) => {\r\n\t\tif(Id == \"\") alert(\"아이디를 입력하세요\");\r\n\t\telse {\r\n\t\t\tAxios.post('/member/idCheck',\r\n\t\t\t{\r\n\t\t\t\tid : Id\r\n\t\t\t}).then((res) => {\r\n\t\t\t\tif(res.data === \"exist\") {\r\n\t\t\t\t\tsetCheckMsg(\"이미 존재하는 아이디 입니다. 다른 아이디를 입력해주세요.\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetCheckMsg(\"사용 가능한 아이디 입니다.\");\r\n\t\t\t\t\tsetCheck(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"joinBox\">\r\n\t\t\t\t<form method=\"post\" onSubmit={onSubmitHandler} autocomplete=\"off\">\r\n\t\t\t\t\t<h3>회원가입</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} id=\"name\" onChange={onNameHandler} name='name' required />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email' required />\r\n\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><input className=\"ID-input\" type='text' placeholder='아이디' value={Id} onChange={onIDHandler} name='id' required /></li>\r\n\t\t\t\t\t\t<li><button type=\"button\" id=\"check\" onClick={checkId}>중복체크</button></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<span>{ (checkMsg !== \"\") && (checkMsg) }</span>\r\n\r\n\t\t\t\t\t<label>비밀번호</label>\r\n\t\t\t\t\t<input className=\"PW-input\" type='password' placeholder='비밀번호' value={Pw} onChange={onPWHandler} name='pw' required />\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<button className=\"joinBtn\" type=\"submit\">등록</button>\r\n\t\t\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t\t\t<button className=\"joinBtn\"> 로그인</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Login.js",["129","130","131"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\nfunction Login(props) {\r\n\tconst [id,setID] = useState(\"\");\r\n\tconst [pw,setPW] = useState(\"\");\r\n\r\n\tconst [loginCheck, setLogin] = useState(false);\r\n\t\r\n\tconst mounted = useRef(false);\r\n\r\n\tconst getCheck = async (e) => {\r\n\t\tif((window.location.href).split(\"=\").[1] === \"fail\") setLogin(true);\r\n\t}\r\n\r\n\tconst getUser = async (e) => {\r\n\t\tawait Axios.get(\"/member/session\").then((res) => {\r\n\t\t\tif(res.data !== \"fail\") setID(res.data.id);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCheck();\t\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUser();\r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!mounted.currnet) {\r\n\t\t\tmounted.currnet = true;\r\n\t\t} else {\r\n\t\t\tif(loginCheck) { \r\n\t\t\t\talert(\"아이디 또는 비밀번호가 일치하지 않습니다.\"); \r\n\t\t\t\tsetLogin(false);\r\n\t\t\t\tprops.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t}, [loginCheck]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!mounted.currnet) {\r\n\t\t\tmounted.currnet = true;\r\n\t\t} else {\r\n\t\t\tgetUser();\r\n\t\t}\r\n\t}, [id]);\r\n\r\n\r\n\t// const onSubmitHandler = (event) => {\r\n\r\n\t// \tevent.preventDefault();\r\n\r\n\t// \tAxios.post('/member/login', {\r\n\t// \t\tid: id,\r\n\t// \t\tpw: pw\r\n\t// \t}).then((response) => {\r\n\t// \t\tif(response.data === \"fail\") {\r\n\t// \t\t\talert(\"비밀번호가 일치하지 않습니다.\");\r\n\t// \t\t\tprops.history.push(\"/login\");\r\n\t// \t\t\tsetID(\"\");\r\n\t// \t\t\tsetPW(\"\");\r\n\t// \t\t} else if(response.data === \"undefined\") {\r\n\t// \t\t\talert(\"존재하지 않는 유저 입니다.\");\r\n\t// \t\t\tprops.history.push(\"/login\");\r\n\t// \t\t\tsetID(\"\");\r\n\t// \t\t\tsetPW(\"\");\r\n\t// \t\t} else if(response.data === \"success\") {\r\n\t// \t\t\talert(\"환영합니다!\");\r\n\t// \t\t\twindow.location.replace(\"/\")\r\n\t// \t\t}\r\n\t// \t});\r\n\t// }\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<form action=\"/member/loginAf\" method=\"post\" autocomplete=\"off\">\r\n\t\t\t\t\t<h3>로그인</h3>\r\n\t\t\t\t\t<label htmlFor=\"userid\">아이디</label>\r\n\t\t\t\t\t<input className=\"ID-input\" type='text' placeholder='아이디' name=\"id\" id='userid' required />\r\n\t\t\t\t\t<label htmlFor='password'>비밀번호</label>\r\n\t\t\t\t\t<input className=\"PW-input\" type='password' placeholder='비밀번호' name='pwd' id='password' required />\r\n\t\t\t\t\t<button className=\"signBtn\" type=\"submit\">로그인</button>\r\n\t\t\t\t\t<label id=\"logBtnBox\">\r\n\t\t\t\t\t\t<Link to=\"/signup\" className=\"signBtns\">회원가입</Link>\r\n\t\t\t\t\t\t<Link to=\"/idpw\" className=\"signBtns\">아이디/비밀번호 찾기</Link>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\News.js",["132","133","134","135","136","137"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCalendar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/News.css\";\r\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ko from 'date-fns/locale/ko'; \r\nimport striptags from 'striptags';\r\n\r\nregisterLocale('ko', ko);\r\n\r\nfunction News(props) {\r\n   const [news, setNews] = useState([]);\r\n   //const [sum, setSum] = useState([]);\r\n   const [startDate, setStartDate] = useState(new Date('1-01-2009'));\r\n   const [endDate, setEndDate] = useState(new Date('1-01-2009'));\r\n   const [keyword, setKeyword] = useState('');\r\n   const [key, setKey] = useState('');\r\n   const [mode, setMode] = useState(false); //과거뉴스 / 최신뉴스\r\n   const [des, setDes] = useState([{id:''}]);\r\n   const [sum, setSum] = useState([{\r\n      id: '',\r\n      sum0: '',\r\n      sum1: '',\r\n      sum2: ''\r\n   }]);\r\n   //new Array(news.length).fill(false)\r\n   const [disabledNewBtn, setDisabledNewBtn] = useState([false, false, false, false, false, false, false, false, false, false]);\r\n   const [disabledBtn, setDisabledBtn] = useState(new Array(news.length).fill(false));\r\n\r\n   const convertDate = str => {\r\n      str = str.toString();\r\n      let parts = str.split(\" \");\r\n      let months = {\r\n         Jan: \"01\",\r\n         Feb: \"02\",\r\n         Mar: \"03\",\r\n         Apr: \"04\",\r\n         May: \"05\",\r\n         Jun: \"06\",\r\n         Jul: \"07\",\r\n         Aug: \"08\",\r\n         Sep: \"09\",\r\n         Oct: \"10\",\r\n         Nov: \"11\",\r\n         Dec: \"12\"\r\n      };\r\n      return parts[3] + months[parts[1]] + parts[2];\r\n   };\r\n\r\n   const convertnewDate = str => {\r\n      str = str.toString();\r\n      let parts = str.split(\" \");\r\n\r\n      let months = {\r\n         Jan: \"01\",\r\n         Feb: \"02\",\r\n         Mar: \"03\",\r\n         Apr: \"04\",\r\n         May: \"05\",\r\n         Jun: \"06\",\r\n         Jul: \"07\",\r\n         Aug: \"08\",\r\n         Sep: \"09\",\r\n         Oct: \"10\",\r\n         Nov: \"11\",\r\n         Dec: \"12\"\r\n      };\r\n      return parts[3] + months[parts[2]] + parts[1];\r\n   };\r\n\r\n   const convertTitle = str => {\r\n      str = str.toString();\r\n      str = str.replace(/\"&lt;\"/g,\"<\");\r\n   \tstr = str.replace(/\"&gt;\"/g,\">\");\r\n   \tstr = str.replace(/&quot;/g,'\"');\r\n   \tstr = str.replace(/\"&#39;\"/g,\"'\");\t\r\n \t    return str;\r\n \t};\r\n\r\n \tconst convertDes1 = str => {\r\n      str = str.toString();\r\n      let parts = str.split(\"...\");\r\n      return parts[0]\r\n  \t};\r\n  \tconst convertDes2 = str => {\r\n      str = str.toString();\r\n      let parts = str.split(\"...\");\r\n      return parts[1]\r\n  \t};\r\n\r\n   const ExampleCustomInput = ({ value, onClick }) => (\r\n      <button className=\"example-custom-input\" onClick={onClick}>\r\n         {value}\r\n      </button>\r\n   );\r\n\r\n   const getNewsBtn = (e) => {\r\n      setNews([]);\r\n      setSum([]);\r\n      setKeyword('');\r\n      Axios.post('/getNews', {\r\n         start : convertDate(startDate),\r\n         end : convertDate(endDate)\r\n      }).then((res) => {\r\n         setNews(res.data);\r\n         setKeyword(res.data[0]);\r\n      })\r\n   }\r\n\r\n   console.log(news);\r\n\r\n\r\n   const getSumBtn = (e) => {      \r\n      const index = e.target.getAttribute('sum_idx');\r\n      disabledBtn[index] = true;\r\n      Axios.post('/getSum', {\r\n         paragraph: e.target.getAttribute('paragraph')\r\n      }).then((res) => {\r\n         setSum([\r\n            ...sum,\r\n            {\r\n            id: index,\r\n            sum0: res.data[0].sum,\r\n            sum1: res.data[1].sum,\r\n            sum2: res.data[2].sum\r\n         }]);\r\n      })\r\n   }\r\n\r\n   const getKeywordNews = (e) => {\r\n      setKey(e.target.getAttribute('keyword'));\r\n   }\r\n\r\n   const delSum = (e) => {\r\n      const index = e.target.getAttribute('del_idx');\r\n      setSum(sum.filter(sum => parseInt(sum.id) !== parseInt(index)));\r\n      disabledBtn[index] = false;\r\n   }\r\n   const delDes = (e) => {\r\n      const index = e.target.getAttribute('del_idx');\r\n      setDes(des.filter(des => parseInt(des.id) !== parseInt(index)));\r\n      disabledNewBtn[index] = false;\r\n   }\r\n\r\n   const brandNews = (e) => {\r\n      setNews([]);\r\n      setMode(true);\r\n      setDes([]);\r\n      Axios.post('/getbrandNews', {      \r\n      }).then((res) => {\r\n         setNews(res.data);\r\n      })\r\n   }\r\n\r\n   return (      \r\n      <div>\r\n         <div className=\"newstop\" style={{ backgroundImage: 'url(\"/img/newspic.png\")' }}>\r\n            <div>\r\n            <h2>과거 뉴스 / 최신 뉴스</h2>\r\n            <p>요약된 IT 뉴스로 과거부터 최신까지 빠르게 트렌드를 읽어보세요.</p>\r\n            <table className=\"buttontable\" border=\"1\">\r\n               <tr>\r\n                  <td><button className=\"newsbtn\" onClick={ (e) => {setNews([]); setSum([]); setKeyword(''); setKey(''); setMode(false); }}>과거 뉴스</button> </td>\r\n                  <td><img src=\"/img/slash.png\"/></td>\r\n                  <td><button className=\"newsbtn\" onClick={brandNews}>최신 뉴스</button> </td>\r\n               </tr>\r\n               <tr>\r\n                  <td><p>과거의 기간별 키워드를 통해 확인</p></td>\r\n                  <td></td>\r\n                  <td><p>오늘을 포함한 최근의 IT 뉴스 확인</p></td>\r\n               </tr>\r\n            </table>  \r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"menu__container\">\r\n            { mode ? <h2>NEWS - 최신 뉴스</h2>  : <h2>NEWS - 과거 뉴스</h2>}    \r\n            <div className=\"news_total\">\r\n               {news.length !== 0 ?  mode ? <p>총 게시물 {news.length}개 </p> : <p>총 게시물 {news.length - 1}개 </p>  :<p>총 게시물 {news.length}개 </p>  }\r\n            </div>\r\n\r\n            { mode ? \r\n            <div>\r\n               <div className=\"tagSearch\">\r\n                  <div className=\"tagTitle left\">NO.</div>\r\n                  <div className=\"tagTitle2 left\">기사 제목</div>\r\n                  <div className=\"tagTitle4 right\">요약</div>\r\n                  <div className=\"tagTitle3 right\">발행일</div>\r\n               </div>\r\n               <div className=\"news_contents\">\r\n                  {news.length !== 0 &&\r\n                     news.map((element, i) =>(\r\n                        element.length === undefined &&(\r\n                           <div className=\"newslist\" key={i}>\r\n                              <div>\r\n                                 <div className=\"left\">\r\n                                    <p>{i+1}</p>\r\n                                 </div>\r\n                                 <div className=\"right\">\r\n                                    <div>\r\n                                       <div className=\"title left\">\r\n                                          <h3>{convertTitle(striptags(element.title))}</h3>\r\n                                       </div>\r\n                                       <div className=\"summary right\">\r\n                                          <button type=\"submit\" onClick={ (e) => { disabledNewBtn[i] = true; setDes([...des,{id:i}]); }}\r\n                                          disabled={disabledNewBtn[i]} description_idx={i}>요약 보기</button>\r\n                                       </div>\r\n                                       <div className=\"title right\">\r\n                                          <h4>{convertnewDate(element.pubDate)}</h4>\r\n                                       </div>\r\n                                    </div>\r\n                                 </div>   \r\n                              </div>\r\n                              {des.length !== 0 &&(\r\n                                 des.map((el)=> (\r\n                                    parseInt(el.id) === i &&(\r\n                                    <div className=\"sumdiv\">   \r\n                                       <p><strong>첫번째 문장 : </strong>{convertDes1(striptags(element.description))}...</p>\r\n                                       <p><strong>두번째 문장 : </strong>{convertDes2(striptags(element.description))}...</p>\r\n                                       <button onClick={() => window.open(`${element.link}`, '_blank')}>원문 보기</button>\r\n                                       <button onClick={delDes}  del_idx={el.id} >닫기</button>\r\n                                    </div>\r\n                                 )))\r\n                              )}\r\n                           </div>            \r\n                        )\r\n                     ))\r\n                  }\r\n               </div>\r\n            </div>\r\n         :  <div>\r\n               <div className=\"keywordSearch\">                   \r\n                  <div>\r\n                     <p>조회 기간</p>                     \r\n                     <FontAwesomeIcon className=\"calendericon\" icon={faCalendar} size=\"1x\" />\r\n                     <DatePicker \r\n                        selected={startDate}\r\n                        onChange={date => setStartDate(date)}\r\n                        showYearDropdown\r\n                        dateFormatCalendar=\"MMMM\"\r\n                        dateFormat=\"yyyy년 MM월 dd일 ▼\"\r\n                        minDate={new Date('1-01-2009')}\r\n                        maxDate={new Date('12-27-2018')}\r\n                        yearDropdownItemNumber={15}\r\n                        scrollableYearDropdown\r\n                        locale=\"ko\"\r\n                        customInput={<ExampleCustomInput />}\r\n                     />                      \r\n                  </div>\r\n                  <p>ㅡ</p>\r\n                  <div>                        \r\n                     <FontAwesomeIcon className=\"calendericon\" icon={faCalendar} size=\"1x\" />\r\n                     <DatePicker\r\n                        selected={endDate}\r\n                        onChange={date => setEndDate(date)}\r\n                        showYearDropdown\r\n                        dateFormatCalendar=\"MMMM\"\r\n                        dateFormat=\"yyyy년 MM월 dd일 ▼\"\r\n                        minDate={new Date('1-01-2009')}\r\n                        maxDate={new Date('12-27-2018')}\r\n                        yearDropdownItemNumber={15}\r\n                        scrollableYearDropdown\r\n                        locale=\"ko\"\r\n                        customInput={<ExampleCustomInput />}\r\n                     />\r\n                     <button type=\"submit\" onClick={getNewsBtn}>\r\n                        <FontAwesomeIcon icon={faSearch} size=\"1x\"/>\r\n                     </button>                        \r\n                  </div>                  \r\n               </div>\r\n\r\n               <div className=\"tagSearch\">\r\n                  <div className=\"tagTitle left\">키워드 :</div>\r\n                  {keyword.length !== 0 &&\r\n                     keyword.map((element) =>(\r\n                        <button onClick={getKeywordNews} keyword={element}>{element}</button>\r\n                     ))}\r\n               </div>\r\n\r\n               <div className=\"news_contents\">\r\n                  {news.length !== 0 &&\r\n                     news.map((element, i) =>(\r\n                        element.length === undefined &&(\r\n                           key.length !== 0 &&(\r\n                              element.keyword.includes(key) === true &&(\r\n                                 <div className=\"newslist\" key={element.document_id}>\r\n                                    <div>\r\n                                       <div className=\"left\">\r\n                                          <p>{element.publisher}</p>\r\n                                          <h5>{element.date}</h5>\r\n                                       </div>\r\n                                       <div className=\"right\">\r\n                                          <div>\r\n                                             <div className=\"title left\">\r\n                                                <h3>{element.title}</h3>\r\n                                                <p>작성자 : {element.author}</p>\r\n                                             </div>\r\n                                             <div className=\"summary right\">\r\n                                                <button type=\"submit\" disabled={disabledBtn[i]} onClick={getSumBtn} paragraph={element.paragraph} sum_idx={i}>요약</button>\r\n                                             </div>\r\n                                          </div>\r\n                                       </div>\r\n                                    </div>\r\n                                    {sum.length !== 0 &&(\r\n                                       sum.map((el) =>(\r\n                                          parseInt(el.id) === i &&(\r\n                                          <div className=\"sumdiv\">\r\n                                             <p><strong>첫번째 문장 : </strong>{el.sum0}</p>\r\n                                             <p><strong>두번째 문장 : </strong>{el.sum1}</p>\r\n                                             <p><strong>세번째 문장 : </strong>{el.sum2}</p>\r\n                                             <button onClick={() => window.open(`${element.link}`, '_blank')}>원문 보기</button>\r\n                                             <button onClick={delSum} del_idx={el.id}>닫기</button>\r\n                                          </div>\r\n                                       )))\r\n                                    )}\r\n                                 </div>\r\n                              )\r\n                           )\r\n                        )\r\n                     ))\r\n                  }\r\n                  { !mode && <span>IT 뉴스 데이터는 국립국어원의 신문 말뭉치에서 제공 받았습니다.</span>}\r\n               </div>\r\n            </div>   \r\n            }\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default News;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Home.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\IdPw.js",["138","139","140","141"],"import React, {useState} from \"react\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\nfunction IdPw() {\r\n\r\n\tconst [Name,setName] = useState(\"\")\r\n\tconst [Email,setEmail] = useState(\"\")\r\n\tconst [ID,setID] = useState(\"\")\r\n\tconst [PW,setPW] = useState(\"\")\r\n\tconst [checknum,setChecknum] = useState(Math.floor(Math.random() * (899999)) + 100000);\r\n\tconst [userchecknum,setuserChecknum] = useState(0);\r\n\tconst [mode,setMode] = useState(false)\r\n\tconst onNameHandler = (event) => { setName (event.currentTarget.value) }\r\n\tconst onEmailHandler = (event) => { setEmail (event.currentTarget.value) }\r\n\tconst onIDHandler = (event) => { setID (event.currentTarget.value) }\r\n\tconst onPWHandler = (event) => { setPW (event.currentTarget.value) }\r\n\tconst onchecknumHandler =  (event) => { setuserChecknum (event.currentTarget.value) }\r\n\r\n\tconst checkID = (e) => {\r\n\t\tAxios.post('http://localhost:8000/checkidemail', {\r\n                name: Name,\r\n                email: Email\r\n        }).then((res) => {\r\n\t\t\tif(res.data === \"exist\") {\r\n\t\t\t\talert(\"이메일을 보내는 중입니다.\");\r\n\t\t\t\tsendID();\r\n\t\t\t} else if (res.data === \"noname\") {\r\n\t\t\t\talert(\"등록되지 않은 이름입니다.\");\r\n\t\t\t} else if (res.data === \"noemail\") {\r\n\t\t\t\talert(\"이메일이 일치하지 않습니다.\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\tconst sendID = () => {\r\n\t\tAxios.post('http://localhost:8000/sendID', {\r\n                name: Name,\r\n                email: Email\r\n        }).then((res) => {\r\n\t\t\tif(res.data === \"good\") {\r\n\t\t\t\talert(\"이메일로 아이디 보냄.\");\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tconst checkPW = (e) => {\r\n\t\tAxios.post('http://localhost:8000/checkpwemail', {\r\n                name: Name,\r\n                id:ID,\r\n                email: Email\r\n        }).then((res) => {\r\n\t\t\tif(res.data === \"exist\") {\r\n\t\t\t\talert(\"확인되었습니다.\");\r\n\t\t\t\tchangePW();\r\n\t\t\t} else if (res.data === \"noname\") {\r\n\t\t\t\talert(\"등록되지 않은 아이디 또는 이름 입니다.\");\r\n\t\t\t} else if (res.data === \"noemail\") {\r\n\t\t\t\talert(\"이메일이 일치하지 않습니다.\");\r\n\t\t\t} \r\n\t\t});\r\n\t}\r\n\r\n\tconst changePW = () => {\r\n\t\tconsole.log('changePW');//100000~999999\r\n\t\tAxios.post('http://localhost:8000/changePW', {\r\n                name: Name,\r\n                checknum:checknum,\r\n                email: Email\r\n        }).then((res) => {\r\n\t\t\tif(res.data === \"good\") {\r\n\t\t\t\talert(\"인증 이메일 보냄.\");\r\n\t\t\t\tsetMode(true);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<form autocomplete=\"off\">\r\n\t\t\t\t\t<h3>아이디 찾기</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\t\t\t\t\t<button className=\"get-id\" onClick={checkID}> 찾기</button>\r\n\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>비밀번호 찾기</h3>\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<input className=\"ID-input\" type='text' placeholder='아이디' value={ID} onChange={onIDHandler} name='id'/>\r\n\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\r\n\t\t\t\t\t<button className=\"get-pw\" onClick={checkPW}> 찾기</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t{ (mode)&& \r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<h3>비밀번호 변경</h3>\r\n\t\t\t\t\t\t<label>인증번호 입력</label>\r\n\t\t\t\t\t\t<input className=\"checknum-input\" type='text' placeholder='인증번호' onChange={onchecknumHandler} name='name' />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t} \r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default IdPw;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Qna.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Talk.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Compile.js",["142","143","144","145","146","147","148","149","150"],"import \"../css/Menu.css\";\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport AceEditor from \"../lib/AceImport\";\r\n\r\nfunction Compile() {\r\n\tconst[language, setLanguage] = useState(45);\r\n\tconst[output, setOutput] = useState();\r\n\tconst[input, setInput] = useState(``); \r\n\tconst[user_input, setUserInput] = useState(\"\");\r\n\tconst[lang, setLang] = useState(``);\r\n\tconst[basic, setBasic] = useState(``);\r\n\tconst aceinput = useRef(null);\r\n\r\n\tconst clear = (e) => { setInput(\"\"); setUserInput(\"\"); }\r\n\r\n\tconst lanChange = async (e) => { setLanguage(e.target.value); setmode(e.target.value);}\r\n\r\n\tfunction setmode(num){\r\n\t\tif(num === \"html\"){\r\n\t\t\tsetLang('html');\r\n\t\t\taceinput.current.editor.setValue('<div>Hello World!</div>');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tswitch(parseInt(num)){\r\n\t\t        //case 19 : setLang('crystal'); aceinput.current.editor.setValue(''); break;\r\n\t\t        //case 43 : setLang('plain_text'); aceinput.current.editor.setValue(''); break;\r\n\t\t        case 45 : setLang('assembly_x86'); aceinput.current.editor.setValue('section .data\\nmsg   db    \\'Hello world!\\', 0AH\\nlen   equ   $-msg\\n\\nsection .text\\nglobal _WinMain@16\\n\\n_WinMain@16:\\nmov   edx, len\\nmov   ecx, msg\\nmov   ebx, 1\\nmov   eax, 4\\n\\nint   80h\\n\\nmov   ebx, 0\\nmov   eax, 1\\nint   80h\\n'); break;\r\n\t\t        case 50 : setLang('c_cpp'); aceinput.current.editor.setValue('void main(){\\n\\tprintf(\"Hello World\");\\n}'); break;\r\n\t\t        case 51 : setLang('csharp'); aceinput.current.editor.setValue('using System;\\nclass HelloWorld {\\n  static void Main() {\\n    Console.WriteLine(\"Hello World\");\\n  }\\n}'); break;\r\n\t\t        case 54 : setLang('c_cpp'); aceinput.current.editor.setValue('#include <iostream>\\nusing namespace std;\\n\\nint main(){\\n    cout<<\"Hello world\";\\nreturn 0;\\n}'); break;\r\n\t\t        case 55 : setLang('lisp'); aceinput.current.editor.setValue('(defun hello ()\\n    (format t \"Hello, World!~%\"))\\n(hello)'); break;\r\n\t\t        case 56 : setLang('d'); aceinput.current.editor.setValue('import std.stdio; \\n\\nvoid main() {\\n    writeln(\"Hello world!\");\\n}'); break;\r\n\t\t        //case 57 : setLang('elixir'); aceinput.current.editor.setValue(''); break;\r\n\t\t        //case 58 : setLang('erlang'); aceinput.current.editor.setValue(''); break;\r\n\t\t        case 59 : setLang('fortran'); aceinput.current.editor.setValue('Program Hello\\nPrint *, \"Hello World\"\\nEnd Program Hello'); break;\r\n\t\t        case 60 : setLang('golang'); aceinput.current.editor.setValue('package main  \\n import \"fmt\"\\n func main() {\\n fmt.Println(\"Hello World\")\\n}'); break;\r\n\t\t        case 61 : setLang('haskell'); aceinput.current.editor.setValue('main = putStrLn \"Hello World\"'); break;\r\n\t\t        case 62 : setLang('java'); aceinput.current.editor.setValue('public class Main {\\n  public static void main(String[] args) {\\n    System.out.println(\"Hello World\");\\n  }\\n}'); break;\r\n\t\t        case 63 : setLang('javascript'); aceinput.current.editor.setValue('console.log(\"Hello world\");'); break;\r\n\t\t        case 64 : setLang('lua'); aceinput.current.editor.setValue('print \"Hello world\"'); break;\r\n\t\t        case 67 : setLang('pascal'); aceinput.current.editor.setValue('program Hello;\\nbegin\\n  writeln (\"Hello, world.\");\\nend.'); break;\r\n\t\t        case 68 : setLang('php'); aceinput.current.editor.setValue('<?php\\n echo \"Hello World\";'); break;\r\n\t\t        //case 69 : setLang('prolog'); aceinput.current.editor.setValue(''); break;\r\n\t\t        case 71 : setLang('python'); aceinput.current.editor.setValue('print(\"Hello World!\")'); break;\r\n\t\t        //왜안돼 case 72 : setLang('ruby'); aceinput.current.editor.setValue('puts \"Hello World\"'); break;\r\n\t\t        case 73 : setLang('rust'); aceinput.current.editor.setValue('fn main() {\\n    println!(\"Hello World\");\\n}'); break;\r\n\t\t        case 74 : setLang('typescript'); aceinput.current.editor.setValue('console.log(\"Hello\");'); break;\r\n\t\t        case 86 : setLang('clojure'); aceinput.current.editor.setValue('(ns clojure.examples.main\\n    (:gen-class))\\n(defn Example []    (println (str \"Hello World\")) )\\n(Example)'); break;\r\n\t\t        defualt : aceinput.current.editor.setValue('default');\r\n    \t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst test = async(e) => {\r\n\t\tsetUserInput(e.target.value);\r\n\t}\r\n\r\n\tconst run = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tif(language == \"html\") {\r\n\t\t\tlet outputText = document.getElementById(\"output\");\r\n\t\t\tlet tests = \"\";\r\n\t\t\ttests += input;\r\n\r\n\t\t\toutputText.innerHTML = tests;\r\n\t\t} else {\r\n\t\t\tlet outputText = document.getElementById(\"output\");\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += \"Creating Submission ...\\n\";\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t\"https://judge0-extra.p.rapidapi.com/submissions\",\r\n\t\t\t\t{   method: \"POST\",\r\n\t\t\t\theaders: {\r\n\t                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\", //\"judge0-extra.p.rapidapi.com\",\r\n\t                    \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n\t                    \"content-type\": \"application/json\",\r\n\t                    accept: \"application/json\"\r\n\t                },\r\n\t                body: JSON.stringify({\r\n\t                \tsource_code: input,\r\n\t                \tstdin: user_input,\r\n\t                \tlanguage_id: language\r\n\t                }),\r\n\t            }\r\n\t            );\r\n\t\t\toutputText.innerHTML += \"Submission Created ...\\n\";\r\n\t\t\tconst jsonResponse = await response.json();\r\n\r\n\t\t\tlet jsonGetSolution = {\r\n\t\t\t\tstatus: { description: \"Queue\" },\r\n\t\t\t\tstderr: null,\r\n\t\t\t\tcompile_output: null,\r\n\t\t\t};\r\n\r\n\t\t\twhile (\r\n\t\t\t\tjsonGetSolution.status.description !== \"Accepted\" &&\r\n\t\t\t\tjsonGetSolution.stderr == null &&\r\n\t\t\t\tjsonGetSolution.compile_output == null\r\n\t\t\t\t){\r\n\t\t\t\toutputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\r\n\t\t\tif (jsonResponse.token) {\r\n\t\t\t\tlet url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\r\n\r\n\t\t\t\tconst getSolution = await fetch(url, {\r\n\t\t\t\t\tmethod: \"GET\",\r\n\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n\t                         \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n\t                          //\"useQueryString\": true\r\n\t                          \"content-type\": \"application/json\",\r\n\t                      },\r\n\t                  });\r\n\t\t\t\tjsonGetSolution = await getSolution.json();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (jsonGetSolution.stdout) {\r\n\t\t\tconst output = atob(jsonGetSolution.stdout);\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += `Results :\\n${output}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\r\n\t\t} else if (jsonGetSolution.stderr) {\r\n\t\t\tconst error = atob(jsonGetSolution.stderr);\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += `\\n Error :${error}`;\r\n\t\t} else {\r\n\t\t\tconst compilation_error = atob(jsonGetSolution.compile_output);\r\n\t\t\toutputText.innerHTML = \"\";\r\n\t\t\toutputText.innerHTML += `\\n Error :${compilation_error}`;\r\n\t\t}\r\n\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetmode(45);\r\n\t}, []);\r\n\r\n    return (\r\n\t\t<div className=\"compile_back\">\r\n\t\t\t<div id=\"compile_header\">\r\n\t\t\t\t<div className=\"cover\">\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{/*<li>\r\n\t\t\t\t\t\t<span>Font Size</span> &nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<select name=\"fontsize\" id=\"fontsize\">\r\n\t\t\t\t\t\t\t\t<option value=\"14\">14</option>\r\n\t\t\t\t\t\t\t\t<option value=\"15\">15</option>\r\n\t\t\t\t\t\t\t\t<option value=\"16\">16</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>*/}\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<span>Language</span>&nbsp;&nbsp;\r\n\t\t\t\t\t\t\t<select onChange={lanChange}>    \r\n\t\t\t\t\t\t\t\t<option value=\"45\">Assembly (NASM 2.14.02)</option>                     \r\n\t\t\t\t\t\t\t\t{/*<option value=\"html\">HTML</option>*/}\t\r\n\t\t\t\t\t\t\t\t<option value=\"50\">C (GCC 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"54\">C++ (GCC 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"51\">C# (Mono 6.6.0.161)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"86\">Clojure (1.10.1)   </option>\r\n\t\t\t\t\t\t\t\t<option value=\"55\">Common Lisp (SBCL 2.0.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"56\">D (DMD 2.089.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"59\">Fortran (GFortran 9.2.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"60\">Go (1.13.5)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"61\">Haskell (GHC 8.8.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"62\">Java (OpenJDK 13.0.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"63\">JavaScript (Node.js 12.14.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"64\">Lua (5.3.5)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"67\">Pascal (FPC 3.0.4)</option>\r\n\r\n\t\t\t\t\t\t\t\t<option value=\"68\">PHP(7.4.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"71\">Python (3.8.1)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"72\">Ruby (2.7.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"73\">Rust (1.40.0)</option>\r\n\t\t\t\t\t\t\t\t<option value=\"74\">TypeScript (3.7.4)</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"file_name\">\r\n\t\t\t\t<p>main.c</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"complie\">\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<AceEditor\r\n\t\t\t\t\tclassName=\"aceeditor\"\r\n\t\t\t\t\tid=\"input\"\r\n\t\t\t\t\tref={aceinput}\r\n\r\n\t\t\t\t\tmode= {lang}\r\n\t\t\t\t\ttheme=\"monokai\"\r\n\t\t\t\t\tonChange={(value)=>setInput(value)}\r\n\t\t\t\t\tfontSize={20}\r\n\t\t\t\t\tshowPrintMargin={true}\r\n\t\t\t\t\tshowGutter={true}\r\n\t\t\t\t\thighlightActiveLine={true}\r\n\t\t\t\t\tautoScrollEditorIntoView={true}\r\n\r\n\t\t\t\t\tsetOptions={{\r\n\t\t\t\t\t\tshowLineNumbers: true,\r\n\t\t\t\t\t\twrap: true, \r\n\t\t\t\t\t\tmaxLines: 22,\r\n\t\t\t\t\t\ttabSize: 2,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"complie_btn\">\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={clear}>CLEAR</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<button type=\"button\" onClick={run}>RUN</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div id=\"complie_result\">\r\n\t\t\t\t<div id=\"result_box\">\r\n\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t<textarea readOnly id=\"output\" placeholder=\"출력 값\" defaultValue={\"\"}/> \r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t<textarea placeholder=\"Input 값을 입력해 주세요.\" id=\"userinput\" onChange={test}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n};\r\n\r\nexport default Compile;\r\n\r\n\r\n","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PublicRoute.js",["151","152","153","154","155"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\nconst PublicRoute = ({ component: Component, restricted, isLogin: isLogin, id: id, ...rest }) => {\r\n    return (\r\n        <Route\r\n          {...rest}\r\n          render={(props) => (isLogin && restricted ? <Redirect to=\"/\" /> : <Component {...props} id={id}/>)}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PublicRoute;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Chat.js",["156","157","158","159","160","161","162","163"],"import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport '../css/Components.css';\r\nimport \"../css/Menu.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCommentDots, faCode, faPaperPlane } from \"@fortawesome/free-solid-svg-icons\"\r\nimport Axios from 'axios';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport AceEditors from \"../lib/AceImport\";\r\n\r\nconst socket = socketIOClient.connect(\"/\");\r\n\r\nfunction Chat(props) {\r\n   const mounted = useRef(false);\r\n   const aceinput = useRef(null);\r\n   const [sendMode, setSend] = useState(true);\r\n   const [language, setLanguage] = useState(45);\r\n   const [name, setName] = useState('');\r\n   const [lang, setLang] = useState('');\r\n   const [input, setInput] = useState(''); \r\n\r\n   const [inputMessage, setInputMessage] = useState(''); // 입력값을 저장하는 상태값\r\n   const [chatMonitor, setChatMonitor] = useState([]);\r\n\r\n   const [user, setUser] = useState();\r\n   const [recentChat, setRecentChat] = useState('');\r\n\r\n   const getUser = async (e) => {\r\n      await Axios.get(\"/member/session\").then((res) => {\r\n         if(res.data !== \"fail\") {\r\n            setUser(res.data.id);\r\n            setName(res.data.name);\r\n         }\r\n      });\r\n   }\r\n\r\n   useEffect(() => {\r\n      getUser();\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      if(!mounted.currnet) {\r\n         mounted.currnet = true;\r\n      } else {\r\n         getUser();\r\n      }\r\n   }, [user]);\r\n\r\n\r\n   const scrollToBottom = () => {\r\n      window.scrollTo(0,document.getElementById(\"chatMonitor\").scrollHeight);\r\n   };\r\n\r\n   const lanChange = async (e) => { setLanguage(e.target.value); setmode(e.target.value);}\r\n\r\n   function setmode(num){\r\n      if(num === \"html\"){\r\n         setLang('html');\r\n         aceinput.current.editor.setValue('<div>Hello World!</div>');\r\n      }\r\n      else{\r\n         switch(parseInt(num)){\r\n            //case 19 : setLang('crystal'); aceinput.current.editor.setValue(''); break;\r\n            //case 43 : setLang('plain_text'); aceinput.current.editor.setValue(''); break;\r\n            case 45 : setLang('assembly_x86'); aceinput.current.editor.setValue('section .data\\nmsg   db    \\'Hello world!\\', 0AH\\nlen   equ   $-msg\\n\\nsection .text\\nglobal _WinMain@16\\n\\n_WinMain@16:\\nmov   edx, len\\nmov   ecx, msg\\nmov   ebx, 1\\nmov   eax, 4\\n\\nint   80h\\n\\nmov   ebx, 0\\nmov   eax, 1\\nint   80h\\n'); break;\r\n            case 50 : setLang('c_cpp'); aceinput.current.editor.setValue('void main(){\\n\\tprintf(\"Hello World\");\\n}'); break;\r\n            case 51 : setLang('csharp'); aceinput.current.editor.setValue('using System;\\nclass HelloWorld {\\n  static void Main() {\\n    Console.WriteLine(\"Hello World\");\\n  }\\n}'); break;\r\n            case 54 : setLang('c_cpp'); aceinput.current.editor.setValue('#include <iostream>\\nusing namespace std;\\n\\nint main(){\\n    cout<<\"Hello world\";\\nreturn 0;\\n}'); break;\r\n            case 55 : setLang('lisp'); aceinput.current.editor.setValue('(defun hello ()\\n    (format t \"Hello, World!~%\"))\\n(hello)'); break;\r\n            case 56 : setLang('d'); aceinput.current.editor.setValue('import std.stdio; \\n\\nvoid main() {\\n    writeln(\"Hello world!\");\\n}'); break;\r\n            //case 57 : setLang('elixir'); aceinput.current.editor.setValue(''); break;\r\n            //case 58 : setLang('erlang'); aceinput.current.editor.setValue(''); break;\r\n            case 59 : setLang('fortran'); aceinput.current.editor.setValue('Program Hello\\nPrint *, \"Hello World\"\\nEnd Program Hello'); break;\r\n            case 60 : setLang('golang'); aceinput.current.editor.setValue('package main  \\n import \"fmt\"\\n func main() {\\n fmt.Println(\"Hello World\")\\n}'); break;\r\n            case 61 : setLang('haskell'); aceinput.current.editor.setValue('main = putStrLn \"Hello World\"'); break;\r\n            case 62 : setLang('java'); aceinput.current.editor.setValue('public class Main {\\n  public static void main(String[] args) {\\n    System.out.println(\"Hello World\");\\n  }\\n}'); break;\r\n            case 63 : setLang('javascript'); aceinput.current.editor.setValue('console.log(\"Hello world\");'); break;\r\n            case 64 : setLang('lua'); aceinput.current.editor.setValue('print \"Hello world\"'); break;\r\n            case 67 : setLang('pascal'); aceinput.current.editor.setValue('program Hello;\\nbegin\\n  writeln (\"Hello, world.\");\\nend.'); break;\r\n            case 68 : setLang('php'); aceinput.current.editor.setValue('<?php\\n echo \"Hello World\";'); break;\r\n            //case 69 : setLang('prolog'); aceinput.current.editor.setValue(''); break;\r\n            case 71 : setLang('python'); aceinput.current.editor.setValue('print(\"Hello World!\")'); break;\r\n            //왜안돼 case 72 : setLang('ruby'); aceinput.current.editor.setValue('puts \"Hello World\"'); break;\r\n            case 73 : setLang('rust'); aceinput.current.editor.setValue('fn main() {\\n    println!(\"Hello World\");\\n}'); break;\r\n            case 74 : setLang('typescript'); aceinput.current.editor.setValue('console.log(\"Hello\");'); break;\r\n            case 86 : setLang('clojure'); aceinput.current.editor.setValue('(ns clojure.examples.main\\n    (:gen-class))\\n(defn Example []    (println (str \"Hello World\")) )\\n(Example)'); break;\r\n            defualt : aceinput.current.editor.setValue('default');\r\n         }\r\n      }\r\n   }\r\n\r\n   const codeOn = async () => {\r\n      setSend(!sendMode);\r\n   }\r\n\r\n   const complieOn = async () => {\r\n      let outputText = \"\";\r\n      if(language == \"html\") {\r\n         let tests = \"\";\r\n         tests += input;\r\n\r\n         outputText = tests;\r\n      } else {\r\n         outputText += \"\";\r\n         outputText += \"Creating Submission ...\\n\";\r\n         const response = await fetch(\r\n            \"https://judge0-extra.p.rapidapi.com/submissions\",\r\n            {   method: \"POST\",\r\n            headers: {\r\n                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\", //\"judge0-extra.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n                    \"content-type\": \"application/json\",\r\n                    accept: \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                   source_code: input,\r\n                   language_id: language\r\n                   // stdin: user_input,\r\n                }),\r\n            }\r\n            );\r\n         //outputText.innerHTML += \"Submission Created ...\\n\";\r\n         outputText += \"Submission Created ...\\n\";\r\n         const jsonResponse = await response.json();\r\n\r\n         let jsonGetSolution = {\r\n            status: { description: \"Queue\" },\r\n            stderr: null,\r\n            compile_output: null,\r\n         };\r\n\r\n         while (\r\n            jsonGetSolution.status.description !== \"Accepted\" &&\r\n            jsonGetSolution.stderr == null &&\r\n            jsonGetSolution.compile_output == null\r\n            ){\r\n            //outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\r\n               outputText = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\r\n               if (jsonResponse.token) {\r\n                  let url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\r\n\r\n                  const getSolution = await fetch(url, {\r\n                     method: \"GET\",\r\n                     headers: {\r\n                        \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n                               \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n                                //\"useQueryString\": true\r\n                                \"content-type\": \"application/json\",\r\n                            },\r\n                        });\r\n                  jsonGetSolution = await getSolution.json();\r\n               }\r\n         }\r\n         if (jsonGetSolution.stdout) {\r\n            const output = atob(jsonGetSolution.stdout);\r\n            outputText = \"\";\r\n            outputText += `Results :\\n${output} \\n Execution Time : ${jsonGetSolution.time} Secs \\n Memory used : ${jsonGetSolution.memory} bytes`;\r\n         } else if (jsonGetSolution.stderr) {\r\n            const error = atob(jsonGetSolution.stderr);\r\n            outputText = \"\";\r\n            outputText += `\\n Error :${error}`;\r\n         } else {\r\n            const compilation_error = atob(jsonGetSolution.compile_output);\r\n            outputText = \"\";\r\n            outputText += `\\n Error :${compilation_error}`;\r\n         }\r\n      }\r\n      \r\n      socket.emit('code_send', { name: name, code : input, lang: lang, message: outputText });\r\n   }\r\n\r\n   const submit = (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      if(sendMode) { // txt - true\r\n      \tconsole.log(inputMessage);\r\n         socket.emit('message', { name: name, message: inputMessage });\r\n          setInputMessage(\"\");\r\n      } else {\r\n         complieOn();\r\n      }\r\n   };\r\n\r\n   const inputChange = (e) => {setInputMessage (e.target.value);}\r\n\r\n   useEffect(() => {\r\n      socket.on('upload', (data) => {\r\n         setRecentChat(data);\r\n      });\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      socket.on('uploads', (data) => {\r\n         setRecentChat(data);\r\n      });\r\n   }, []);\r\n\r\n   useEffect(async () => {      \r\n      (await Object.keys(recentChat).length) > 0 && setChatMonitor([...chatMonitor, recentChat]);\r\n      scrollToBottom();\r\n      setRecentChat('');\r\n   }, [recentChat]);\r\n\r\n   return (\r\n\r\n   <div className=\"menu__container\" >            \r\n      <div id=\"chat_box\">\r\n         <h2>Chatting</h2>       \r\n         <section className=\"chat-list\" id=\"chatMonitor\">\r\n             {\r\n                chatMonitor.map((item: Message, i: number) =>\r\n                   <div className=\"msgbox\">\r\n                      <div key={i} className={\r\n                         (item.name === name) ? \"message mright\" : \"message mleft\"\r\n                      }>\r\n                      <p className={\r\n                         (item.name === name) ? \"username uright\" : \"username uleft\"\r\n                      }>{item.name}</p>\r\n                      {\r\n                         (item.code) ? (\r\n                            // 보낸 언어를 받아와서 mode = {itme.lang} 으로 뿌려줘야할듯\r\n                            <div id=\"code_box\">\r\n                               \r\n                               <div id=\"code-ace\">\r\n                                  <React.Fragment>\r\n                                        <AceEditors\r\n                                          className=\"aceeditors\"\r\n                                          mode= {item.lang}\r\n                                          theme=\"monokai\"\r\n                                          value={item.code}\r\n                                          fontSize={20}\r\n                                          showPrintMargin={true}\r\n                                          showGutter={true}\r\n                                          highlightActiveLine={true}\r\n                                         \r\n                                          setOptions={{\r\n                                          showLineNumbers: true,\r\n                                          tabSize: 2,\r\n                                          }}\r\n                                          />\r\n                                     </React.Fragment>\r\n                               </div>\r\n                               \r\n                            <p className=\"message-result\">{item.message}</p>\r\n                            </div>\r\n                         ) : <p className=\"message-text\">{item.message}</p>\r\n                      }\r\n                      \r\n                      </div>\r\n                   </div>      \r\n                )\r\n             }\r\n          </section>\r\n         \r\n         <div className=\"chat-form\">\r\n         <form onSubmit={(e: FormEvent<HTMLFormElement>) => submit(e)}>\r\n            {\r\n               (sendMode) ? <input type=\"text\" autoComplete=\"off\" onChange={inputChange} value={inputMessage} id=\"txt\" />\r\n               :\r\n                  (<div id=\"chat_ace\">\r\n                     <React.Fragment>\r\n                            <AceEditors\r\n                              className=\"aceeditor\"\r\n                              id=\"input\"\r\n                              ref={aceinput}\r\n\r\n                              mode= {lang}\r\n                              theme=\"monokai\"\r\n                              onChange={(value)=>setInput(value)}\r\n                              fontSize={20}\r\n                              showPrintMargin={true}\r\n                              showGutter={true}\r\n                              highlightActiveLine={true}\r\n                             \r\n                              setOptions={{\r\n                              showLineNumbers: true,\r\n                              tabSize: 2,\r\n                              }}\r\n                              />\r\n                         </React.Fragment>\r\n                  </div>)\r\n            }\r\n\r\n            <div id=\"send_box\">\r\n               \r\n                  { (!sendMode) && \r\n                     (<select name=\"code_lang\" onChange={lanChange}>\r\n                        <option value=\"45\">Assembly (NASM 2.14.02)</option>                     \r\n                        <option value=\"html\">HTML</option>\r\n                        <option value=\"50\">C (GCC 9.2.0)</option>\r\n                        <option value=\"54\">C++ (GCC 9.2.0)</option>\r\n                        <option value=\"51\">C# (Mono 6.6.0.161)</option>\r\n\r\n                        <option value=\"86\">Clojure (1.10.1)   </option>\r\n                        <option value=\"55\">Common Lisp (SBCL 2.0.0)</option>\r\n                        <option value=\"56\">D (DMD 2.089.1)</option>\r\n                        <option value=\"59\">Fortran (GFortran 9.2.0)</option>\r\n                        <option value=\"60\">Go (1.13.5)</option>\r\n\r\n                        <option value=\"61\">Haskell (GHC 8.8.1)</option>\r\n                        <option value=\"62\">Java (OpenJDK 13.0.1)</option>\r\n                        <option value=\"63\">JavaScript (Node.js 12.14.0)</option>\r\n                        <option value=\"64\">Lua (5.3.5)</option>\r\n                        <option value=\"67\">Pascal (FPC 3.0.4)</option>\r\n\r\n                        <option value=\"68\">PHP(7.4.1)</option>\r\n                        <option value=\"71\">Python (3.8.1)</option>\r\n                        <option value=\"72\">Ruby (2.7.0)</option>\r\n                        <option value=\"73\">Rust (1.40.0)</option>\r\n                        <option value=\"74\">TypeScript (3.7.4)</option>\r\n                     </select>)\r\n                  }\r\n\r\n                  <div id=\"send_btn\">\r\n                     <button type=\"submit\" id=\"send\" className=\"left\"><FontAwesomeIcon icon={faPaperPlane} size=\"2x\"/></button>\r\n                     \r\n                     {\r\n                        (sendMode) ? <button type=\"button\" id=\"code\" className=\"right\" onClick={codeOn}><FontAwesomeIcon icon={faCode} size=\"2x\" /></button> :\r\n                        <button type=\"button\" id=\"codes\" className=\"right\" onClick={codeOn}><FontAwesomeIcon icon={faCommentDots} size=\"2x\"/></button>\r\n                     }\r\n                     \r\n                  </div>\r\n               \r\n            </div>\r\n            </form>\r\n         </div>\r\n      \r\n      </div>\r\n   </div>\r\n   );\r\n};\r\n\r\nexport default Chat;\r\n\r\n   ","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrivateRoute.js",["164","165","166","167"],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\n\r\nconst PrivateRoute = ({ component: Component, isLogin: isLogin, ...rest }) => {\r\n\r\n    return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /login page\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (isLogin ? <Component {...props} /> : (alert(\"로그인 후 이용 가능 합니다!\"),<Redirect to=\"/login\" />))}\r\n        />\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrismImport.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\TagBox.js",["168","169","170","171","172"],"import React, {useState, useCallback, useEffect } from \"react\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n\t<div className=\"tagtest\">{tag}<button className=\"btntest\" onClick={() => onRemove(tag)}>x</button></div>\r\n));\r\n\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n\t<div>\r\n\t\t{tags.map(tag => (\r\n\t\t\t<TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n\t\t))}\r\n\t</div>\r\n));\r\n\r\nconst TagBox = ({change, ex_tags, name}) => {\r\n\tconst [input, setInput] = useState('');\r\n\tconst [localTags, setLocalTags] = useState([]);\r\n\tconst [exTags, setExTags] = useState(ex_tags);\r\n\tconst [tags, setTags] = useState([]);\r\n\r\n\tconst tagSet = (localTags) =>{\r\n\t\tchange(localTags);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\ttagSet(localTags);\r\n\t\tif(exTags){\r\n\t\t\tif(exTags.length !== 0){\r\n\t\t\t\tsetLocalTags(exTags.filter(t => t !== \"undefined\"));\r\n\t\t\t\tsetExTags([]);\t\r\n\t\t\t}\r\n\t\t}\r\n\t}, [localTags]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(name){\r\n\t\t\tAxios.post('/board/getTag', {\r\n\t\t        name : name\r\n\t\t    }).then((res) => {\r\n\t\t    \tsetTags(res.data);\r\n\t\t    });\r\n\t\t}\r\n\r\n\t}, []);\r\n\r\n\tconst setClickTags = useCallback(e => {\r\n\t\tconst tag = e.target.getAttribute('tags');\r\n\t\tif(localTags.length < 3){\r\n\t\t\tsetLocalTags([...localTags, tag]);\r\n\t\t}\r\n\t\tsetInput('');\r\n\t})\r\n\r\n\tconst insertTag = useCallback(\r\n\t\ttag => {\r\n\t\t\tif(!tag) return;\r\n\t\t\tif(localTags.includes(tag)) return;\r\n\t\t\tif(localTags.length < 3){\r\n\t\t\t\tsetLocalTags([...localTags, tag]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\r\n\tconst onRemove = useCallback(\r\n\t\ttag => {\r\n\t\t\tsetLocalTags(localTags.filter(t => t !== tag));\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\tconst onChange = useCallback(e => {\r\n\t\tsetInput(e.target.value);\r\n\t}, []);\r\n\r\n\tconst onlyOne = tags.filter((element, i) => {\r\n\t\treturn tags.indexOf(element) === i;\r\n\t})\r\n\r\n\tconst filteredTags = onlyOne.filter((onlyOne) => {\r\n\t\tif(onlyOne !== localTags[0] && onlyOne !== localTags[1] && onlyOne !== localTags[2])\r\n\t\t\treturn onlyOne.toLowerCase().includes(input);\r\n\t\t\r\n\t});\r\n\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\te => {\r\n\t\t\tinsertTag(input.trim());\r\n\t\t\tsetInput('');\r\n\t\t},\r\n\t\t[input, insertTag],\r\n\t);\r\n\r\n\tconst handleKeyUp = useCallback(e =>{\r\n\t\tif(e.keyCode === 32){\r\n\t\t\tonSubmit();\r\n\t\t}\r\n\t})\t\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"TagBox\">\r\n\t\t\t<div className=\"tag-box\">\r\n\t\t\t\t<span className=\"tag-list left\">\r\n\t\t\t\t\t<TagList tags={localTags} onRemove={onRemove}/>\r\n\t\t\t\t</span>\r\n\t\t\t\t{exTags ?\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"tag-input\"\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonKeyUp={handleKeyUp}\r\n\t\t\t\t/> :\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"tag-input\"\r\n\t\t\t\t\tplaceholder=\"태그를 입력하세요\"\r\n\t\t\t\t\tvalue={input}\r\n\t\t\t\t\tonChange={onChange}\r\n\t\t\t\t\tonKeyUp={handleKeyUp}\r\n\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t\t\t{input &&\r\n\t\t\t\t\tfilteredTags.length !==0 &&\r\n\t\t\t\t\t<div className=\"tag-set\">\r\n\t\t\t\t\t\t{filteredTags.map((element,i) =>(\r\n\t\t\t\t\t\t\t<div onClick={setClickTags} tags={element}>\r\n\t\t\t\t\t\t\t\t<button onClick={setClickTags} tags={element}>{element}</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagBox;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\AceImport.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":8,"column":8,"nodeType":"179","messageId":"180","endLine":8,"endColumn":16},{"ruleId":"181","severity":1,"message":"182","line":45,"column":8,"nodeType":"183","endLine":45,"endColumn":10,"suggestions":"184"},{"ruleId":"181","severity":1,"message":"185","line":74,"column":8,"nodeType":"183","endLine":74,"endColumn":42,"suggestions":"186"},{"ruleId":"181","severity":1,"message":"187","line":79,"column":8,"nodeType":"183","endLine":79,"endColumn":10,"suggestions":"188"},{"ruleId":"181","severity":1,"message":"189","line":95,"column":8,"nodeType":"183","endLine":95,"endColumn":10,"suggestions":"190"},{"ruleId":"177","severity":1,"message":"191","line":24,"column":9,"nodeType":"179","messageId":"180","endLine":24,"endColumn":16},{"ruleId":"177","severity":1,"message":"192","line":25,"column":9,"nodeType":"179","messageId":"180","endLine":25,"endColumn":13},{"ruleId":"177","severity":1,"message":"193","line":25,"column":15,"nodeType":"179","messageId":"180","endLine":25,"endColumn":22},{"ruleId":"177","severity":1,"message":"194","line":26,"column":6,"nodeType":"179","messageId":"180","endLine":26,"endColumn":14},{"ruleId":"177","severity":1,"message":"195","line":39,"column":26,"nodeType":"179","messageId":"180","endLine":39,"endColumn":32},{"ruleId":"181","severity":1,"message":"196","line":106,"column":5,"nodeType":"183","endLine":106,"endColumn":18,"suggestions":"197"},{"ruleId":"181","severity":1,"message":"198","line":43,"column":5,"nodeType":"183","endLine":43,"endColumn":7,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":7,"column":7,"nodeType":"202","endLine":7,"endColumn":39},{"ruleId":"177","severity":1,"message":"203","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"205","line":39,"column":9,"nodeType":"206","messageId":"207","endLine":39,"endColumn":11},{"ruleId":"177","severity":1,"message":"208","line":8,"column":9,"nodeType":"179","messageId":"180","endLine":8,"endColumn":11},{"ruleId":"177","severity":1,"message":"209","line":8,"column":12,"nodeType":"179","messageId":"180","endLine":8,"endColumn":17},{"ruleId":"181","severity":1,"message":"210","line":42,"column":5,"nodeType":"183","endLine":42,"endColumn":17,"suggestions":"211"},{"ruleId":"177","severity":1,"message":"203","line":1,"column":26,"nodeType":"179","messageId":"180","endLine":1,"endColumn":35},{"ruleId":"177","severity":1,"message":"212","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"213","line":8,"column":38,"nodeType":"179","messageId":"180","endLine":8,"endColumn":54},{"ruleId":"177","severity":1,"message":"214","line":31,"column":27,"nodeType":"179","messageId":"180","endLine":31,"endColumn":44},{"ruleId":"177","severity":1,"message":"215","line":32,"column":24,"nodeType":"179","messageId":"180","endLine":32,"endColumn":38},{"ruleId":"200","severity":1,"message":"201","line":168,"column":23,"nodeType":"202","endLine":168,"endColumn":50},{"ruleId":"177","severity":1,"message":"216","line":10,"column":9,"nodeType":"179","messageId":"180","endLine":10,"endColumn":11},{"ruleId":"177","severity":1,"message":"217","line":11,"column":18,"nodeType":"179","messageId":"180","endLine":11,"endColumn":29},{"ruleId":"177","severity":1,"message":"218","line":12,"column":9,"nodeType":"179","messageId":"180","endLine":12,"endColumn":21},{"ruleId":"177","severity":1,"message":"219","line":17,"column":8,"nodeType":"179","messageId":"180","endLine":17,"endColumn":19},{"ruleId":"177","severity":1,"message":"220","line":7,"column":8,"nodeType":"179","messageId":"180","endLine":7,"endColumn":14},{"ruleId":"177","severity":1,"message":"221","line":7,"column":16,"nodeType":"179","messageId":"180","endLine":7,"endColumn":25},{"ruleId":"177","severity":1,"message":"222","line":11,"column":8,"nodeType":"179","messageId":"180","endLine":11,"endColumn":13},{"ruleId":"177","severity":1,"message":"223","line":11,"column":15,"nodeType":"179","messageId":"180","endLine":11,"endColumn":23},{"ruleId":"224","severity":1,"message":"225","line":24,"column":4,"nodeType":"226","messageId":"227","endLine":50,"endColumn":8},{"ruleId":"228","severity":1,"message":"229","line":49,"column":11,"nodeType":"230","messageId":"231","endLine":49,"endColumn":65},{"ruleId":"232","severity":1,"message":"233","line":49,"column":11,"nodeType":"179","messageId":"234","endLine":49,"endColumn":18,"fix":"235"},{"ruleId":"236","severity":1,"message":"237","line":49,"column":11,"nodeType":"230","messageId":"238","endLine":49,"endColumn":65},{"ruleId":"204","severity":1,"message":"205","line":60,"column":15,"nodeType":"206","messageId":"207","endLine":60,"endColumn":17},{"ruleId":"177","severity":1,"message":"239","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"203","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"240","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":5,"column":58,"nodeType":"243","messageId":"244","endLine":5,"endColumn":74,"fix":"245"},{"ruleId":"241","severity":1,"message":"246","line":5,"column":76,"nodeType":"243","messageId":"244","endLine":5,"endColumn":82,"fix":"247"},{"ruleId":"177","severity":1,"message":"248","line":1,"column":38,"nodeType":"179","messageId":"180","endLine":1,"endColumn":49},{"ruleId":"224","severity":1,"message":"225","line":61,"column":10,"nodeType":"226","messageId":"227","endLine":87,"endColumn":11},{"ruleId":"228","severity":1,"message":"229","line":86,"column":13,"nodeType":"230","messageId":"231","endLine":86,"endColumn":67},{"ruleId":"232","severity":1,"message":"233","line":86,"column":13,"nodeType":"179","messageId":"234","endLine":86,"endColumn":20,"fix":"249"},{"ruleId":"236","severity":1,"message":"237","line":86,"column":13,"nodeType":"230","messageId":"238","endLine":86,"endColumn":67},{"ruleId":"204","severity":1,"message":"205","line":97,"column":19,"nodeType":"206","messageId":"207","endLine":97,"endColumn":21},{"ruleId":"181","severity":1,"message":"250","line":196,"column":14,"nodeType":"251","endLine":200,"endColumn":5},{"ruleId":"181","severity":1,"message":"252","line":200,"column":7,"nodeType":"183","endLine":200,"endColumn":19,"suggestions":"253"},{"ruleId":"177","severity":1,"message":"239","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"203","line":1,"column":27,"nodeType":"179","messageId":"180","endLine":1,"endColumn":36},{"ruleId":"177","severity":1,"message":"240","line":3,"column":8,"nodeType":"179","messageId":"180","endLine":3,"endColumn":13},{"ruleId":"241","severity":1,"message":"242","line":5,"column":47,"nodeType":"243","messageId":"244","endLine":5,"endColumn":63,"fix":"254"},{"ruleId":"181","severity":1,"message":"255","line":35,"column":5,"nodeType":"183","endLine":35,"endColumn":16,"suggestions":"256"},{"ruleId":"181","severity":1,"message":"185","line":46,"column":5,"nodeType":"183","endLine":46,"endColumn":7,"suggestions":"257"},{"ruleId":"181","severity":1,"message":"258","line":48,"column":23,"nodeType":"179","endLine":48,"endColumn":34},{"ruleId":"259","severity":1,"message":"260","line":81,"column":48,"nodeType":"251","messageId":"261","endLine":81,"endColumn":50},{"ruleId":"181","severity":1,"message":"258","line":96,"column":22,"nodeType":"179","endLine":96,"endColumn":33},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'idx' and 'name'. Either include them or remove the dependency array.","ArrayExpression",["264"],"React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["265"],"React Hook useEffect has missing dependencies: 'hitUpdate' and 'props.match.params.idx'. Either include them or remove the dependency array. If 'setIdx' needs the current value of 'props.match.params.idx', you can also switch to useReducer instead of useState and read 'props.match.params.idx' in the reducer.",["266"],"React Hook useEffect has missing dependencies: 'idx', 'name', and 'props.history'. Either include them or remove the dependency array.",["267"],"'loading' is assigned a value but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'tagarray' is assigned a value but never used.","'search' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadList' and 'loadSearch'. Either include them or remove the dependency array.",["268"],"React Hook useCallback has missing dependencies: 'post.contents' and 'post.title'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'post.title'.",["269"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'pw' is assigned a value but never used.","'setPW' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["270"],"'Link' is defined but never used.","'setDefaultLocale' is defined but never used.","'setDisabledNewBtn' is assigned a value but never used.","'setDisabledBtn' is assigned a value but never used.","'PW' is assigned a value but never used.","'setChecknum' is assigned a value but never used.","'userchecknum' is assigned a value but never used.","'onPWHandler' is assigned a value but never used.","'output' is assigned a value but never used.","'setOutput' is assigned a value but never used.","'basic' is assigned a value but never used.","'setBasic' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-labels","Unexpected labeled statement.","LabeledStatement","unexpectedLabel","no-unused-labels","'defualt:' is defined but never used.","unused",{"range":"271","text":"272"},"no-unreachable","Unreachable code.","unreachableCode","'useState' is defined but never used.","'Axios' is defined but never used.","no-useless-rename","Destructuring assignment isLogin unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"273","text":"274"},"Destructuring assignment id unnecessarily renamed.",{"range":"275","text":"276"},"'useCallback' is defined but never used.",{"range":"277","text":"272"},"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'chatMonitor'. Either include it or remove the dependency array. You can also do a functional update 'setChatMonitor(c => ...)' if you only need 'chatMonitor' in the 'setChatMonitor' call.",["278"],{"range":"279","text":"274"},"React Hook useEffect has missing dependencies: 'exTags' and 'tagSet'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLocalTags' needs the current value of 'exTags'.",["280"],["281"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"282","fix":"283"},{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},[4065,4075],"",[193,209],"isLogin",[211,217],"id",[5208,5218],{"desc":"296","fix":"297"},[182,198],{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},"Update the dependencies array to be: [idx, name]",{"range":"302","text":"303"},"Update the dependencies array to be: [loadComment, post.commentN, post, name]",{"range":"304","text":"305"},"Update the dependencies array to be: [hitUpdate, props.match.params.idx]",{"range":"306","text":"307"},"Update the dependencies array to be: [idx, name, props.history]",{"range":"308","text":"309"},"Update the dependencies array to be: [loadList, loadSearch, searchValue]",{"range":"310","text":"311"},"Update the dependencies array to be: [post.contents, post.title]",{"range":"312","text":"313"},"Update the dependencies array to be: [loginCheck, props.history]",{"range":"314","text":"315"},"Update the dependencies array to be: [chatMonitor, recentChat]",{"range":"316","text":"317"},"Update the dependencies array to be: [exTags, localTags, tagSet]",{"range":"318","text":"319"},"Update the dependencies array to be: [name]",{"range":"320","text":"321"},[1666,1668],"[idx, name]",[2369,2403],"[loadComment, post.commentN, post, name]",[2505,2507],"[hitUpdate, props.match.params.idx]",[3006,3008],"[idx, name, props.history]",[3283,3296],"[loadList, loadSearch, searchValue]",[1396,1398],"[post.contents, post.title]",[923,935],"[loginCheck, props.history]",[9675,9687],"[chatMonitor, recentChat]",[927,938],"[exTags, localTags, tagSet]",[1109,1111],"[name]"]