[{"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\index.js":"1","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\App.js":"2","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Header.js":"3","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Navigation.js":"4","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Body.js":"5","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Footer.js":"6","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Post.js":"7","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Board.js":"8","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Writing.js":"9","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\NotFound.js":"10","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\SignUp.js":"11","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\IdPw.js":"12","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Login.js":"13","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\News.js":"14","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Forum.js":"15","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Qna.js":"16","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Compile.js":"17","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Talk.js":"18","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Chat.js":"19","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\lib\\PublicRoute.js":"20","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Home.js":"21","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\lib\\PrivateRoute.js":"22","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\lib\\PrismImport.js":"23","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\TagBox.js":"24"},{"size":236,"mtime":1614961683422,"results":"25","hashOfConfig":"26"},{"size":516,"mtime":1614961683406,"results":"27","hashOfConfig":"26"},{"size":1170,"mtime":1614961683406,"results":"28","hashOfConfig":"26"},{"size":487,"mtime":1614961683406,"results":"29","hashOfConfig":"26"},{"size":1757,"mtime":1614961683406,"results":"30","hashOfConfig":"26"},{"size":226,"mtime":1614961683406,"results":"31","hashOfConfig":"26"},{"size":12563,"mtime":1614961683406,"results":"32","hashOfConfig":"26"},{"size":8401,"mtime":1614961683406,"results":"33","hashOfConfig":"26"},{"size":6233,"mtime":1614961683406,"results":"34","hashOfConfig":"26"},{"size":159,"mtime":1614961683406,"results":"35","hashOfConfig":"26"},{"size":2807,"mtime":1614961683437,"results":"36","hashOfConfig":"26"},{"size":1631,"mtime":1614961683422,"results":"37","hashOfConfig":"26"},{"size":1864,"mtime":1614961683422,"results":"38","hashOfConfig":"26"},{"size":5218,"mtime":1614961683422,"results":"39","hashOfConfig":"26"},{"size":201,"mtime":1614961683422,"results":"40","hashOfConfig":"26"},{"size":273,"mtime":1614961683422,"results":"41","hashOfConfig":"26"},{"size":7503,"mtime":1614961683422,"results":"42","hashOfConfig":"26"},{"size":256,"mtime":1614961683437,"results":"43","hashOfConfig":"26"},{"size":2360,"mtime":1614961683422,"results":"44","hashOfConfig":"26"},{"size":772,"mtime":1614961683422,"results":"45","hashOfConfig":"26"},{"size":343,"mtime":1614961683422,"results":"46","hashOfConfig":"26"},{"size":763,"mtime":1614961683422,"results":"47","hashOfConfig":"26"},{"size":982,"mtime":1614961683422,"results":"48","hashOfConfig":"26"},{"size":1661,"mtime":1614961683406,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1rn8wef",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"52"},"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\index.js",[],["109","110"],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\App.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Header.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Navigation.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Body.js",["111"],"import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Login from \"../routes/Login\";\r\nimport SignUp from \"../routes/SignUp\";\r\nimport IdPw from \"../routes/IdPw\";\r\nimport Home from \"../routes/Home\";\r\nimport News from \"../routes/News\";\r\nimport Forum from \"../routes/Forum\";\r\nimport Compile from \"../routes/Compile\";\r\nimport Qna from \"../routes/Qna\";\r\nimport Talk from \"../routes/Talk\";\r\nimport Chat from \"../routes/Chat\";\r\nimport Writing from \"../components/Writing\";\r\nimport Post from \"../components/Post\";\r\nimport \"../css/Body.css\";\r\nimport Board from \"./Board\";\r\nimport PublicRoute from \"../lib/PublicRoute\"\r\nimport PrivateRoute from \"../lib/PrivateRoute\"\r\nimport NotFound from \"./NotFound\";\r\n\r\nfunction Body() {\r\n    return (\r\n        <div className=\"body\">\r\n        \t<PublicRoute restricted component={Login} path=\"/login\" />\r\n        \t<PublicRoute restricted component={SignUp} path=\"/signup\" />\r\n        \t<PublicRoute restricted component={IdPw} path=\"/idpw\" />\r\n\t\t\t<Route component={Home} path=\"/\" exact={true} />\r\n\t\t\t<Route component={News} path=\"/news\" />\r\n\t\t\t<Route component={Forum} path=\"/forum\" />\r\n\t\t\t<Route component={Compile} path=\"/compiler\" /> \r\n\t\t\t<Route component={Qna} path=\"/qna\" exact={true} /> \r\n\t\t\t<Route component={Talk} path=\"/talk\" exact={true} /> \r\n\t\t\t<PrivateRoute component={Chat} path=\"/chat\" />\r\n\t\t\t<PublicRoute component={Post} path=\"/:name/post/:idx\" />\r\n\t\t\t<PrivateRoute component={Writing} path=\"/:name/writing\" />\r\n\t\t\t<PrivateRoute component={Writing} path=\"/:name/modify/:idx\" />\r\n\t\t\t<Route component={Board} path=\"/qna/search/:kind/:q\" /> \r\n\t\t\t<Route component={Board} path=\"/talk/search/:kind/:q\" />\r\n\t\t\t{/*<Route component={NotFound} path=\"/*\" />*/}\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nexport default Body;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Footer.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Post.js",["112","113"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../css/Components.css';\r\nimport Axios from 'axios';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { Link } from \"react-router-dom\";\r\nimport Prism from \"../lib/PrismImport\";\r\n\r\nconst editorConfiguration = {\r\n    simpleUpload: { uploadUrl: '/upload'},\r\n    toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Post(props) {\r\n    const [post, setPost] = useState([]);\r\n    const name = props.match.params.name;\r\n    const [user, setUser] = useState();\r\n    const idx = props.match.params.idx;\r\n    const [mod, setMod] = useState('');\r\n    const [modIdx, setModIdx] = useState('');\r\n    const [mode, setMode] = useState(false);\r\n    const [comment, setComment] = useState([]);\r\n    const [commentnum, setCommentnum] = useState(0);\r\n    const [postcommentN, setpostCommentN] = useState(0);\r\n\r\n    // 그냥 새로 부르는거임 들어가면\r\n    Axios.post('http://localhost:8000/board/getPost', {\r\n        idx: idx,\r\n        name : name\r\n    }).then((res) => {\r\n        setPost(res.data[0]);\r\n    });\r\n\r\n    const loadComment = useCallback( async () => {\r\n        if (name === \"qna\") {\r\n            Axios.post('http://localhost:8000/board/getqna_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism();\r\n            })\r\n            Axios.post('http://localhost:8000/board/getqna_total', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setCommentnum(response.data[0].Total);\r\n            })\r\n        } else if (name === \"talk\") {\r\n            Axios.post('http://localhost:8000/board/gettalk_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism();\r\n            })\r\n            Axios.post('http://localhost:8000/board/gettalk_total', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setCommentnum(response.data[0].Total);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    const getUser = useCallback(() => {\r\n        Axios.get(\"http://localhost:8000/login\").then((res) => {\r\n            if(res.data.loggedIn === true) {\r\n                setUser(res.data.user[0].id);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const delBtn_c = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('comment-idx');\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna_c', { idx: didx })\r\n                Axios.post('http://localhost:8000/board/deleteqna_cN', {\r\n                   idx: idx,\r\n                   commentN: (postcommentN-1)\r\n               }).then((response) => { loadComment(); })\r\n            } else if (name === \"talk\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk_c', { idx: didx })\r\n                Axios.post('http://localhost:8000/board/deletetalk_cN', {\r\n                   idx: idx,\r\n                   commentN: (postcommentN-1)\r\n               }).then((response) => { loadComment(); })\r\n            alert(\"삭제 되었습니다!\");\r\n            }\r\n            setpostCommentN(postcommentN-1);\r\n        }\r\n    }\r\n\r\n    const modBtn_c = (e) => {\r\n        setMode(true);\r\n        setMod(e.target.getAttribute('comment-contents'));\r\n        setModIdx(e.target.getAttribute('comment-idx'));\r\n    }\r\n\r\n    const updateBtn_c = (e) => {\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            const midx = modIdx;\r\n            console.log(midx);\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/updateqna_c', {\r\n                    idx: midx,\r\n                    contents: mod\r\n                }).then(() => { loadComment(); })\r\n            } else if (name === \"talk\") {\r\n                Axios.post('http://localhost:8000/board/updatetalk_c', {\r\n                    idx: midx,\r\n                    contents: mod\r\n                }).then(() => { loadComment(); })\r\n            }\r\n            alert(\"수정 되었습니다!\");\r\n        }\r\n        setMod('');\r\n        setMode(false);\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        if(mod.length !== 0){\r\n            setCommentnum(post.commentN+1);\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/postqna', {\r\n                    bid: idx,\r\n                    writer: user,\r\n                    contents:mod,\r\n                    img: null,\r\n                    good: 8,\r\n                    commentN: (postcommentN+1)\r\n                }).then(() => {\r\n                    loadComment();\r\n                })\r\n                .catch((error) => { console.log(error) });\r\n            } else {\r\n                Axios.post('http://localhost:8000/board/posttalk', {\r\n                    bid: idx,\r\n                    writer: user,\r\n                    contents:mod,\r\n                    img: null,\r\n                    good: 8,\r\n                    commentN: (postcommentN+1)\r\n                }).then(() => {\r\n                    loadComment();\r\n                })\r\n                .catch((error) => { console.log(error) });\r\n            }\r\n            alert(\"작성 되었습니다.\");\r\n            setpostCommentN(postcommentN+1);\r\n            setMod('');\r\n            loadComment();     \r\n        }else{\r\n            alert(\"댓글을 입력해주세요.\");\r\n        }\r\n    }\r\n    \r\n    const onptbHandler = (event) => {\r\n        if (name === \"talk\")\r\n            props.history.push(\"/talk\")\r\n        else\r\n            props.history.push(\"/qna\")\r\n    }\r\n\r\n    const handleCkeditorState = (event, editor) => {\r\n        const data = editor.getData();\r\n        setMod(data);\r\n    }\r\n\r\n    const hitUpdate = () => {\r\n        Axios.post('http://localhost:8000/board/getHit',{\r\n           idx: idx,\r\n           name: name\r\n       }).then((response) => {})\r\n    }\r\n\r\n    const delBtn = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('post-idx');\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna', {\r\n                    idx: didx\r\n                }).then(() => {\r\n                    props.history.push(\"/qna\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            } else if (name === \"talk\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk', {\r\n                    idx: didx\r\n                }).then(() => {\r\n                    props.history.push(\"/talk\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n        Prism();\r\n    \r\n        setpostCommentN(post.commentN);\r\n        loadComment();\r\n    }, [getUser, loadComment, post.commentN]);\r\n\r\n    useEffect(() => {\r\n        hitUpdate();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className='form-wrapper'>\r\n                {\r\n                    // data setup 됐을 때 자연스럽게 불러주려고 이렇게 했음 css 수정 필요할 듯\r\n                    (!Array.isArray(post)) && \r\n                    <div>\r\n                        <div className=\"question-header\">\r\n                            <p className=\"bolder\">{post.title}</p>\r\n                        </div>\r\n                        <div className=\"grid\">\r\n                            <div>\r\n                                <span>Asked</span>\r\n                                <time>{post.rdate}</time>\r\n                            </div>\r\n                            <div>\r\n                                <span>Viewed</span>\r\n                                {post.hit} times\r\n                            </div>\r\n                            \r\n                            { // tag 불러와서 저장해서 넘기세요 writing으로 수정해야하니까\r\n                            (props.id === post.writer) && //로그인 한 사람이 글 작성자라면 글 삭제 및 수정 가능\r\n                            <div className=\"writer\">\r\n                                <Link\r\n                                to={{\r\n                                   pathname : `/${props.match.params.name}/modify/${post.idx}`,\r\n                                   state: {\r\n                                        key : post.idx,\r\n                                        idx : post.idx,\r\n                                        title : post.title,\r\n                                        contents : post.contents,\r\n                                        tag : post.tag,\r\n                                        category : post.category,\r\n                                        name : name\r\n                                    }\r\n                                }}>\r\n                                <button className=\"modifyBtn\"> 수정 </button></Link>\r\n                                <button className=\"deleteBtn\" onClick={delBtn} post-idx={post.idx}> 삭제 </button>\r\n                            </div>}\r\n                        </div>\r\n                        <br/>\r\n                        <hr />\r\n                        <div className=\"question-body\">\r\n                            <div className=\"selctContents\" dangerouslySetInnerHTML={ {__html: post.contents} }></div>\r\n                            <div className=\"user-info\">\r\n                                <span>asked {post.rdate} {post.writer}</span>\r\n                            </div>               \r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <p className=\"bold\">{commentnum}개의 답변</p>\r\n                        {\r\n                            comment.map(element =>(\r\n                                <div className=\"question-answer\" key={element.idx}>\r\n                                    <div className=\"selctContents\" dangerouslySetInnerHTML={{__html: element.contents}}></div>                    \r\n                                    <div className=\"user-info\"> \r\n                                         <span>answered {element.cdate} {element.writer}</span>\r\n                                        {(props.id === post.writer)&&(props.id !== element.writer) && //로그인 한 사람이 글 작성자라면 댓글 삭제만 가능\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>}\r\n                                        {(props.id === element.writer) && //로그인 한 사람이 댓글 작성자라면 댓글 삭제 및 수정 가능\r\n                                        <div>\r\n                                            <button className=\"modifyBtn\" onClick={modBtn_c} comment-contents={element.contents} comment-idx={element.idx}> 수정 </button>\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>\r\n                                        </div>}\r\n\r\n                                    </div>   \r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                        <p className=\"bold\">댓글작성</p>\r\n                        { props.id ?\r\n                            <CKEditor\r\n                            editor={ Editor }\r\n                            config={ editorConfiguration }\r\n                            data= {mod}\r\n                            onChange={ handleCkeditorState }\r\n                            /> : \r\n                            <CKEditor\r\n                            editor={ Editor }\r\n                            config={ editorConfiguration }\r\n                            data= {\"로그인 후 이용해주세요\"}\r\n                            />\r\n                        }\r\n                        { mode? <button className=\"modify-button\" onClick={updateBtn_c}>수정</button> : props.id &&<button className=\"submit-button\" onClick={onSubmitHandler}>작성</button> }\r\n                        <button className=\"toboard\" onClick={onptbHandler}>목록으로</button>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Board.js",["114","115","116","117","118"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Components.css\";\r\nimport striptags from 'striptags';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nfunction Board(props) {\r\n\t// 페이징\r\n\tconst [viewContent, setViewContent] = useState([]);\r\n\tconst [curPage, setcurPage] = useState(0);\r\n\tconst [lastPage, setlastPage] = useState(0);\r\n\tconst [minbtn, setMinBtn] = useState(0);\r\n\tconst [maxbtn, setMaxBtn] = useState(0);\r\n\tlet array = [];\r\n\r\n\tconst [generalSearch, setGeneralSearch] = useState('');\r\n\tconst [searchValue, setSearchValue] = useState([]);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [searchtotal, setSearchTotal] = useState(0);\r\n\tconst onGeneralSearchHandler = (event) => {setGeneralSearch(event.currentTarget.value);}\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [tags, setTags] = useState([]);\r\n\tlet tagarray = [];\r\n\r\n\tconst [tag, setTag] = useState([]);\r\n\r\n\tlet name = '';\r\n\tif(props.location !== undefined){\r\n\t\tname = props.match.path.split(\"/\").[1];\r\n\t}else{\r\n\t\tname = props.match.split(\"/\").[1];\r\n\t}\r\n\r\n    let search = \"태그\";\r\n    if (name === \"talk\") search = \"카테고리\";\r\n\r\n    const loadList = async () => {\r\n    \tlet url = \"http://localhost:8000/board/getBoard/1/qna\";\r\n    \tif(name === \"talk\") url = 'http://localhost:8000/board/getBoard/1/talk';\r\n    \tawait Axios.get(url).then((res)=>{\r\n\t\t\tsetViewContent(res.data.model.boardList);\r\n\t\t\tsetcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setTotal(res.data.model.total);\r\n\t\t})\r\n    }\r\n\r\n    const loadSearch = async () => {\r\n    \tif (props.location !== undefined){\r\n\t        let value = props.match.params.q;\r\n\t        let kind = props.match.params.kind;\r\n\t\t\tif (name === \"qna\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/searchqna', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0){\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\r\n\r\n\t\t\t} else {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/searchtalk', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0)\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\t   \r\n  \r\n\r\n    const onClick = async (e) => {\r\n    \tconst idxs = e.target.dataset.idx;\r\n    \tlet url = \"http://localhost:8000/board/getBoard/\"+idxs+\"/qna\";\r\n    \tif(name === \"talk\") url = \"http://localhost:8000/board/getBoard/\"+idxs+\"/talk\";\r\n    \t\r\n        await Axios.get(url).then((res) => {\r\n            setcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setViewContent(res.data.model.boardList);\r\n            setTotal(res.data.model.total);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n    \tloadList();\r\n    \tloadSearch();\r\n\t\treturn () => setLoading(false);\r\n\t}, [searchValue])\r\n    \r\n    const searchBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(generalSearch.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/general/${generalSearch}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/general/${generalSearch}`);\r\n\t\t//props.history.push(`/${name}/search/${generalSearch}`);\r\n\t}\r\n\r\n    const searchTagsBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(tag.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/tags/${tag}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/tags/${tag}`);\r\n\t\t//props.history.push(`/${name}/search/${generalSearch}`);\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n    return (   \t\r\n        <div className=\"menu__container\">\r\n\t\t\t<h2>{name.toUpperCase()}</h2>\t\t\r\n\t\t\t<div className=\"board_top\">\r\n\t\t\t\t{((viewContent.length !== 0)&&(searchValue.length === 0)) ? \r\n\t\t\t\t\t((props.location !== undefined) ? <p>총 게시물 0개 </p> : <p>총 게시물 {total}개</p>)\r\n\t\t\t\t: <p>총 게시물 {searchtotal}개</p>}\r\n\t\t\t\t<ul className=\"board_list\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"검색\" onChange={onGeneralSearchHandler}/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t<button type=\"submit\" onClick={searchBtn}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"tagSearch\">\r\n\t\t\t\t<div className=\"tagTitle left\">{search}검색</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<div className=\"tagInput left\">\r\n\t\t\t\t\t\t<TagBox change={setOnTag}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" onClick={searchTagsBtn}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className=\"tagBox\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"board_contents\">\r\n\t\t\t{(props.location !== undefined) ?\r\n\t\t\t\t((searchValue.length === 0) ? <div className=\"list\"><p><strong>\"{props.match.params.q}\"</strong>와(과) 일치하는 검색 결과가 없습니다</p></div> \r\n\t\t\t\t: List(searchValue, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t:\r\n\t\t\t\t((viewContent.length === 0) ? <div className=\"list\"><p>등록된 게시물이 없습니다</p></div>\r\n\t\t\t\t: List(viewContent, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<Link to={`/${name}/writing`}>\r\n\t\t\t\t<button className=\"writeBtn\">글쓰기</button>\r\n\t\t\t</Link>\r\n\r\n\t\t\t{/* 페이징 */}\r\n\t\t\t<div className=\"paging\">\r\n\t\t\t\t{ (curPage !== 1) && (<button type=\"button\" onClick={onClick} data-idx={curPage-1}>이전</button>) }\r\n\t\t\t\t{\r\n\t\t\t\t\t(() => {\r\n\t\t\t\t\t\tfor(let i = minbtn; i < maxbtn; i++) {\r\n\t\t\t\t\t\t\tif(curPage === i) array.push(<button type=\"button\" className=\"checkBtn\" key={i} onClick={onClick} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\telse array.push(<button type=\"button\" onClick={onClick} key={i} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\tif(i >= lastPage) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (array);\r\n\t\t\t\t\t})()\r\n\t\t\t\t}\r\n\t\t\t\t{ (curPage < lastPage) && (<button type=\"button\" onClick={onClick} data-idx={curPage+1}>다음</button>) }\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nfunction List(mapper, total, searchtotal, name, curPage, viewContent, searchValue){\r\n\treturn(\r\n\t\tmapper.map((element,i) =>(\r\n\t\t\t<div className=\"list\" key={element.idx}>\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t{(viewContent.length !== 0)&&(searchValue.length === 0) ? <h3>Q.{total - i - ((curPage-1)*5)}</h3> : <h3>Q.{searchtotal - i - ((curPage-1)*5)}</h3>}\r\n\r\n\t\t\t\t\t<p>답변 - {element.commentN}개</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: `/${name}/post/${element.idx}`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>{element.title}</h3>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<p>{striptags(element.contents)}</p>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"tags left\">\r\n\t\t\t\t\t\t\t{element.category && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.category1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category1}`}>{element.category1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category2}`}>{element.category2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category3}`}>{element.category3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{element.tag && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.tag1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag1}`}>{element.tag1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag2}`}>{element.tag2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag3}`}>{element.tag3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"info right\">\r\n\t\t\t\t\t\t\t<p>작성자 : <span className=\"writer\">{element.writer}</span> &nbsp;&nbsp;조회수 : <span className=\"hit\">{element.hit}</span></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t))\r\n\t);\r\n}\r\n\r\nexport default Board;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\Writing.js",["119"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../css/Components.css';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nconst editorConfiguration = {\r\n   simpleUpload: {uploadUrl: '/upload'},\r\n   toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Writing(props) {\r\n\tconst [post, setPost] = useState(props.location.state ? props.location.state : JSON.parse(localStorage.getItem('prev')));\r\n\tconst [title,setTitle] = useState('');\r\n\tconst [contents,setContent] = useState('');\r\n\tconst [tag, setTag] = useState([]);\r\n\tconst onTitleHandler = (event) => {setTitle (event.currentTarget.value);}\r\n\t//const onTagHandler = (event) => {setTag (event.currentTarget.value); }\r\n\tconst [user, setUser] = useState();\r\n\r\n\tAxios.defaults.withCredentials = true;\r\n\r\n\tconst getUser = useCallback(() => {\r\n\t\tAxios.get(\"http://localhost:8000/login\").then((res) => {\r\n\t\t\tif(res.data.loggedIn === true) {\r\n\t\t\t\tsetUser(res.data.user[0].id);\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst loadPrevData = useCallback((e) => {\r\n\t\tsetTitle(post.title);\r\n\t\tsetContent(post.contents);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUser();\r\n\t\tif (props.location.state !== undefined) {\r\n\t\t\tlocalStorage.setItem(\"prev\", JSON.stringify(props.location.state));\r\n\t\t}\r\n\t\tif (props.match.params.idx !== undefined) {\r\n\t\t\tloadPrevData();\r\n\t\t} else {\r\n\t\t\treset();\r\n\t\t}\r\n\t}, [getUser, loadPrevData, props.location.state, props.match.params.idx])\r\n\r\n\tconst reset = (e) => {\r\n\t\tsetPost('');\r\n\t\tsetTitle('');\r\n\t\tsetTag('');\r\n\t}\r\n\r\n\tconst updateBtn = (e) => {\r\n\t\tif (window.confirm(\"수정하시겠습니까?\")) {\r\n\t\t\tconst idx = e.target.getAttribute('comment-idx');\r\n\r\n\t\t\tif (post.name === \"qna\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/updateqna', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('http://localhost:8000/board/update_tag', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (post.name === \"talk\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/updatetalk', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('http://localhost:8000/board/update_category', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCkeditorState = (event, editor) => {\r\n\t\tconst data = editor.getData();\r\n\t\tsetContent(data);\r\n\t}\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tif(title.length === 0)\r\n\t\t\talert(\"제목을 입력해주세요.\");\r\n\t\telse if(contents.length === 0)\r\n\t\t\talert(\"내용을 입력해주세요.\");\r\n\t\telse{\r\n\t\t\tif (props.match.params.name === \"qna\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/writing_qna', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\timg: null,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('http://localhost:8000/board/writing_tag', {\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (props.match.params.name === \"talk\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/writing_talk', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\timg: null,\r\n\t\t\t\t\tcategory: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('http://localhost:8000/board/writing_category', {\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\r\n\tconst wtobBtnHandler = (event) => {\r\n\t\tprops.history.push(`/${props.match.params.name}`)\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"Writing\">\r\n\t\t\t<p className=\"bolder\">Ask a public question</p>\r\n\t\t\t<div className='form-wrapper'>\r\n\t\t\t\t<p className=\"bold\">제목</p>\r\n\t\t\t\t<input className=\"title-input\" type='text' onChange={onTitleHandler} name='title' value={title}/>\r\n\t\t\t\t<p className=\"bold\">내용</p>                \r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ Editor }\r\n\t\t\t\t\tconfig={ editorConfiguration }\r\n\t\t\t\t\tdata= {contents}\r\n\t                onChange={ handleCkeditorState }    \r\n\t                name = 'contents'          \r\n\t\t        /> \r\n\t\t        <p className=\"bold\">태그</p>\r\n\r\n\t\t        <TagBox change={setOnTag}/>\r\n\t            {/*<input className=\"tag-input\" type='text' onChange={onTagHandler} name = 'tag' value={tag} placeholder=\"태그는 3개 제한 입니다.\"/>*/}\r\n\t        </div>\r\n\t            {(post) ? <button className=\"modify-button\" onClick={updateBtn} comment-idx={post.idx}>수정</button> : <button className=\"submit-button\" onClick={onSubmitHandler} >작성</button>}\r\n        \t\t<button className=\"toboard\" onClick={wtobBtnHandler} >목록으로</button>\r\n        </div>\r\n   );\r\n}\r\n\r\nexport default Writing;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\NotFound.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\SignUp.js",["120","121"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction SignUp(props) {\r\n\tconst [Name,setName] = useState(\"\");\r\n\tconst [Email,setEmail] = useState(\"\");\r\n\tconst [Id,setID] = useState(\"\");\r\n\tconst [Pw,setPW] = useState(\"\");\r\n\tconst [check, setCheck] = useState(false);\r\n\tconst onNameHandler = (event) => {setName (event.currentTarget.value)}\r\n\tconst onEmailHandler = (event) => {setEmail (event.currentTarget.value)}\r\n\tconst onIDHandler = (event) => {setID (event.currentTarget.value)}\r\n\tconst onPWHandler = (event) => {setPW (event.currentTarget.value)}\r\n\tconst [checkMsg, setCheckMsg] = useState(\"\");\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif(check === false) {\r\n\t\t\talert(\"아이디 중복 체크를 해주세요!\");\r\n\t\t} else {\r\n\t\t\tAxios.post('http://localhost:8000/join',\r\n\t\t\t{\r\n\t\t\t\tid: Id,\r\n\t\t\t\tpw: Pw,\r\n\t\t\t\temail : Email,\r\n\t\t\t\tname : Name\r\n\t\t\t}).then((res) => {\r\n\t\t\t\talert(\"가입 되었습니다.\");\r\n\t\t\t\tprops.history.push(\"/login\");\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkId = (event) => {\r\n\t\tif(Id == \"\") alert(\"아이디를 입력하세요\");\r\n\t\telse {\r\n\t\t\tAxios.post('http://localhost:8000/idCheck',\r\n\t\t\t{\r\n\t\t\t\tid : Id\r\n\t\t\t}).then((res) => {\r\n\t\t\t\tif(res.data === \"exist\") {\r\n\t\t\t\t\tsetCheckMsg(\"이미 존재하는 아이디 입니다. 다른 아이디를 입력해주세요.\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetCheckMsg(\"사용 가능한 아이디 입니다.\");\r\n\t\t\t\t\tsetCheck(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"joinBox\">\r\n\t\t\t\t<form method=\"post\" onSubmit={onSubmitHandler}>\r\n\t\t\t\t\t<h3>회원가입</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} id=\"name\" onChange={onNameHandler} name='name' required />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email' required />\r\n\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><input className=\"ID-input\" type='text' placeholder='아이디' value={Id} onChange={onIDHandler} name='id' required /></li>\r\n\t\t\t\t\t\t<li><button type=\"button\" id=\"check\" onClick={checkId}>중복체크</button></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<span>{ (checkMsg !== \"\") && (checkMsg) }</span>\r\n\r\n\t\t\t\t\t<label>비밀번호</label>\r\n\t\t\t\t\t<input className=\"PW-input\" type='password' placeholder='비밀번호' value={Pw} onChange={onPWHandler} name='pw' required />\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t\t\t<button className=\"joinBtn\"> 로그인</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<button className=\"joinBtn\" type=\"submit\">등록</button>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\IdPw.js",["122","123"],"import React, {useState} from \"react\";\r\nimport \"../css/Components.css\";\r\n\r\nfunction IdPw() {\r\n\r\n\tconst [Name,setName] = useState(\"\")\r\n\tconst [Email,setEmail] = useState(\"\")\r\n\tconst [ID,setID] = useState(\"\")\r\n\tconst [PW,setPW] = useState(\"\")\r\n\tconst onNameHandler = (event) => { setName (event.currentTarget.value) }\r\n\tconst onEmailHandler = (event) => { setEmail (event.currentTarget.value) }\r\n\tconst onIDHandler = (event) => { setID (event.currentTarget.value) }\r\n\tconst onPWHandler = (event) => { setPW (event.currentTarget.value) }\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<h3>아이디 찾기</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\t\t\t\t\t<button className=\"get-id\"> 찾기</button>\r\n\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>비밀번호 찾기</h3>\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<input className=\"ID-input\" type='text' placeholder='아이디' value={ID} onChange={onIDHandler} name='id'/>\r\n\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\r\n\t\t\t\t\t<button className=\"get-pw\"> 찾기</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default IdPw;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Login.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\News.js",["124","125","126"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Axios from 'axios';\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Components.css\";\r\nimport DatePicker, { registerLocale, setDefaultLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ko from 'date-fns/locale/ko'; \r\nregisterLocale('ko', ko);\r\n\r\nfunction News(props) {\r\n\tconst [news, setNews] = useState([]);\r\n\t//const [sum, setSum] = useState([]);\r\n\tconst [startDate, setStartDate] = useState(new Date('1-01-2009'));\r\n\tconst [endDate, setEndDate] = useState(new Date('1-01-2009'));\r\n\tconst [keyword, setKeyword] = useState('');\r\n\tconst [sum, setSum] = useState([{\r\n\t\tid: '',\r\n\t\tsum0: '',\r\n\t\tsum1: '',\r\n\t\tsum2: ''\r\n\t}]);\r\n\r\n\tconst convertDate = str => {\r\n\t\tstr = str.toString();\r\n\t\tlet parts = str.split(\" \");\r\n\t\tlet months = {\r\n\t\t\tJan: \"01\",\r\n\t\t\tFeb: \"02\",\r\n\t\t\tMar: \"03\",\r\n\t\t\tApr: \"04\",\r\n\t\t\tMay: \"05\",\r\n\t\t\tJun: \"06\",\r\n\t\t\tJul: \"07\",\r\n\t\t\tAug: \"08\",\r\n\t\t\tSep: \"09\",\r\n\t\t\tOct: \"10\",\r\n\t\t\tNov: \"11\",\r\n\t\t\tDec: \"12\"\r\n\t\t};\r\n\t\treturn parts[3] + months[parts[1]] + parts[2];\r\n\t};\r\n\r\n\tconst ExampleCustomInput = ({ value, onClick }) => (\r\n\t\t<button className=\"example-custom-input\" onClick={onClick}>\r\n\t\t\t{value}\r\n\t\t</button>\r\n\t);\r\n\r\n\tconst getNewsBtn = (e) => {\r\n\t\tsetNews([]);\r\n\t\tsetSum([]);\r\n\t\tsetKeyword('');\r\n\t\tAxios.post('http://localhost:8000/getNews', {\r\n\t\t\tstart : convertDate(startDate),\r\n\t\t\tend : convertDate(endDate)\r\n\t\t}).then((res) => {\r\n\t\t\tsetNews(res.data);\r\n\t\t\tsetKeyword(res.data[0]);\r\n\r\n\t\t})\r\n\t}\r\n\tconsole.log(\"news : \", news);\r\n\tconsole.log(\"keyword : \", keyword);\r\n\r\n\tconst getSumBtn = (e) => {\r\n\t\t\r\n\t\tAxios.post('http://localhost:8000/getSum', {\r\n\t\t\tparagraph: e.target.getAttribute('paragraph')\r\n\t\t}).then((res) => {\r\n\t\t\tsetSum([\r\n\t\t\t\t...sum,\r\n\t\t\t\t{\r\n\t\t\t\tid: e.target.getAttribute('sum_idx'),\r\n\t\t\t\tsum0: res.data[0].sum,\r\n\t\t\t\tsum1: res.data[1].sum,\r\n\t\t\t\tsum2: res.data[2].sum\r\n\t\t\t}]);\r\n\t\t})\r\n\t}\r\n\r\n\tconst delSum = (e) => {\r\n\t\tsetSum(sum.filter(sum => parseInt(sum.id) !== parseInt(e.target.getAttribute('del_idx'))));\r\n\t}\r\n\tconsole.log(\"sum : \", sum);\r\n\r\n\treturn (   \t\r\n        <div className=\"menu__container\">\r\n\t\t\t<h2>NEWS</h2>\t\t\r\n\t\t\t<div className=\"board_top\">\r\n\t\t\t\t{news.length !== 0 ?\r\n\t\t\t\t\t<p>총 게시물 {news.length - 1}개 </p>\r\n\t\t\t\t\t:<p>총 게시물 {news.length}개 </p>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"tagSearch\">\r\n\t\t\t\t<div className=\"tagTitle left\">과거 뉴스</div>\r\n\t\t\t\t<div className=\"tagTitle left\">최신 뉴스</div>\r\n\t\t\t</div>\r\n\t\r\n\t\t\t<div className=\"newsSearch\">\r\n\t\t\t\t<ul className=\"keywordSearch\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tselected={startDate}\r\n\t\t\t\t\t\t\tonChange={date => setStartDate(date)}\r\n\t\t\t\t\t\t\tshowYearDropdown\r\n\t\t\t\t\t\t\tdateFormatCalendar=\"MMMM\"\r\n\t\t\t\t\t\t\tdateFormat=\"yyyy년 MM월 dd일 ▼\"\r\n\t\t\t\t\t\t\tminDate={new Date('1-01-2009')}\r\n\t\t\t\t\t\t\tmaxDate={new Date('12-27-2018')}\r\n\t\t\t\t\t\t\tyearDropdownItemNumber={15}\r\n\t\t\t\t\t\t\tscrollableYearDropdown\r\n\t\t\t\t\t\t\tlocale=\"ko\"\r\n\t\t\t\t\t\t\tcustomInput={<ExampleCustomInput />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li><p>—</p></li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<DatePicker\r\n\t\t\t\t\t\t\tselected={endDate}\r\n\t\t\t\t\t\t\tonChange={date => setEndDate(date)}\r\n\t\t\t\t\t\t\tshowYearDropdown\r\n\t\t\t\t\t\t\tdateFormatCalendar=\"MMMM\"\r\n\t\t\t\t\t\t\tdateFormat=\"yyyy년 MM월 dd일 ▼\"\r\n\t\t\t\t\t\t\tminDate={new Date('1-01-2009')}\r\n\t\t\t\t\t\t\tmaxDate={new Date('12-27-2018')}\r\n\t\t\t\t\t\t\tyearDropdownItemNumber={15}\r\n\t\t\t\t\t\t\tscrollableYearDropdown\r\n\t\t\t\t\t\t\tlocale=\"ko\"\r\n\t\t\t\t\t\t\tcustomInput={<ExampleCustomInput />}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t<button type=\"submit\" onClick={getNewsBtn}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"1x\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t{keyword.length !== 0 &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h3>키워드 : {keyword}</h3>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t{news.length !== 0 &&\r\n\t\t\t\t<div className=\"line\"></div>\r\n\t\t\t}\r\n\t\t\t<div className=\"board_contents\">\r\n\t\t\t\t{news.length !== 0 &&\r\n\t\t\t\t\tnews.map((element, i) =>(\r\n\t\t\t\t\t\telement.length === undefined &&(\r\n\t\t\t\t\t\t\t<div className=\"newslist\" key={element.document_id}>\r\n\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t\t\t\t\t\t<p>{element.publisher}</p>\r\n\t\t\t\t\t\t\t\t\t\t<h5>{element.date}</h5>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"title left\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{element.title}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<p>작성자 : {element.author}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"summary right\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<button type=\"submit\" onClick={getSumBtn} paragraph={element.paragraph} sum_idx={i}>요약</button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t{sum.length !== 0 &&(\r\n\t\t\t\t\t\t\t\t\tsum.map((el) =>(\r\n\t\t\t\t\t\t\t\t\t\tparseInt(el.id) === i &&(\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"sumdiv\">\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={delSum} del_idx={el.id}>X</button>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>1 : {el.sum0}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>2 : {el.sum1}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<p>3 : {el.sum2}</p>\r\n\t\t\t\t\t\t\t\t\t\t\t<button onClick={() => window.open(`${element.link}`, '_blank')}>뉴스 더 보기</button>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t)))\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t))\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default News;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Forum.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Qna.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Compile.js",["127","128","129","130"],"import \"../css/Menu.css\";\r\nimport React, { Component, useState } from \"react\";\r\n\r\nfunction Compile() {\r\n  const[value, setValue] = useState();\r\n  const[output, setOutput] = useState(``);\r\n  //const[input, setInput] = useState(`/**********************************************************************\\n                            Online C Compiler.\\n         Write your code in this editor and press \\\"Run\\\" button.\\n***********************************************************************/\\n\\n#include <stdio.h>\\n\\nint main() {\\n\\n    printf( \\\"Hello World\\\\n\\\");\\n\\n    return 0;\\n}`); \r\n  const[input, setInput] = useState(``); \r\n  const[user_input, setUserInput] = useState(``);\r\n  const onInputHandler = (e) => { setInput( e.currentTarget.value); }\r\n  const onUserInputHandler = (e) => { setUserInput(e.currentTarget.value); }\r\n  const lanChange = (e) => { setValue(e.target.value); }\r\n  const clear = async (e) => { setInput(\"\"); setUserInput(\"\"); }\r\n  const run = async (e) => {\r\n    e.preventDefault();\r\n    if(value == \"html\") {\r\n      let outputText = document.getElementById(\"output\");\r\n      let tests = \"\";\r\n      tests += input;\r\n\r\n      outputText.innerHTML = tests;\r\n    } else {\r\n      let outputText = document.getElementById(\"output\");\r\n      outputText.innerHTML = \"\";\r\n      outputText.innerHTML += \"Creating Submission ...\\n\";\r\n      const response = await fetch(\r\n        \"https://judge0-extra.p.rapidapi.com/submissions\",\r\n        {   method: \"POST\",\r\n          headers: {\r\n                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\", //\"judge0-extra.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n                    \"content-type\": \"application/json\",\r\n                    accept: \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                  source_code: input,\r\n                  stdin: user_input,\r\n                  language_id: value\r\n                }),\r\n            }\r\n          );\r\n      outputText.innerHTML += \"Submission Created ...\\n\";\r\n      const jsonResponse = await response.json();\r\n\r\n      let jsonGetSolution = {\r\n        status: { description: \"Queue\" },\r\n        stderr: null,\r\n        compile_output: null,\r\n      };\r\n\r\n      while (\r\n        jsonGetSolution.status.description !== \"Accepted\" &&\r\n        jsonGetSolution.stderr == null &&\r\n        jsonGetSolution.compile_output == null\r\n        ){\r\n        outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\r\n      if (jsonResponse.token) {\r\n        let url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\r\n\r\n        const getSolution = await fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n                       \"x-rapidapi-key\": \"010d0e431bmsh5ec04bcfb3323c6p179977jsn34a62e011152\", // Get yours for free at https://rapidapi.com/hermanzdosilovic/api/judge0\r\n                        //\"useQueryString\": true\r\n                        \"content-type\": \"application/json\",\r\n                    },\r\n                });\r\n        jsonGetSolution = await getSolution.json();\r\n      }\r\n    }\r\n    if (jsonGetSolution.stdout) {\r\n      const output = atob(jsonGetSolution.stdout);\r\n      outputText.innerHTML = \"\";\r\n      outputText.innerHTML += `Results :\\n${output}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\r\n    } else if (jsonGetSolution.stderr) {\r\n      const error = atob(jsonGetSolution.stderr);\r\n      outputText.innerHTML = \"\";\r\n      outputText.innerHTML += `\\n Error :${error}`;\r\n    } else {\r\n      const compilation_error = atob(jsonGetSolution.compile_output);\r\n      outputText.innerHTML = \"\";\r\n      outputText.innerHTML += `\\n Error :${compilation_error}`;\r\n    }\r\n  }\r\n};\r\n\r\n    return (\r\n      <div className=\"menu__container\">\r\n          <div className=\"compile\">\r\n              {/* <h2>Online Compiler\r\n                  <sub style={{fontSize: 'small'}}> Powered by \r\n                    <a href=\"https://bit.ly/2UCsWRM\">Judge0</a>\r\n                  </sub>\r\n               </h2>*/}\r\n              <ul className=\"left\">\r\n                <li>\r\n                  <div className=\"left\">Source Code</div>\r\n                  <div className=\"right\">\r\n                    Language &nbsp;&nbsp;\r\n                    <select onChange={lanChange}>    \r\n                       <option value=\"45\">Assembly (NASM 2.14.02)</option>\r\n                       <option value=\"46\">Bash (5.0.0)</option>\r\n                       <option value=\"47\">Basic (FBC 1.07.1)</option>\r\n                       <option value=\"html\">HTML</option>\r\n                       <option value=\"50\">C (GCC 9.2.0)</option>\r\n                       <option value=\"54\">C++ (GCC 9.2.0)</option>\r\n                       <option value=\"51\">C# (Mono 6.6.0.161)</option>\r\n                       <option value=\"86\">Clojure (1.10.1)   </option>\r\n                       <option value=\"55\">Common Lisp (SBCL 2.0.0)</option>\r\n                       <option value=\"56\">D (DMD 2.089.1)</option>\r\n                       <option value=\"44\">Executable</option>\r\n                       <option value=\"19\">Crystal (0.23.1)</option>\r\n                       <option value=\"57\">Elixir (1.9.4)</option>\r\n                       <option value=\"58\">Erlang (OTP 22.2)</option>\r\n                       <option value=\"59\">Fortran (GFortran 9.2.0)</option>\r\n                       <option value=\"60\">Go (1.13.5)</option>\r\n                       <option value=\"61\">Haskell (GHC 8.8.1)</option>\r\n                       <option value=\"25\">Insect (5.0.0)</option>\r\n                       <option value=\"62\">Java (OpenJDK 13.0.1)</option>\r\n                       <option value=\"63\">JavaScript (Node.js 12.14.0)</option>\r\n                       <option value=\"64\">Lua (5.3.5)</option>\r\n                       <option value=\"66\">Octave (5.1.0)</option>\r\n                       <option value=\"67\">Pascal (FPC 3.0.4)</option>\r\n                       <option value=\"68\">PHP(7.4.1)</option>\r\n                       <option value=\"43\">Plain Text</option>\r\n                       <option value=\"69\">Prolog (GNU Prolog 1.4.5)</option>\r\n                       <option value=\"71\">Python (3.8.1)</option>\r\n                       <option value=\"72\">Ruby (2.7.0)</option>\r\n                       <option value=\"73\">Rust (1.40.0)</option>\r\n                       <option value=\"74\">TypeScript (3.7.4)</option>\r\n                    </select>\r\n                  </div>\r\n                </li>\r\n                <li><textarea onChange={onInputHandler} id=\"source\" value={input}/></li>\r\n                <li></li>\r\n                <li>\r\n                  \r\n                </li>\r\n                <li><h4>Input</h4></li>\r\n                <li><textarea onChange={onUserInputHandler} id=\"input\" value={user_input} /></li>\r\n                <li><button onClick={run} id=\"run\" >Run (Ctrl + Enter)</button> <button onClick={clear} id=\"clear\" >Clear</button></li>\r\n              </ul>\r\n              \r\n              <ul className=\"compile_output\">\r\n                <li><h4>Result</h4></li>\r\n                <li><div id=\"output\" defaultValue={\"\"}> </div></li>\r\n              </ul>\r\n          </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Compile;","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Talk.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Chat.js",["131","132"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport '../css/Components.css';\r\nimport \"../css/Menu.css\";\r\nimport Axios from 'axios';\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nfunction Chat(props) {\r\n   const [user, setUser] = useState();\r\n   const [messageList, setMessageList] = React.useState([]);\r\n   const [name, setName] = React.useState('');\r\n   const [value, setValue] = React.useState('');\r\n   const socket = socketIOClient('/');\r\n   const submit = (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n      socket.emit('send message', { name: name, message: value });\r\n      setValue(\"\");\r\n   };\r\n //    const onInputHandler = (e) => { setInput( e.currentTarget.value); }\r\n   // const onChatHandler = (e) => {\r\n      \r\n   // }\r\n   const getUser = useCallback(() => {\r\n        Axios.get(\"/login\").then((res) => {\r\n            if(res.data.loggedIn === true) {\r\n                setUser(res.data.user[0].id);\r\n            }\r\n        });\r\n\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getUser();        \r\n    }, [getUser]);\r\n\r\n    useEffect(() => {\r\n      socket.on('receive message', (message: { name: string, message: string }) => {\r\n         setMessageList(messageList => messageList.concat(message));\r\n      })\r\n    }, []);\r\n\r\n   return (\r\n      <div className=\"menu__container\" >            \r\n            <h2>Chatting</h2>       \r\n         <section className=\"chat-list\">\r\n            {messageList.map((item: Message, i: number) =>\r\n            <div key={i} className=\"message\">\r\n               <p className=\"username\">{item.name.toUpperCase()}</p>\r\n               <p className=\"message-text\">{item.message}</p>\r\n            </div>\r\n            )}\r\n         </section>\r\n         <form className=\"chat-form\" onSubmit={(e: FormEvent<HTMLFormElement>) => submit(e)}>\r\n            <div className=\"chat-inputs\">\r\n               <input type=\"text\" autoComplete=\"off\" onChange={(e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)} value={name} placeholder=\"유저이름\" />\r\n               <input type=\"text\" autoComplete=\"off\" onChange={(e: ChangeEvent<HTMLInputElement>) => setValue(e.target.value)} value={value} placeholder=\"메세지입력하기\" />\r\n            </div>\r\n            <button type=\"submit\">입력하기</button>\r\n         </form>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Chat;\r\n\r\n   ","C:\\Users\\goeun\\Desktop\\bg\\client\\src\\lib\\PublicRoute.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\routes\\Home.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\lib\\PrivateRoute.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\lib\\PrismImport.js",[],"C:\\Users\\goeun\\Desktop\\bg\\client\\src\\components\\TagBox.js",["133","134"],"import React, {useState, useCallback, useEffect } from \"react\";\r\nimport \"../css/Components.css\";\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n\t<div className=\"tagtest\">{tag}<button className=\"btntest\" onClick={() => onRemove(tag)}>x</button></div>\r\n));\r\n\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n\t<div>\r\n\t\t{tags.map(tag => (\r\n\t\t\t<TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n\t\t))}\r\n\t</div>\r\n));\r\n\r\nconst TagBox = ({change}) => {\r\n\tconst [input, setInput] = useState('');\r\n\tconst [localTags, setLocalTags] = useState([]);\r\n\r\n\tconst tagSet = (localTags) =>{\r\n\t\tchange(localTags);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\ttagSet(localTags);\r\n\t}, [localTags]);\r\n\r\n\tconst insertTag = useCallback(\r\n\t\ttag => {\r\n\t\t\tif(!tag) return;\r\n\t\t\tif(localTags.includes(tag)) return;\r\n\t\t\tif(localTags.length < 3){\r\n\t\t\t\tsetLocalTags([...localTags, tag]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\r\n\tconst onRemove = useCallback(\r\n\t\ttag => {\r\n\t\t\tsetLocalTags(localTags.filter(t => t !== tag));\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\r\n\tconst onChange = useCallback(e => {\r\n\t\tsetInput(e.target.value);\r\n\t}, []);\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\te => {\r\n\t\t\tinsertTag(input.trim());\r\n\t\t\tsetInput('');\r\n\t\t},\r\n\t\t[input, insertTag],\r\n\t);\r\n\r\n\tconst handleKeyPress = useCallback(e =>{\r\n\t\tif(e.keyCode === 32)\r\n\t\t\tonSubmit();\r\n\t})\t\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"tag-box\">\r\n\t\t\t<span className=\"tag-list left\">\r\n\t\t\t\t<TagList tags={localTags} onRemove={onRemove}/>\r\n\t\t\t</span>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"tag-input\"\r\n\t\t\t\tplaceholder=\"태그를 입력하세요\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonKeyDown={handleKeyPress}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagBox;",{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":19,"column":8,"nodeType":"141","messageId":"142","endLine":19,"endColumn":16},{"ruleId":"143","severity":1,"message":"144","line":60,"column":8,"nodeType":"145","endLine":60,"endColumn":10,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":205,"column":8,"nodeType":"145","endLine":205,"endColumn":10,"suggestions":"148"},{"ruleId":"139","severity":1,"message":"149","line":24,"column":9,"nodeType":"141","messageId":"142","endLine":24,"endColumn":16},{"ruleId":"139","severity":1,"message":"150","line":25,"column":9,"nodeType":"141","messageId":"142","endLine":25,"endColumn":13},{"ruleId":"139","severity":1,"message":"151","line":25,"column":15,"nodeType":"141","messageId":"142","endLine":25,"endColumn":22},{"ruleId":"139","severity":1,"message":"152","line":26,"column":6,"nodeType":"141","messageId":"142","endLine":26,"endColumn":14},{"ruleId":"143","severity":1,"message":"153","line":105,"column":5,"nodeType":"145","endLine":105,"endColumn":18,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"155","line":35,"column":5,"nodeType":"145","endLine":35,"endColumn":7,"suggestions":"156"},{"ruleId":"139","severity":1,"message":"157","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":39,"column":9,"nodeType":"160","messageId":"161","endLine":39,"endColumn":11},{"ruleId":"139","severity":1,"message":"162","line":9,"column":9,"nodeType":"141","messageId":"142","endLine":9,"endColumn":11},{"ruleId":"139","severity":1,"message":"163","line":13,"column":8,"nodeType":"141","messageId":"142","endLine":13,"endColumn":19},{"ruleId":"139","severity":1,"message":"157","line":1,"column":26,"nodeType":"141","messageId":"142","endLine":1,"endColumn":35},{"ruleId":"139","severity":1,"message":"164","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":14},{"ruleId":"139","severity":1,"message":"165","line":7,"column":38,"nodeType":"141","messageId":"142","endLine":7,"endColumn":54},{"ruleId":"139","severity":1,"message":"166","line":2,"column":17,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"139","severity":1,"message":"167","line":6,"column":9,"nodeType":"141","messageId":"142","endLine":6,"endColumn":15},{"ruleId":"139","severity":1,"message":"168","line":6,"column":17,"nodeType":"141","messageId":"142","endLine":6,"endColumn":26},{"ruleId":"158","severity":1,"message":"159","line":16,"column":14,"nodeType":"160","messageId":"161","endLine":16,"endColumn":16},{"ruleId":"139","severity":1,"message":"169","line":8,"column":11,"nodeType":"141","messageId":"142","endLine":8,"endColumn":15},{"ruleId":"143","severity":1,"message":"170","line":39,"column":8,"nodeType":"145","endLine":39,"endColumn":10,"suggestions":"171"},{"ruleId":"143","severity":1,"message":"172","line":26,"column":5,"nodeType":"145","endLine":26,"endColumn":16,"suggestions":"173"},{"ruleId":"143","severity":1,"message":"174","line":58,"column":25,"nodeType":"141","endLine":58,"endColumn":36},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'idx' and 'name'. Either include them or remove the dependency array.","ArrayExpression",["177"],"React Hook useEffect has a missing dependency: 'hitUpdate'. Either include it or remove the dependency array.",["178"],"'loading' is assigned a value but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'tagarray' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadList' and 'loadSearch'. Either include them or remove the dependency array.",["179"],"React Hook useCallback has missing dependencies: 'post.contents' and 'post.title'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'post.title'.",["180"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PW' is assigned a value but never used.","'onPWHandler' is assigned a value but never used.","'Link' is defined but never used.","'setDefaultLocale' is defined but never used.","'Component' is defined but never used.","'output' is assigned a value but never used.","'setOutput' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["181"],"React Hook useEffect has a missing dependency: 'tagSet'. Either include it or remove the dependency array.",["182"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [idx, name]",{"range":"195","text":"196"},"Update the dependencies array to be: [hitUpdate]",{"range":"197","text":"198"},"Update the dependencies array to be: [loadList, loadSearch, searchValue]",{"range":"199","text":"200"},"Update the dependencies array to be: [post.contents, post.title]",{"range":"201","text":"202"},"Update the dependencies array to be: [socket]",{"range":"203","text":"204"},"Update the dependencies array to be: [localTags, tagSet]",{"range":"205","text":"206"},[2256,2258],"[idx, name]",[7040,7042],"[hitUpdate]",[3359,3372],"[loadList, loadSearch, searchValue]",[1351,1353],"[post.contents, post.title]",[1270,1272],"[socket]",[661,672],"[localTags, tagSet]"]