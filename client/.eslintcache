[{"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\index.js":"1","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\App.js":"2","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Header.js":"3","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Body.js":"4","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Navigation.js":"5","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Footer.js":"6","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Writing.js":"7","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Post.js":"8","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\NotFound.js":"9","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Login.js":"10","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\SignUp.js":"11","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\News.js":"12","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Home.js":"13","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\IdPw.js":"14","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Forum.js":"15","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Talk.js":"16","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Hire.js":"17","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrivateRoute.js":"18","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Chat.js":"19","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PublicRoute.js":"20","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Qna.js":"21","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Board.js":"22","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\TagBox.js":"23","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrismImport.js":"24"},{"size":236,"mtime":1611237644637,"results":"25","hashOfConfig":"26"},{"size":516,"mtime":1611666897608,"results":"27","hashOfConfig":"26"},{"size":1170,"mtime":1612092410601,"results":"28","hashOfConfig":"26"},{"size":1742,"mtime":1612097208840,"results":"29","hashOfConfig":"26"},{"size":479,"mtime":1610973636522,"results":"30","hashOfConfig":"26"},{"size":226,"mtime":1611237644445,"results":"31","hashOfConfig":"26"},{"size":6233,"mtime":1612186949367,"results":"32","hashOfConfig":"26"},{"size":12563,"mtime":1612189098012,"results":"33","hashOfConfig":"26"},{"size":159,"mtime":1612008996939,"results":"34","hashOfConfig":"26"},{"size":1864,"mtime":1612092410644,"results":"35","hashOfConfig":"26"},{"size":2807,"mtime":1612092410656,"results":"36","hashOfConfig":"26"},{"size":277,"mtime":1611237644853,"results":"37","hashOfConfig":"26"},{"size":343,"mtime":1611237644770,"results":"38","hashOfConfig":"26"},{"size":1631,"mtime":1611237644791,"results":"39","hashOfConfig":"26"},{"size":201,"mtime":1612028154378,"results":"40","hashOfConfig":"26"},{"size":256,"mtime":1612008528051,"results":"41","hashOfConfig":"26"},{"size":208,"mtime":1611237644727,"results":"42","hashOfConfig":"26"},{"size":763,"mtime":1611836754200,"results":"43","hashOfConfig":"26"},{"size":211,"mtime":1611237644651,"results":"44","hashOfConfig":"26"},{"size":772,"mtime":1611836785965,"results":"45","hashOfConfig":"26"},{"size":273,"mtime":1612008514270,"results":"46","hashOfConfig":"26"},{"size":8401,"mtime":1612189098005,"results":"47","hashOfConfig":"26"},{"size":1661,"mtime":1612116247032,"results":"48","hashOfConfig":"26"},{"size":982,"mtime":1611749161876,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"9vgzwf",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\index.js",[],["106","107"],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\App.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Header.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Body.js",["108"],"import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Login from \"../routes/Login\";\r\nimport SignUp from \"../routes/SignUp\";\r\nimport IdPw from \"../routes/IdPw\";\r\nimport Home from \"../routes/Home\";\r\nimport News from \"../routes/News\";\r\nimport Forum from \"../routes/Forum\";\r\nimport Hire from \"../routes/Hire\";\r\nimport Qna from \"../routes/Qna\";\r\nimport Talk from \"../routes/Talk\";\r\nimport Chat from \"../routes/Chat\";\r\nimport Writing from \"../components/Writing\";\r\nimport Post from \"../components/Post\";\r\nimport \"../css/Body.css\";\r\nimport Board from \"./Board\";\r\nimport PublicRoute from \"../lib/PublicRoute\"\r\nimport PrivateRoute from \"../lib/PrivateRoute\"\r\nimport NotFound from \"./NotFound\";\r\nfunction Body() {\r\n    return (\r\n        <div className=\"body\">\r\n        \t<PublicRoute restricted component={Login} path=\"/login\" />\r\n        \t<PublicRoute restricted component={SignUp} path=\"/signup\" />\r\n        \t<PublicRoute restricted component={IdPw} path=\"/idpw\" />\r\n\t\t\t<Route component={Home} path=\"/\" exact={true} />\r\n\t\t\t<Route component={News} path=\"/news\" />\r\n\t\t\t<Route component={Forum} path=\"/forum\" />\r\n\t\t\t<Route component={Hire} path=\"/hire\" /> \r\n\t\t\t<Route component={Qna} path=\"/qna\" exact={true} /> \r\n\t\t\t<Route component={Talk} path=\"/talk\" exact={true} /> \r\n\t\t\t<PrivateRoute component={Chat} path=\"/chat\" />\r\n\t\t\t<PublicRoute component={Post} path=\"/:name/post/:idx\" />\r\n\t\t\t<PrivateRoute component={Writing} path=\"/:name/writing\" />\r\n\t\t\t<PrivateRoute component={Writing} path=\"/:name/modify/:idx\" />\r\n\t\t\t<Route component={Board} path=\"/qna/search/:kind/:q\" /> \r\n\t\t\t<Route component={Board} path=\"/talk/search/:kind/:q\" />\r\n\t\t\t{/*<Route component={NotFound} path=\"/*\" />*/}\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nexport default Body;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Navigation.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Footer.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Writing.js",["109"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../css/Components.css';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nconst editorConfiguration = {\r\n   simpleUpload: {uploadUrl: '/upload'},\r\n   toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Writing(props) {\r\n\tconst [post, setPost] = useState(props.location.state ? props.location.state : JSON.parse(localStorage.getItem('prev')));\r\n\tconst [title,setTitle] = useState('');\r\n\tconst [contents,setContent] = useState('');\r\n\tconst [tag, setTag] = useState([]);\r\n\tconst onTitleHandler = (event) => {setTitle (event.currentTarget.value);}\r\n\t//const onTagHandler = (event) => {setTag (event.currentTarget.value); }\r\n\tconst [user, setUser] = useState();\r\n\r\n\tAxios.defaults.withCredentials = true;\r\n\r\n\tconst getUser = useCallback(() => {\r\n\t\tAxios.get(\"http://localhost:8000/login\").then((res) => {\r\n\t\t\tif(res.data.loggedIn === true) {\r\n\t\t\t\tsetUser(res.data.user[0].id);\r\n\t\t\t}\r\n\t\t});\r\n\t}, []);\r\n\r\n\tconst loadPrevData = useCallback((e) => {\r\n\t\tsetTitle(post.title);\r\n\t\tsetContent(post.contents);\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetUser();\r\n\t\tif (props.location.state !== undefined) {\r\n\t\t\tlocalStorage.setItem(\"prev\", JSON.stringify(props.location.state));\r\n\t\t}\r\n\t\tif (props.match.params.idx !== undefined) {\r\n\t\t\tloadPrevData();\r\n\t\t} else {\r\n\t\t\treset();\r\n\t\t}\r\n\t}, [getUser, loadPrevData, props.location.state, props.match.params.idx])\r\n\r\n\tconst reset = (e) => {\r\n\t\tsetPost('');\r\n\t\tsetTitle('');\r\n\t\tsetTag('');\r\n\t}\r\n\r\n\tconst updateBtn = (e) => {\r\n\t\tif (window.confirm(\"수정하시겠습니까?\")) {\r\n\t\t\tconst idx = e.target.getAttribute('comment-idx');\r\n\r\n\t\t\tif (post.name === \"qna\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/updateqna', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('http://localhost:8000/board/update_tag', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (post.name === \"talk\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/updatetalk', {\r\n\t\t\t\t\tidx: idx,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2]\r\n\t\t\t\t}).then(() => {\r\n\t\t\t\t\talert(\"수정 되었습니다!\");\r\n\t\t\t\t\tAxios.post('http://localhost:8000/board/update_category', {\r\n\t\t\t\t\t\tidx: idx,\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleCkeditorState = (event, editor) => {\r\n\t\tconst data = editor.getData();\r\n\t\tsetContent(data);\r\n\t}\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tif(title.length === 0)\r\n\t\t\talert(\"제목을 입력해주세요.\");\r\n\t\telse if(contents.length === 0)\r\n\t\t\talert(\"내용을 입력해주세요.\");\r\n\t\telse{\r\n\t\t\tif (props.match.params.name === \"qna\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/writing_qna', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\timg: null,\r\n\t\t\t\t\ttag: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('http://localhost:8000/board/writing_tag', {\r\n\t\t\t            tag1:tag[0],\r\n\t\t\t            tag2:tag[1],\r\n\t\t\t            tag3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\r\n\t\t\t} else if (props.match.params.name === \"talk\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/writing_talk', {\r\n\t\t\t\t\twriter: user,\r\n\t\t\t\t\ttitle: title,\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\timg: null,\r\n\t\t\t\t\tcategory: tag[0]+\" \"+tag[1]+\" \"+tag[2],\r\n\t\t\t\t\thit: 0\r\n\t\t\t\t}).then((res) => { alert(\"작성 되었습니다.\");\r\n\t\t\t\t///////////qboard-tag 서로 idx 맞춰야함  - 그래야 삭제 가능 //나중에 두명 동시 작성 확인해보기\r\n\t\t\t        Axios.post('http://localhost:8000/board/writing_category', {\r\n\t\t\t            category1:tag[0],\r\n\t\t\t            category2:tag[1],\r\n\t\t\t            category3:tag[2]\r\n\t\t\t        }).then((res) => {console.log(tag);} );\r\n\t\t\t\t\tprops.history.push(`/${props.match.params.name}`);\r\n\t\t\t\t}).catch((error) => { console.log(error) });\r\n\t\t\t}\t\r\n\t\t}\r\n\t}\r\n\r\n\tconst wtobBtnHandler = (event) => {\r\n\t\tprops.history.push(`/${props.match.params.name}`)\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"Writing\">\r\n\t\t\t<p className=\"bolder\">Ask a public question</p>\r\n\t\t\t<div className='form-wrapper'>\r\n\t\t\t\t<p className=\"bold\">제목</p>\r\n\t\t\t\t<input className=\"title-input\" type='text' onChange={onTitleHandler} name='title' value={title}/>\r\n\t\t\t\t<p className=\"bold\">내용</p>                \r\n\t\t\t\t<CKEditor\r\n\t\t\t\t\teditor={ Editor }\r\n\t\t\t\t\tconfig={ editorConfiguration }\r\n\t\t\t\t\tdata= {contents}\r\n\t                onChange={ handleCkeditorState }    \r\n\t                name = 'contents'          \r\n\t\t        /> \r\n\t\t        <p className=\"bold\">태그</p>\r\n\r\n\t\t        <TagBox change={setOnTag}/>\r\n\t            {/*<input className=\"tag-input\" type='text' onChange={onTagHandler} name = 'tag' value={tag} placeholder=\"태그는 3개 제한 입니다.\"/>*/}\r\n\t        </div>\r\n\t            {(post) ? <button className=\"modify-button\" onClick={updateBtn} comment-idx={post.idx}>수정</button> : <button className=\"submit-button\" onClick={onSubmitHandler} >작성</button>}\r\n        \t\t<button className=\"toboard\" onClick={wtobBtnHandler} >목록으로</button>\r\n        </div>\r\n   );\r\n}\r\n\r\nexport default Writing;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Post.js",["110","111"],"import React, { useState, useEffect, useCallback } from 'react';\r\nimport '../css/Components.css';\r\nimport Axios from 'axios';\r\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\r\nimport Editor from 'ckeditor5-custom-build/build/ckeditor';\r\nimport { Link } from \"react-router-dom\";\r\nimport Prism from \"../lib/PrismImport\";\r\n\r\nconst editorConfiguration = {\r\n    simpleUpload: { uploadUrl: '/upload'},\r\n    toolbar: ['heading', '|', 'bold', 'italic', '|', 'link', 'blockquote', 'code', 'imageupload', 'codeblock', '|', 'numberedlist', 'bulletedlist', 'horizontalline', '|', 'undo', 'redo']\r\n};\r\n\r\nfunction Post(props) {\r\n    const [post, setPost] = useState([]);\r\n    const name = props.match.params.name;\r\n    const [user, setUser] = useState();\r\n    const idx = props.match.params.idx;\r\n    const [mod, setMod] = useState('');\r\n    const [modIdx, setModIdx] = useState('');\r\n    const [mode, setMode] = useState(false);\r\n    const [comment, setComment] = useState([]);\r\n    const [commentnum, setCommentnum] = useState(0);\r\n    const [postcommentN, setpostCommentN] = useState(0);\r\n\r\n    // 그냥 새로 부르는거임 들어가면\r\n    Axios.post('http://localhost:8000/board/getPost', {\r\n        idx: idx,\r\n        name : name\r\n    }).then((res) => {\r\n        setPost(res.data[0]);\r\n    });\r\n\r\n    const loadComment = useCallback( async () => {\r\n        if (name === \"qna\") {\r\n            Axios.post('http://localhost:8000/board/getqna_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism();\r\n            })\r\n            Axios.post('http://localhost:8000/board/getqna_total', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setCommentnum(response.data[0].Total);\r\n            })\r\n        } else if (name === \"talk\") {\r\n            Axios.post('http://localhost:8000/board/gettalk_c', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setComment(response.data);\r\n                Prism();\r\n            })\r\n            Axios.post('http://localhost:8000/board/gettalk_total', {\r\n                idx: idx\r\n            }).then((response) => {\r\n                setCommentnum(response.data[0].Total);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    const getUser = useCallback(() => {\r\n        Axios.get(\"http://localhost:8000/login\").then((res) => {\r\n            if(res.data.loggedIn === true) {\r\n                setUser(res.data.user[0].id);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const delBtn_c = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('comment-idx');\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna_c', { idx: didx })\r\n                Axios.post('http://localhost:8000/board/deleteqna_cN', {\r\n                   idx: idx,\r\n                   commentN: (postcommentN-1)\r\n               }).then((response) => { loadComment(); })\r\n            } else if (name === \"talk\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk_c', { idx: didx })\r\n                Axios.post('http://localhost:8000/board/deletetalk_cN', {\r\n                   idx: idx,\r\n                   commentN: (postcommentN-1)\r\n               }).then((response) => { loadComment(); })\r\n            alert(\"삭제 되었습니다!\");\r\n            }\r\n            setpostCommentN(postcommentN-1);\r\n        }\r\n    }\r\n\r\n    const modBtn_c = (e) => {\r\n        setMode(true);\r\n        setMod(e.target.getAttribute('comment-contents'));\r\n        setModIdx(e.target.getAttribute('comment-idx'));\r\n    }\r\n\r\n    const updateBtn_c = (e) => {\r\n        if (window.confirm(\"수정하시겠습니까?\")) {\r\n            const midx = modIdx;\r\n            console.log(midx);\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/updateqna_c', {\r\n                    idx: midx,\r\n                    contents: mod\r\n                }).then(() => { loadComment(); })\r\n            } else if (name === \"talk\") {\r\n                Axios.post('http://localhost:8000/board/updatetalk_c', {\r\n                    idx: midx,\r\n                    contents: mod\r\n                }).then(() => { loadComment(); })\r\n            }\r\n            alert(\"수정 되었습니다!\");\r\n        }\r\n        setMod('');\r\n        setMode(false);\r\n    }\r\n\r\n    const onSubmitHandler = (event) => {\r\n        if(mod.length !== 0){\r\n            setCommentnum(post.commentN+1);\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/postqna', {\r\n                    bid: idx,\r\n                    writer: user,\r\n                    contents:mod,\r\n                    img: null,\r\n                    good: 8,\r\n                    commentN: (postcommentN+1)\r\n                }).then(() => {\r\n                    loadComment();\r\n                })\r\n                .catch((error) => { console.log(error) });\r\n            } else {\r\n                Axios.post('http://localhost:8000/board/posttalk', {\r\n                    bid: idx,\r\n                    writer: user,\r\n                    contents:mod,\r\n                    img: null,\r\n                    good: 8,\r\n                    commentN: (postcommentN+1)\r\n                }).then(() => {\r\n                    loadComment();\r\n                })\r\n                .catch((error) => { console.log(error) });\r\n            }\r\n            alert(\"작성 되었습니다.\");\r\n            setpostCommentN(postcommentN+1);\r\n            setMod('');\r\n            loadComment();     \r\n        }else{\r\n            alert(\"댓글을 입력해주세요.\");\r\n        }\r\n    }\r\n    \r\n    const onptbHandler = (event) => {\r\n        if (name === \"talk\")\r\n            props.history.push(\"/talk\")\r\n        else\r\n            props.history.push(\"/qna\")\r\n    }\r\n\r\n    const handleCkeditorState = (event, editor) => {\r\n        const data = editor.getData();\r\n        setMod(data);\r\n    }\r\n\r\n    const hitUpdate = () => {\r\n        Axios.post('http://localhost:8000/board/getHit',{\r\n           idx: idx,\r\n           name: name\r\n       }).then((response) => {})\r\n    }\r\n\r\n    const delBtn = (e) => {\r\n        if (window.confirm(\"삭제하시겠습니까?\")) {\r\n            const didx = e.target.getAttribute('post-idx');\r\n            if (name === \"qna\") {\r\n                Axios.post('http://localhost:8000/board/deleteqna', {\r\n                    idx: didx\r\n                }).then(() => {\r\n                    props.history.push(\"/qna\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            } else if (name === \"talk\") {\r\n                Axios.post('http://localhost:8000/board/deletetalk', {\r\n                    idx: didx\r\n                }).then(() => {\r\n                    props.history.push(\"/talk\")\r\n                    alert(\"삭제 되었습니다!\");\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUser();\r\n        Prism();\r\n    \r\n        setpostCommentN(post.commentN);\r\n        loadComment();\r\n    }, [getUser, loadComment, post.commentN]);\r\n\r\n    useEffect(() => {\r\n        hitUpdate();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Post\">\r\n            <div className='form-wrapper'>\r\n                {\r\n                    // data setup 됐을 때 자연스럽게 불러주려고 이렇게 했음 css 수정 필요할 듯\r\n                    (!Array.isArray(post)) && \r\n                    <div>\r\n                        <div className=\"question-header\">\r\n                            <p className=\"bolder\">{post.title}</p>\r\n                        </div>\r\n                        <div className=\"grid\">\r\n                            <div>\r\n                                <span>Asked</span>\r\n                                <time>{post.rdate}</time>\r\n                            </div>\r\n                            <div>\r\n                                <span>Viewed</span>\r\n                                {post.hit} times\r\n                            </div>\r\n                            \r\n                            { // tag 불러와서 저장해서 넘기세요 writing으로 수정해야하니까\r\n                            (props.id === post.writer) && //로그인 한 사람이 글 작성자라면 글 삭제 및 수정 가능\r\n                            <div className=\"writer\">\r\n                                <Link\r\n                                to={{\r\n                                   pathname : `/${props.match.params.name}/modify/${post.idx}`,\r\n                                   state: {\r\n                                        key : post.idx,\r\n                                        idx : post.idx,\r\n                                        title : post.title,\r\n                                        contents : post.contents,\r\n                                        tag : post.tag,\r\n                                        category : post.category,\r\n                                        name : name\r\n                                    }\r\n                                }}>\r\n                                <button className=\"modifyBtn\"> 수정 </button></Link>\r\n                                <button className=\"deleteBtn\" onClick={delBtn} post-idx={post.idx}> 삭제 </button>\r\n                            </div>}\r\n                        </div>\r\n                        <br/>\r\n                        <hr />\r\n                        <div className=\"question-body\">\r\n                            <div className=\"selctContents\" dangerouslySetInnerHTML={ {__html: post.contents} }></div>\r\n                            <div className=\"user-info\">\r\n                                <span>asked {post.rdate} {post.writer}</span>\r\n                            </div>               \r\n                        </div>\r\n                        <hr/>\r\n                        \r\n                        <p className=\"bold\">{commentnum}개의 답변</p>\r\n                        {\r\n                            comment.map(element =>(\r\n                                <div className=\"question-answer\" key={element.idx}>\r\n                                    <div className=\"selctContents\" dangerouslySetInnerHTML={{__html: element.contents}}></div>                    \r\n                                    <div className=\"user-info\"> \r\n                                         <span>answered {element.cdate} {element.writer}</span>\r\n                                        {(props.id === post.writer)&&(props.id !== element.writer) && //로그인 한 사람이 글 작성자라면 댓글 삭제만 가능\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>}\r\n                                        {(props.id === element.writer) && //로그인 한 사람이 댓글 작성자라면 댓글 삭제 및 수정 가능\r\n                                        <div>\r\n                                            <button className=\"modifyBtn\" onClick={modBtn_c} comment-contents={element.contents} comment-idx={element.idx}> 수정 </button>\r\n                                            <button className=\"deleteBtn\" onClick={delBtn_c} comment-idx={element.idx}> 삭제 </button>\r\n                                        </div>}\r\n\r\n                                    </div>   \r\n                                </div>\r\n                            ))\r\n                        }\r\n\r\n                        <p className=\"bold\">댓글작성</p>\r\n                        { props.id ?\r\n                            <CKEditor\r\n                            editor={ Editor }\r\n                            config={ editorConfiguration }\r\n                            data= {mod}\r\n                            onChange={ handleCkeditorState }\r\n                            /> : \r\n                            <CKEditor\r\n                            editor={ Editor }\r\n                            config={ editorConfiguration }\r\n                            data= {\"로그인 후 이용해주세요\"}\r\n                            />\r\n                        }\r\n                        { mode? <button className=\"modify-button\" onClick={updateBtn_c}>수정</button> : props.id &&<button className=\"submit-button\" onClick={onSubmitHandler}>작성</button> }\r\n                        <button className=\"toboard\" onClick={onptbHandler}>목록으로</button>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\NotFound.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Login.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\SignUp.js",["112","113"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../css/Components.css\";\r\nimport Axios from 'axios';\r\n\r\n\r\nfunction SignUp(props) {\r\n\tconst [Name,setName] = useState(\"\");\r\n\tconst [Email,setEmail] = useState(\"\");\r\n\tconst [Id,setID] = useState(\"\");\r\n\tconst [Pw,setPW] = useState(\"\");\r\n\tconst [check, setCheck] = useState(false);\r\n\tconst onNameHandler = (event) => {setName (event.currentTarget.value)}\r\n\tconst onEmailHandler = (event) => {setEmail (event.currentTarget.value)}\r\n\tconst onIDHandler = (event) => {setID (event.currentTarget.value)}\r\n\tconst onPWHandler = (event) => {setPW (event.currentTarget.value)}\r\n\tconst [checkMsg, setCheckMsg] = useState(\"\");\r\n\r\n\tconst onSubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif(check === false) {\r\n\t\t\talert(\"아이디 중복 체크를 해주세요!\");\r\n\t\t} else {\r\n\t\t\tAxios.post('http://localhost:8000/join',\r\n\t\t\t{\r\n\t\t\t\tid: Id,\r\n\t\t\t\tpw: Pw,\r\n\t\t\t\temail : Email,\r\n\t\t\t\tname : Name\r\n\t\t\t}).then((res) => {\r\n\t\t\t\talert(\"가입 되었습니다.\");\r\n\t\t\t\tprops.history.push(\"/login\");\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tconst checkId = (event) => {\r\n\t\tif(Id == \"\") alert(\"아이디를 입력하세요\");\r\n\t\telse {\r\n\t\t\tAxios.post('http://localhost:8000/idCheck',\r\n\t\t\t{\r\n\t\t\t\tid : Id\r\n\t\t\t}).then((res) => {\r\n\t\t\t\tif(res.data === \"exist\") {\r\n\t\t\t\t\tsetCheckMsg(\"이미 존재하는 아이디 입니다. 다른 아이디를 입력해주세요.\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetCheckMsg(\"사용 가능한 아이디 입니다.\");\r\n\t\t\t\t\tsetCheck(true);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"joinBox\">\r\n\t\t\t\t<form method=\"post\" onSubmit={onSubmitHandler}>\r\n\t\t\t\t\t<h3>회원가입</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} id=\"name\" onChange={onNameHandler} name='name' required />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email' required />\r\n\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><input className=\"ID-input\" type='text' placeholder='아이디' value={Id} onChange={onIDHandler} name='id' required /></li>\r\n\t\t\t\t\t\t<li><button type=\"button\" id=\"check\" onClick={checkId}>중복체크</button></li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<span>{ (checkMsg !== \"\") && (checkMsg) }</span>\r\n\r\n\t\t\t\t\t<label>비밀번호</label>\r\n\t\t\t\t\t<input className=\"PW-input\" type='password' placeholder='비밀번호' value={Pw} onChange={onPWHandler} name='pw' required />\r\n\r\n\t\t\t\t\t<label>\r\n\t\t\t\t\t\t<Link to=\"/login\">\r\n\t\t\t\t\t\t\t<button className=\"joinBtn\"> 로그인</button>\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t<button className=\"joinBtn\" type=\"submit\">등록</button>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SignUp;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\News.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Home.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\IdPw.js",["114","115"],"import React, {useState} from \"react\";\r\nimport \"../css/Components.css\";\r\n\r\nfunction IdPw() {\r\n\r\n\tconst [Name,setName] = useState(\"\")\r\n\tconst [Email,setEmail] = useState(\"\")\r\n\tconst [ID,setID] = useState(\"\")\r\n\tconst [PW,setPW] = useState(\"\")\r\n\tconst onNameHandler = (event) => { setName (event.currentTarget.value) }\r\n\tconst onEmailHandler = (event) => { setEmail (event.currentTarget.value) }\r\n\tconst onIDHandler = (event) => { setID (event.currentTarget.value) }\r\n\tconst onPWHandler = (event) => { setPW (event.currentTarget.value) }\r\n\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<div>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<h3>아이디 찾기</h3>\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\t\t\t\t\t<button className=\"get-id\"> 찾기</button>\r\n\r\n\t\t\t\t\t<hr/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h3>비밀번호 찾기</h3>\r\n\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t<input className=\"ID-input\" type='text' placeholder='아이디' value={ID} onChange={onIDHandler} name='id'/>\r\n\r\n\t\t\t\t\t<label>성명</label>\r\n\t\t\t\t\t<input className=\"Name-input\" type='text' placeholder='성명' value={Name} onChange={onNameHandler} name='name' />\r\n\r\n\t\t\t\t\t<label>이메일</label>\r\n\t\t\t\t\t<input className=\"Email-input\" type='email' placeholder='이메일' value={Email}  onChange={onEmailHandler} name='email'/>\r\n\r\n\t\t\t\t\t<button className=\"get-pw\"> 찾기</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default IdPw;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Forum.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Talk.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Hire.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrivateRoute.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Chat.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PublicRoute.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\routes\\Qna.js",[],"C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\Board.js",["116","117","118","119","120"],"import React, {useState, useEffect} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../css/Components.css\";\r\nimport striptags from 'striptags';\r\nimport Axios from 'axios';\r\nimport TagBox from \"./TagBox\";\r\n\r\nfunction Board(props) {\r\n\t// 페이징\r\n\tconst [viewContent, setViewContent] = useState([]);\r\n\tconst [curPage, setcurPage] = useState(0);\r\n\tconst [lastPage, setlastPage] = useState(0);\r\n\tconst [minbtn, setMinBtn] = useState(0);\r\n\tconst [maxbtn, setMaxBtn] = useState(0);\r\n\tlet array = [];\r\n\r\n\tconst [generalSearch, setGeneralSearch] = useState('');\r\n\tconst [searchValue, setSearchValue] = useState([]);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [searchtotal, setSearchTotal] = useState(0);\r\n\tconst onGeneralSearchHandler = (event) => {setGeneralSearch(event.currentTarget.value);}\r\n\tconst [loading, setLoading] = useState(false);\r\n\tconst [tags, setTags] = useState([]);\r\n\tlet tagarray = [];\r\n\r\n\tconst [tag, setTag] = useState([]);\r\n\r\n\tlet name = '';\r\n\tif(props.location !== undefined){\r\n\t\tname = props.match.path.split(\"/\").[1];\r\n\t}else{\r\n\t\tname = props.match.split(\"/\").[1];\r\n\t}\r\n\r\n    let search = \"태그\";\r\n    if (name === \"talk\") search = \"카테고리\";\r\n\r\n    const loadList = async () => {\r\n    \tlet url = \"http://localhost:8000/board/getBoard/1/qna\";\r\n    \tif(name === \"talk\") url = 'http://localhost:8000/board/getBoard/1/talk';\r\n    \tawait Axios.get(url).then((res)=>{\r\n\t\t\tsetViewContent(res.data.model.boardList);\r\n\t\t\tsetcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setTotal(res.data.model.total);\r\n\t\t})\r\n    }\r\n\r\n    const loadSearch = async () => {\r\n    \tif (props.location !== undefined){\r\n\t        let value = props.match.params.q;\r\n\t        let kind = props.match.params.kind;\r\n\t\t\tif (name === \"qna\") {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/searchqna', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0){\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\r\n\r\n\t\t\t} else {\r\n\t\t\t\tAxios.post('http://localhost:8000/board/searchtalk', {\r\n\t\t\t\t\tvalue : value,\r\n\t\t\t\t\tkind : kind\r\n\t\t\t\t}).then((response) => {\r\n\t\t\t\t\tif(response.data.length === 0)\r\n\t\t\t\t\t\tsetSearchValue([]);\r\n\t\t\t\t\telse{\r\n\t\t\t\t\t\tsetSearchValue(response.data);\r\n\t\t\t\t\t\tsetSearchTotal(searchValue.length);\r\n\t\t\t\t\t}})\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\t   \r\n  \r\n\r\n    const onClick = async (e) => {\r\n    \tconst idxs = e.target.dataset.idx;\r\n    \tlet url = \"http://localhost:8000/board/getBoard/\"+idxs+\"/qna\";\r\n    \tif(name === \"talk\") url = \"http://localhost:8000/board/getBoard/\"+idxs+\"/talk\";\r\n    \t\r\n        await Axios.get(url).then((res) => {\r\n            setcurPage(res.data.model.currentPage);\r\n            setlastPage(res.data.model.lastPage);\r\n            setMinBtn(res.data.model.minBtn);\r\n            setMaxBtn(res.data.model.maxBtn);\r\n            setViewContent(res.data.model.boardList);\r\n            setTotal(res.data.model.total);\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n    \tloadList();\r\n    \tloadSearch();\r\n\t\treturn () => setLoading(false);\r\n\t}, [searchValue])\r\n    \r\n    const searchBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(generalSearch.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/general/${generalSearch}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/general/${generalSearch}`);\r\n\t\t//props.history.push(`/${name}/search/${generalSearch}`);\r\n\t}\r\n\r\n    const searchTagsBtn = (e) => {\r\n    \tsetLoading(true);\r\n    \tif(tag.length ===0){\r\n    \t\treturn;\r\n    \t}\r\n    \tif(props.location !== undefined)\r\n\t\t\tprops.history.replace(`/${name}/search/tags/${tag}`);\r\n\t\telse\r\n\t\t\tprops.history.push(`/${name}/search/tags/${tag}`);\r\n\t\t//props.history.push(`/${name}/search/${generalSearch}`);\r\n\t}\r\n\r\n\tconst setOnTag = (tagset) =>{\r\n\t\tsetTag(tagset);\r\n\t}\r\n\r\n    return (   \t\r\n        <div className=\"menu__container\">\r\n\t\t\t<h2>{name.toUpperCase()}</h2>\t\t\r\n\t\t\t<div className=\"board_top\">\r\n\t\t\t\t{((viewContent.length !== 0)&&(searchValue.length === 0)) ? \r\n\t\t\t\t\t((props.location !== undefined) ? <p>총 게시물 0개 </p> : <p>총 게시물 {total}개</p>)\r\n\t\t\t\t: <p>총 게시물 {searchtotal}개</p>}\r\n\t\t\t\t<ul className=\"board_list\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<input type=\"text\" placeholder=\"검색\" onChange={onGeneralSearchHandler}/>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t<button type=\"submit\" onClick={searchBtn}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"tagSearch\">\r\n\t\t\t\t<div className=\"tagTitle left\">{search}검색</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<div className=\"tagInput left\">\r\n\t\t\t\t\t\t<TagBox change={setOnTag}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" onClick={searchTagsBtn}>\r\n\t\t\t\t\t\t<FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div className=\"tagBox\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"board_contents\">\r\n\t\t\t{(props.location !== undefined) ?\r\n\t\t\t\t((searchValue.length === 0) ? <div className=\"list\"><p><strong>\"{props.match.params.q}\"</strong>와(과) 일치하는 검색 결과가 없습니다</p></div> \r\n\t\t\t\t: List(searchValue, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t:\r\n\t\t\t\t((viewContent.length === 0) ? <div className=\"list\"><p>등록된 게시물이 없습니다</p></div>\r\n\t\t\t\t: List(viewContent, total, searchtotal, name, curPage, viewContent, searchValue))\r\n\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<Link to={`/${name}/writing`}>\r\n\t\t\t\t<button className=\"writeBtn\">글쓰기</button>\r\n\t\t\t</Link>\r\n\r\n\t\t\t{/* 페이징 */}\r\n\t\t\t<div className=\"paging\">\r\n\t\t\t\t{ (curPage !== 1) && (<button type=\"button\" onClick={onClick} data-idx={curPage-1}>이전</button>) }\r\n\t\t\t\t{\r\n\t\t\t\t\t(() => {\r\n\t\t\t\t\t\tfor(let i = minbtn; i < maxbtn; i++) {\r\n\t\t\t\t\t\t\tif(curPage === i) array.push(<button type=\"button\" className=\"checkBtn\" key={i} onClick={onClick} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\telse array.push(<button type=\"button\" onClick={onClick} key={i} data-idx={i}>{i}</button>);\r\n\t\t\t\t\t\t\tif(i >= lastPage) break;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn (array);\r\n\t\t\t\t\t})()\r\n\t\t\t\t}\r\n\t\t\t\t{ (curPage < lastPage) && (<button type=\"button\" onClick={onClick} data-idx={curPage+1}>다음</button>) }\r\n\t\t\t</div>\r\n\t\t</div>\r\n    );\r\n}\r\n\r\nfunction List(mapper, total, searchtotal, name, curPage, viewContent, searchValue){\r\n\treturn(\r\n\t\tmapper.map((element,i) =>(\r\n\t\t\t<div className=\"list\" key={element.idx}>\r\n\t\t\t\t<div className=\"left\">\r\n\t\t\t\t\t{(viewContent.length !== 0)&&(searchValue.length === 0) ? <h3>Q.{total - i - ((curPage-1)*5)}</h3> : <h3>Q.{searchtotal - i - ((curPage-1)*5)}</h3>}\r\n\r\n\t\t\t\t\t<p>답변 - {element.commentN}개</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={{\r\n\t\t\t\t\t\t\tpathname: `/${name}/post/${element.idx}`\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<h3>{element.title}</h3>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<p>{striptags(element.contents)}</p>\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"tags left\">\r\n\t\t\t\t\t\t\t{element.category && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.category1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category1}`}>{element.category1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category2}`}>{element.category2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.category3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.category3}`}>{element.category3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{element.tag && (\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t{(element.tag1 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag1}`}>{element.tag1}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag2 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag2}`}>{element.tag2}</Link>}\r\n\t\t\t\t\t\t\t\t\t{(element.tag3 !== null) && \r\n\t\t\t\t\t\t\t\t\t<Link to={`/${name}/search/tag/${element.tag3}`}>{element.tag3}</Link>}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"info right\">\r\n\t\t\t\t\t\t\t<p>작성자 : <span className=\"writer\">{element.writer}</span> &nbsp;&nbsp;조회수 : <span className=\"hit\">{element.hit}</span></p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t))\r\n\t);\r\n}\r\n\r\nexport default Board;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\components\\TagBox.js",["121","122"],"import React, {useState, useCallback, useEffect } from \"react\";\r\nimport \"../css/Components.css\";\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n\t<div className=\"tagtest\">{tag}<button className=\"btntest\" onClick={() => onRemove(tag)}>x</button></div>\r\n));\r\n\r\nconst TagList = React.memo(({tags, onRemove}) => (\r\n\t<div>\r\n\t\t{tags.map(tag => (\r\n\t\t\t<TagItem key={tag} tag={tag} onRemove={onRemove}/>\r\n\t\t))}\r\n\t</div>\r\n));\r\n\r\nconst TagBox = ({change}) => {\r\n\tconst [input, setInput] = useState('');\r\n\tconst [localTags, setLocalTags] = useState([]);\r\n\r\n\tconst tagSet = (localTags) =>{\r\n\t\tchange(localTags);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\ttagSet(localTags);\r\n\t}, [localTags]);\r\n\r\n\tconst insertTag = useCallback(\r\n\t\ttag => {\r\n\t\t\tif(!tag) return;\r\n\t\t\tif(localTags.includes(tag)) return;\r\n\t\t\tif(localTags.length < 3){\r\n\t\t\t\tsetLocalTags([...localTags, tag]);\r\n\t\t\t}\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\r\n\tconst onRemove = useCallback(\r\n\t\ttag => {\r\n\t\t\tsetLocalTags(localTags.filter(t => t !== tag));\r\n\t\t},\r\n\t\t[localTags],\r\n\t);\r\n\r\n\tconst onChange = useCallback(e => {\r\n\t\tsetInput(e.target.value);\r\n\t}, []);\r\n\r\n\tconst onSubmit = useCallback(\r\n\t\te => {\r\n\t\t\tinsertTag(input.trim());\r\n\t\t\tsetInput('');\r\n\t\t},\r\n\t\t[input, insertTag],\r\n\t);\r\n\r\n\tconst handleKeyPress = useCallback(e =>{\r\n\t\tif(e.keyCode === 32)\r\n\t\t\tonSubmit();\r\n\t})\t\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"tag-box\">\r\n\t\t\t<span className=\"tag-list left\">\r\n\t\t\t\t<TagList tags={localTags} onRemove={onRemove}/>\r\n\t\t\t</span>\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"tag-input\"\r\n\t\t\t\tplaceholder=\"태그를 입력하세요\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t\tonKeyDown={handleKeyPress}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TagBox;","C:\\Users\\qhsl0\\Documents\\beginner_gain\\client\\src\\lib\\PrismImport.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":19,"column":8,"nodeType":"129","messageId":"130","endLine":19,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":35,"column":5,"nodeType":"133","endLine":35,"endColumn":7,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":60,"column":8,"nodeType":"133","endLine":60,"endColumn":10,"suggestions":"136"},{"ruleId":"131","severity":1,"message":"137","line":205,"column":8,"nodeType":"133","endLine":205,"endColumn":10,"suggestions":"138"},{"ruleId":"127","severity":1,"message":"139","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"141","line":39,"column":9,"nodeType":"142","messageId":"143","endLine":39,"endColumn":11},{"ruleId":"127","severity":1,"message":"144","line":9,"column":9,"nodeType":"129","messageId":"130","endLine":9,"endColumn":11},{"ruleId":"127","severity":1,"message":"145","line":13,"column":8,"nodeType":"129","messageId":"130","endLine":13,"endColumn":19},{"ruleId":"127","severity":1,"message":"146","line":24,"column":9,"nodeType":"129","messageId":"130","endLine":24,"endColumn":16},{"ruleId":"127","severity":1,"message":"147","line":25,"column":9,"nodeType":"129","messageId":"130","endLine":25,"endColumn":13},{"ruleId":"127","severity":1,"message":"148","line":25,"column":15,"nodeType":"129","messageId":"130","endLine":25,"endColumn":22},{"ruleId":"127","severity":1,"message":"149","line":26,"column":6,"nodeType":"129","messageId":"130","endLine":26,"endColumn":14},{"ruleId":"131","severity":1,"message":"150","line":105,"column":5,"nodeType":"133","endLine":105,"endColumn":18,"suggestions":"151"},{"ruleId":"131","severity":1,"message":"152","line":26,"column":5,"nodeType":"133","endLine":26,"endColumn":16,"suggestions":"153"},{"ruleId":"131","severity":1,"message":"154","line":58,"column":25,"nodeType":"129","endLine":58,"endColumn":36},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'NotFound' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'post.contents' and 'post.title'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setTitle' needs the current value of 'post.title'.","ArrayExpression",["157"],"React Hook useCallback has missing dependencies: 'idx' and 'name'. Either include them or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'hitUpdate'. Either include it or remove the dependency array.",["159"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PW' is assigned a value but never used.","'onPWHandler' is assigned a value but never used.","'loading' is assigned a value but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'tagarray' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadList' and 'loadSearch'. Either include them or remove the dependency array.",["160"],"React Hook useEffect has a missing dependency: 'tagSet'. Either include it or remove the dependency array.",["161"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},"Update the dependencies array to be: [post.contents, post.title]",{"range":"172","text":"173"},"Update the dependencies array to be: [idx, name]",{"range":"174","text":"175"},"Update the dependencies array to be: [hitUpdate]",{"range":"176","text":"177"},"Update the dependencies array to be: [loadList, loadSearch, searchValue]",{"range":"178","text":"179"},"Update the dependencies array to be: [localTags, tagSet]",{"range":"180","text":"181"},[1351,1353],"[post.contents, post.title]",[2256,2258],"[idx, name]",[7040,7042],"[hitUpdate]",[3359,3372],"[loadList, loadSearch, searchValue]",[661,672],"[localTags, tagSet]"]